//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 

using System;

namespace MSRecordsEngine.RecordsManager
{
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    //[global::System.Serializable()]
    //[global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    //[global::System.Xml.Serialization.XmlRootAttribute("RecordsManage")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RecordsManage : global::System.Data.DataSet
    {
        public static string HandleDBNull(object param)
        {
            if (param is DBNull) return "";
            return param.ToString();
        }

        private SLTableFileRoomOrderDataTable tableSLTableFileRoomOrder;

        private RelationShipsDataTable tableRelationShips;

        private TabsetsDataTable tableTabsets;

        private ScanListDataTable tableScanList;

        private SLRequestorDataTable tableSLRequestor;

        private FolderStatusDataTable tableFolderStatus;

        private TrackingDataTable tableTracking;

        private TablesDataTable tableTables;

        private TabletabsDataTable tableTabletabs;

        private ViewColumnsDataTable tableViewColumns;

        private StatusHistoryDataTable tableStatusHistory;

        private LinkScriptHeaderDataTable tableLinkScriptHeader;

        private LinkScriptDataTable tableLinkScript;

        private TrackingHistoryDataTable tableTrackingHistory;

        private ViewsDataTable tableViews;

        private SLTextSearchItemsDataTable tableSLTextSearchItems;

        private PrimaryKeyDataTable tablePrimaryKey;

        private SystemDataTable tableSystem;

        private DataTable1DataTable tableDataTable1;

        private EmployeesDataTable tableEmployees;

        private ChildViewsDataTable tableChildViews;

        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RecordsManage()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RecordsManage(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context, false)
        {
            if ((this.IsBinarySerialized(info, context) == true))
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SLTableFileRoomOrder"] != null))
                {
                    base.Tables.Add(new SLTableFileRoomOrderDataTable(ds.Tables["SLTableFileRoomOrder"]));
                }
                if ((ds.Tables["RelationShips"] != null))
                {
                    base.Tables.Add(new RelationShipsDataTable(ds.Tables["RelationShips"]));
                }
                if ((ds.Tables["Tabsets"] != null))
                {
                    base.Tables.Add(new TabsetsDataTable(ds.Tables["Tabsets"]));
                }
                if ((ds.Tables["ScanList"] != null))
                {
                    base.Tables.Add(new ScanListDataTable(ds.Tables["ScanList"]));
                }
                if ((ds.Tables["SLRequestor"] != null))
                {
                    base.Tables.Add(new SLRequestorDataTable(ds.Tables["SLRequestor"]));
                }
                if ((ds.Tables["FolderStatus"] != null))
                {
                    base.Tables.Add(new FolderStatusDataTable(ds.Tables["FolderStatus"]));
                }
                if ((ds.Tables["Tracking"] != null))
                {
                    base.Tables.Add(new TrackingDataTable(ds.Tables["Tracking"]));
                }
                if ((ds.Tables["Tables"] != null))
                {
                    base.Tables.Add(new TablesDataTable(ds.Tables["Tables"]));
                }
                if ((ds.Tables["Tabletabs"] != null))
                {
                    base.Tables.Add(new TabletabsDataTable(ds.Tables["Tabletabs"]));
                }
                if ((ds.Tables["ViewColumns"] != null))
                {
                    base.Tables.Add(new ViewColumnsDataTable(ds.Tables["ViewColumns"]));
                }
                if ((ds.Tables["StatusHistory"] != null))
                {
                    base.Tables.Add(new StatusHistoryDataTable(ds.Tables["StatusHistory"]));
                }
                if ((ds.Tables["LinkScriptHeader"] != null))
                {
                    base.Tables.Add(new LinkScriptHeaderDataTable(ds.Tables["LinkScriptHeader"]));
                }
                if ((ds.Tables["LinkScript"] != null))
                {
                    base.Tables.Add(new LinkScriptDataTable(ds.Tables["LinkScript"]));
                }
                if ((ds.Tables["TrackingHistory"] != null))
                {
                    base.Tables.Add(new TrackingHistoryDataTable(ds.Tables["TrackingHistory"]));
                }
                if ((ds.Tables["Views"] != null))
                {
                    base.Tables.Add(new ViewsDataTable(ds.Tables["Views"]));
                }
                if ((ds.Tables["SLTextSearchItems"] != null))
                {
                    base.Tables.Add(new SLTextSearchItemsDataTable(ds.Tables["SLTextSearchItems"]));
                }
                if ((ds.Tables["PrimaryKey"] != null))
                {
                    base.Tables.Add(new PrimaryKeyDataTable(ds.Tables["PrimaryKey"]));
                }
                if ((ds.Tables["System"] != null))
                {
                    base.Tables.Add(new SystemDataTable(ds.Tables["System"]));
                }
                if ((ds.Tables["DataTable1"] != null))
                {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["Employees"] != null))
                {
                    base.Tables.Add(new EmployeesDataTable(ds.Tables["Employees"]));
                }
                if ((ds.Tables["ChildViews"] != null))
                {
                    base.Tables.Add(new ChildViewsDataTable(ds.Tables["ChildViews"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SLTableFileRoomOrderDataTable SLTableFileRoomOrder
        {
            get
            {
                return this.tableSLTableFileRoomOrder;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelationShipsDataTable RelationShips
        {
            get
            {
                return this.tableRelationShips;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TabsetsDataTable Tabsets
        {
            get
            {
                return this.tableTabsets;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ScanListDataTable ScanList
        {
            get
            {
                return this.tableScanList;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SLRequestorDataTable SLRequestor
        {
            get
            {
                return this.tableSLRequestor;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FolderStatusDataTable FolderStatus
        {
            get
            {
                return this.tableFolderStatus;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TrackingDataTable Tracking
        {
            get
            {
                return this.tableTracking;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TablesDataTable _Tables
        {
            get
            {
                return this.tableTables;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TabletabsDataTable Tabletabs
        {
            get
            {
                return this.tableTabletabs;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ViewColumnsDataTable ViewColumns
        {
            get
            {
                return this.tableViewColumns;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StatusHistoryDataTable StatusHistory
        {
            get
            {
                return this.tableStatusHistory;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LinkScriptHeaderDataTable LinkScriptHeader
        {
            get
            {
                return this.tableLinkScriptHeader;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LinkScriptDataTable LinkScript
        {
            get
            {
                return this.tableLinkScript;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TrackingHistoryDataTable TrackingHistory
        {
            get
            {
                return this.tableTrackingHistory;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ViewsDataTable Views
        {
            get
            {
                return this.tableViews;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SLTextSearchItemsDataTable SLTextSearchItems
        {
            get
            {
                return this.tableSLTextSearchItems;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PrimaryKeyDataTable PrimaryKey
        {
            get
            {
                return this.tablePrimaryKey;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SystemDataTable System
        {
            get
            {
                return this.tableSystem;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1
        {
            get
            {
                return this.tableDataTable1;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmployeesDataTable Employees
        {
            get
            {
                return this.tableEmployees;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChildViewsDataTable ChildViews
        {
            get
            {
                return this.tableChildViews;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone()
        {
            RecordsManage cln = ((RecordsManage)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SLTableFileRoomOrder"] != null))
                {
                    base.Tables.Add(new SLTableFileRoomOrderDataTable(ds.Tables["SLTableFileRoomOrder"]));
                }
                if ((ds.Tables["RelationShips"] != null))
                {
                    base.Tables.Add(new RelationShipsDataTable(ds.Tables["RelationShips"]));
                }
                if ((ds.Tables["Tabsets"] != null))
                {
                    base.Tables.Add(new TabsetsDataTable(ds.Tables["Tabsets"]));
                }
                if ((ds.Tables["ScanList"] != null))
                {
                    base.Tables.Add(new ScanListDataTable(ds.Tables["ScanList"]));
                }
                if ((ds.Tables["SLRequestor"] != null))
                {
                    base.Tables.Add(new SLRequestorDataTable(ds.Tables["SLRequestor"]));
                }
                if ((ds.Tables["FolderStatus"] != null))
                {
                    base.Tables.Add(new FolderStatusDataTable(ds.Tables["FolderStatus"]));
                }
                if ((ds.Tables["Tracking"] != null))
                {
                    base.Tables.Add(new TrackingDataTable(ds.Tables["Tracking"]));
                }
                if ((ds.Tables["Tables"] != null))
                {
                    base.Tables.Add(new TablesDataTable(ds.Tables["Tables"]));
                }
                if ((ds.Tables["Tabletabs"] != null))
                {
                    base.Tables.Add(new TabletabsDataTable(ds.Tables["Tabletabs"]));
                }
                if ((ds.Tables["ViewColumns"] != null))
                {
                    base.Tables.Add(new ViewColumnsDataTable(ds.Tables["ViewColumns"]));
                }
                if ((ds.Tables["StatusHistory"] != null))
                {
                    base.Tables.Add(new StatusHistoryDataTable(ds.Tables["StatusHistory"]));
                }
                if ((ds.Tables["LinkScriptHeader"] != null))
                {
                    base.Tables.Add(new LinkScriptHeaderDataTable(ds.Tables["LinkScriptHeader"]));
                }
                if ((ds.Tables["LinkScript"] != null))
                {
                    base.Tables.Add(new LinkScriptDataTable(ds.Tables["LinkScript"]));
                }
                if ((ds.Tables["TrackingHistory"] != null))
                {
                    base.Tables.Add(new TrackingHistoryDataTable(ds.Tables["TrackingHistory"]));
                }
                if ((ds.Tables["Views"] != null))
                {
                    base.Tables.Add(new ViewsDataTable(ds.Tables["Views"]));
                }
                if ((ds.Tables["SLTextSearchItems"] != null))
                {
                    base.Tables.Add(new SLTextSearchItemsDataTable(ds.Tables["SLTextSearchItems"]));
                }
                if ((ds.Tables["PrimaryKey"] != null))
                {
                    base.Tables.Add(new PrimaryKeyDataTable(ds.Tables["PrimaryKey"]));
                }
                if ((ds.Tables["System"] != null))
                {
                    base.Tables.Add(new SystemDataTable(ds.Tables["System"]));
                }
                if ((ds.Tables["DataTable1"] != null))
                {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["Employees"] != null))
                {
                    base.Tables.Add(new EmployeesDataTable(ds.Tables["Employees"]));
                }
                if ((ds.Tables["ChildViews"] != null))
                {
                    base.Tables.Add(new ChildViewsDataTable(ds.Tables["ChildViews"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.InitVars(true);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable)
        {
            this.tableSLTableFileRoomOrder = ((SLTableFileRoomOrderDataTable)(base.Tables["SLTableFileRoomOrder"]));
            if ((initTable == true))
            {
                if ((this.tableSLTableFileRoomOrder != null))
                {
                    this.tableSLTableFileRoomOrder.InitVars();
                }
            }
            this.tableRelationShips = ((RelationShipsDataTable)(base.Tables["RelationShips"]));
            if ((initTable == true))
            {
                if ((this.tableRelationShips != null))
                {
                    this.tableRelationShips.InitVars();
                }
            }
            this.tableTabsets = ((TabsetsDataTable)(base.Tables["Tabsets"]));
            if ((initTable == true))
            {
                if ((this.tableTabsets != null))
                {
                    this.tableTabsets.InitVars();
                }
            }
            this.tableScanList = ((ScanListDataTable)(base.Tables["ScanList"]));
            if ((initTable == true))
            {
                if ((this.tableScanList != null))
                {
                    this.tableScanList.InitVars();
                }
            }
            this.tableSLRequestor = ((SLRequestorDataTable)(base.Tables["SLRequestor"]));
            if ((initTable == true))
            {
                if ((this.tableSLRequestor != null))
                {
                    this.tableSLRequestor.InitVars();
                }
            }
            this.tableFolderStatus = ((FolderStatusDataTable)(base.Tables["FolderStatus"]));
            if ((initTable == true))
            {
                if ((this.tableFolderStatus != null))
                {
                    this.tableFolderStatus.InitVars();
                }
            }
            this.tableTracking = ((TrackingDataTable)(base.Tables["Tracking"]));
            if ((initTable == true))
            {
                if ((this.tableTracking != null))
                {
                    this.tableTracking.InitVars();
                }
            }
            this.tableTables = ((TablesDataTable)(base.Tables["Tables"]));
            if ((initTable == true))
            {
                if ((this.tableTables != null))
                {
                    this.tableTables.InitVars();
                }
            }
            this.tableTabletabs = ((TabletabsDataTable)(base.Tables["Tabletabs"]));
            if ((initTable == true))
            {
                if ((this.tableTabletabs != null))
                {
                    this.tableTabletabs.InitVars();
                }
            }
            this.tableViewColumns = ((ViewColumnsDataTable)(base.Tables["ViewColumns"]));
            if ((initTable == true))
            {
                if ((this.tableViewColumns != null))
                {
                    this.tableViewColumns.InitVars();
                }
            }
            this.tableStatusHistory = ((StatusHistoryDataTable)(base.Tables["StatusHistory"]));
            if ((initTable == true))
            {
                if ((this.tableStatusHistory != null))
                {
                    this.tableStatusHistory.InitVars();
                }
            }
            this.tableLinkScriptHeader = ((LinkScriptHeaderDataTable)(base.Tables["LinkScriptHeader"]));
            if ((initTable == true))
            {
                if ((this.tableLinkScriptHeader != null))
                {
                    this.tableLinkScriptHeader.InitVars();
                }
            }
            this.tableLinkScript = ((LinkScriptDataTable)(base.Tables["LinkScript"]));
            if ((initTable == true))
            {
                if ((this.tableLinkScript != null))
                {
                    this.tableLinkScript.InitVars();
                }
            }
            this.tableTrackingHistory = ((TrackingHistoryDataTable)(base.Tables["TrackingHistory"]));
            if ((initTable == true))
            {
                if ((this.tableTrackingHistory != null))
                {
                    this.tableTrackingHistory.InitVars();
                }
            }
            this.tableViews = ((ViewsDataTable)(base.Tables["Views"]));
            if ((initTable == true))
            {
                if ((this.tableViews != null))
                {
                    this.tableViews.InitVars();
                }
            }
            this.tableSLTextSearchItems = ((SLTextSearchItemsDataTable)(base.Tables["SLTextSearchItems"]));
            if ((initTable == true))
            {
                if ((this.tableSLTextSearchItems != null))
                {
                    this.tableSLTextSearchItems.InitVars();
                }
            }
            this.tablePrimaryKey = ((PrimaryKeyDataTable)(base.Tables["PrimaryKey"]));
            if ((initTable == true))
            {
                if ((this.tablePrimaryKey != null))
                {
                    this.tablePrimaryKey.InitVars();
                }
            }
            this.tableSystem = ((SystemDataTable)(base.Tables["System"]));
            if ((initTable == true))
            {
                if ((this.tableSystem != null))
                {
                    this.tableSystem.InitVars();
                }
            }
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true))
            {
                if ((this.tableDataTable1 != null))
                {
                    this.tableDataTable1.InitVars();
                }
            }
            this.tableEmployees = ((EmployeesDataTable)(base.Tables["Employees"]));
            if ((initTable == true))
            {
                if ((this.tableEmployees != null))
                {
                    this.tableEmployees.InitVars();
                }
            }
            this.tableChildViews = ((ChildViewsDataTable)(base.Tables["ChildViews"]));
            if ((initTable == true))
            {
                if ((this.tableChildViews != null))
                {
                    this.tableChildViews.InitVars();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.DataSetName = "RecordsManage";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RecordsManage.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSLTableFileRoomOrder = new SLTableFileRoomOrderDataTable();
            base.Tables.Add(this.tableSLTableFileRoomOrder);
            this.tableRelationShips = new RelationShipsDataTable();
            base.Tables.Add(this.tableRelationShips);
            this.tableTabsets = new TabsetsDataTable();
            base.Tables.Add(this.tableTabsets);
            this.tableScanList = new ScanListDataTable();
            base.Tables.Add(this.tableScanList);
            this.tableSLRequestor = new SLRequestorDataTable();
            base.Tables.Add(this.tableSLRequestor);
            this.tableFolderStatus = new FolderStatusDataTable();
            base.Tables.Add(this.tableFolderStatus);
            this.tableTracking = new TrackingDataTable();
            base.Tables.Add(this.tableTracking);
            this.tableTables = new TablesDataTable();
            base.Tables.Add(this.tableTables);
            this.tableTabletabs = new TabletabsDataTable();
            base.Tables.Add(this.tableTabletabs);
            this.tableViewColumns = new ViewColumnsDataTable();
            base.Tables.Add(this.tableViewColumns);
            this.tableStatusHistory = new StatusHistoryDataTable();
            base.Tables.Add(this.tableStatusHistory);
            this.tableLinkScriptHeader = new LinkScriptHeaderDataTable();
            base.Tables.Add(this.tableLinkScriptHeader);
            this.tableLinkScript = new LinkScriptDataTable();
            base.Tables.Add(this.tableLinkScript);
            this.tableTrackingHistory = new TrackingHistoryDataTable();
            base.Tables.Add(this.tableTrackingHistory);
            this.tableViews = new ViewsDataTable();
            base.Tables.Add(this.tableViews);
            this.tableSLTextSearchItems = new SLTextSearchItemsDataTable();
            base.Tables.Add(this.tableSLTextSearchItems);
            this.tablePrimaryKey = new PrimaryKeyDataTable();
            base.Tables.Add(this.tablePrimaryKey);
            this.tableSystem = new SystemDataTable();
            base.Tables.Add(this.tableSystem);
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
            this.tableEmployees = new EmployeesDataTable();
            base.Tables.Add(this.tableEmployees);
            this.tableChildViews = new ChildViewsDataTable();
            base.Tables.Add(this.tableChildViews);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSLTableFileRoomOrder()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRelationShips()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTabsets()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeScanList()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSLRequestor()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFolderStatus()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTracking()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_Tables()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTabletabs()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeViewColumns()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStatusHistory()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLinkScriptHeader()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLinkScript()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTrackingHistory()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeViews()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSLTextSearchItems()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePrimaryKey()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSystem()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable1()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEmployees()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeChildViews()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            RecordsManage ds = new RecordsManage();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SLTableFileRoomOrderRowChangeEventHandler(object sender, SLTableFileRoomOrderRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RelationShipsRowChangeEventHandler(object sender, RelationShipsRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TabsetsRowChangeEventHandler(object sender, TabsetsRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ScanListRowChangeEventHandler(object sender, ScanListRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SLRequestorRowChangeEventHandler(object sender, SLRequestorRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FolderStatusRowChangeEventHandler(object sender, FolderStatusRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TrackingRowChangeEventHandler(object sender, TrackingRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TablesRowChangeEventHandler(object sender, TablesRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TabletabsRowChangeEventHandler(object sender, TabletabsRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ViewColumnsRowChangeEventHandler(object sender, ViewColumnsRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StatusHistoryRowChangeEventHandler(object sender, StatusHistoryRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LinkScriptHeaderRowChangeEventHandler(object sender, LinkScriptHeaderRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LinkScriptRowChangeEventHandler(object sender, LinkScriptRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TrackingHistoryRowChangeEventHandler(object sender, TrackingHistoryRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ViewsRowChangeEventHandler(object sender, ViewsRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SLTextSearchItemsRowChangeEventHandler(object sender, SLTextSearchItemsRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PrimaryKeyRowChangeEventHandler(object sender, PrimaryKeyRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SystemRowChangeEventHandler(object sender, SystemRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EmployeesRowChangeEventHandler(object sender, EmployeesRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ChildViewsRowChangeEventHandler(object sender, ChildViewsRowChangeEvent e);

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SLTableFileRoomOrderDataTable : global::System.Data.TypedTableBase<SLTableFileRoomOrderRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnTableName;

            private global::System.Data.DataColumn columnFieldName;

            private global::System.Data.DataColumn columnStartFromFront;

            private global::System.Data.DataColumn columnStartingPosition;

            private global::System.Data.DataColumn columnNumberofCharacters;

            private global::System.Data.DataColumn columnFieldFormat;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTableFileRoomOrderDataTable()
            {
                this.TableName = "SLTableFileRoomOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SLTableFileRoomOrderDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SLTableFileRoomOrderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TableNameColumn
            {
                get
                {
                    return this.columnTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FieldNameColumn
            {
                get
                {
                    return this.columnFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartFromFrontColumn
            {
                get
                {
                    return this.columnStartFromFront;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartingPositionColumn
            {
                get
                {
                    return this.columnStartingPosition;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberofCharactersColumn
            {
                get
                {
                    return this.columnNumberofCharacters;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FieldFormatColumn
            {
                get
                {
                    return this.columnFieldFormat;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTableFileRoomOrderRow this[int index]
            {
                get
                {
                    return ((SLTableFileRoomOrderRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLTableFileRoomOrderRowChangeEventHandler SLTableFileRoomOrderRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLTableFileRoomOrderRowChangeEventHandler SLTableFileRoomOrderRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLTableFileRoomOrderRowChangeEventHandler SLTableFileRoomOrderRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLTableFileRoomOrderRowChangeEventHandler SLTableFileRoomOrderRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSLTableFileRoomOrderRow(SLTableFileRoomOrderRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTableFileRoomOrderRow AddSLTableFileRoomOrderRow(string TableName, string FieldName, bool StartFromFront, int StartingPosition, int NumberofCharacters, string FieldFormat)
            {
                SLTableFileRoomOrderRow rowSLTableFileRoomOrderRow = ((SLTableFileRoomOrderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    TableName,
                    FieldName,
                    StartFromFront,
                    StartingPosition,
                    NumberofCharacters,
                    FieldFormat};
                rowSLTableFileRoomOrderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSLTableFileRoomOrderRow);
                return rowSLTableFileRoomOrderRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTableFileRoomOrderRow FindById(int Id)
            {
                return ((SLTableFileRoomOrderRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                SLTableFileRoomOrderDataTable cln = ((SLTableFileRoomOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new SLTableFileRoomOrderDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnTableName = base.Columns["TableName"];
                this.columnFieldName = base.Columns["FieldName"];
                this.columnStartFromFront = base.Columns["StartFromFront"];
                this.columnStartingPosition = base.Columns["StartingPosition"];
                this.columnNumberofCharacters = base.Columns["NumberofCharacters"];
                this.columnFieldFormat = base.Columns["FieldFormat"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnTableName = new global::System.Data.DataColumn("TableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableName);
                this.columnFieldName = new global::System.Data.DataColumn("FieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldName);
                this.columnStartFromFront = new global::System.Data.DataColumn("StartFromFront", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartFromFront);
                this.columnStartingPosition = new global::System.Data.DataColumn("StartingPosition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartingPosition);
                this.columnNumberofCharacters = new global::System.Data.DataColumn("NumberofCharacters", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberofCharacters);
                this.columnFieldFormat = new global::System.Data.DataColumn("FieldFormat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldFormat);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnTableName.MaxLength = 30;
                this.columnFieldName.MaxLength = 50;
                this.columnFieldFormat.MaxLength = 50;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTableFileRoomOrderRow NewSLTableFileRoomOrderRow()
            {
                return ((SLTableFileRoomOrderRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new SLTableFileRoomOrderRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(SLTableFileRoomOrderRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SLTableFileRoomOrderRowChanged != null))
                {
                    this.SLTableFileRoomOrderRowChanged(this, new SLTableFileRoomOrderRowChangeEvent(((SLTableFileRoomOrderRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SLTableFileRoomOrderRowChanging != null))
                {
                    this.SLTableFileRoomOrderRowChanging(this, new SLTableFileRoomOrderRowChangeEvent(((SLTableFileRoomOrderRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SLTableFileRoomOrderRowDeleted != null))
                {
                    this.SLTableFileRoomOrderRowDeleted(this, new SLTableFileRoomOrderRowChangeEvent(((SLTableFileRoomOrderRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SLTableFileRoomOrderRowDeleting != null))
                {
                    this.SLTableFileRoomOrderRowDeleting(this, new SLTableFileRoomOrderRowChangeEvent(((SLTableFileRoomOrderRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSLTableFileRoomOrderRow(SLTableFileRoomOrderRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SLTableFileRoomOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelationShipsDataTable : global::System.Data.TypedTableBase<RelationShipsRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnUpperTableName;

            private global::System.Data.DataColumn columnUpperTableFieldName;

            private global::System.Data.DataColumn columnLowerTableName;

            private global::System.Data.DataColumn columnLowerTableFieldName;

            private global::System.Data.DataColumn columnTabOrder;

            private global::System.Data.DataColumn columnIdTypes;

            private global::System.Data.DataColumn columnDrillDownViewGroup;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationShipsDataTable()
            {
                this.TableName = "RelationShips";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RelationShipsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RelationShipsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpperTableNameColumn
            {
                get
                {
                    return this.columnUpperTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpperTableFieldNameColumn
            {
                get
                {
                    return this.columnUpperTableFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LowerTableNameColumn
            {
                get
                {
                    return this.columnLowerTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LowerTableFieldNameColumn
            {
                get
                {
                    return this.columnLowerTableFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabOrderColumn
            {
                get
                {
                    return this.columnTabOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdTypesColumn
            {
                get
                {
                    return this.columnIdTypes;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrillDownViewGroupColumn
            {
                get
                {
                    return this.columnDrillDownViewGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationShipsRow this[int index]
            {
                get
                {
                    return ((RelationShipsRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationShipsRowChangeEventHandler RelationShipsRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationShipsRowChangeEventHandler RelationShipsRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationShipsRowChangeEventHandler RelationShipsRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationShipsRowChangeEventHandler RelationShipsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRelationShipsRow(RelationShipsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationShipsRow AddRelationShipsRow(string UpperTableName, string UpperTableFieldName, string LowerTableName, string LowerTableFieldName, short TabOrder, short IdTypes, int DrillDownViewGroup)
            {
                RelationShipsRow rowRelationShipsRow = ((RelationShipsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    UpperTableName,
                    UpperTableFieldName,
                    LowerTableName,
                    LowerTableFieldName,
                    TabOrder,
                    IdTypes,
                    DrillDownViewGroup};
                rowRelationShipsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelationShipsRow);
                return rowRelationShipsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationShipsRow FindById(int Id)
            {
                return ((RelationShipsRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                RelationShipsDataTable cln = ((RelationShipsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new RelationShipsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnUpperTableName = base.Columns["UpperTableName"];
                this.columnUpperTableFieldName = base.Columns["UpperTableFieldName"];
                this.columnLowerTableName = base.Columns["LowerTableName"];
                this.columnLowerTableFieldName = base.Columns["LowerTableFieldName"];
                this.columnTabOrder = base.Columns["TabOrder"];
                this.columnIdTypes = base.Columns["IdTypes"];
                this.columnDrillDownViewGroup = base.Columns["DrillDownViewGroup"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnUpperTableName = new global::System.Data.DataColumn("UpperTableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpperTableName);
                this.columnUpperTableFieldName = new global::System.Data.DataColumn("UpperTableFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpperTableFieldName);
                this.columnLowerTableName = new global::System.Data.DataColumn("LowerTableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowerTableName);
                this.columnLowerTableFieldName = new global::System.Data.DataColumn("LowerTableFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowerTableFieldName);
                this.columnTabOrder = new global::System.Data.DataColumn("TabOrder", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabOrder);
                this.columnIdTypes = new global::System.Data.DataColumn("IdTypes", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdTypes);
                this.columnDrillDownViewGroup = new global::System.Data.DataColumn("DrillDownViewGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrillDownViewGroup);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnUpperTableName.MaxLength = 30;
                this.columnUpperTableFieldName.MaxLength = 51;
                this.columnLowerTableName.MaxLength = 30;
                this.columnLowerTableFieldName.MaxLength = 51;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationShipsRow NewRelationShipsRow()
            {
                return ((RelationShipsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new RelationShipsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(RelationShipsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.RelationShipsRowChanged != null))
                {
                    this.RelationShipsRowChanged(this, new RelationShipsRowChangeEvent(((RelationShipsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.RelationShipsRowChanging != null))
                {
                    this.RelationShipsRowChanging(this, new RelationShipsRowChangeEvent(((RelationShipsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.RelationShipsRowDeleted != null))
                {
                    this.RelationShipsRowDeleted(this, new RelationShipsRowChangeEvent(((RelationShipsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.RelationShipsRowDeleting != null))
                {
                    this.RelationShipsRowDeleting(this, new RelationShipsRowChangeEvent(((RelationShipsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRelationShipsRow(RelationShipsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelationShipsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TabsetsDataTable : global::System.Data.TypedTableBase<TabsetsRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnUserName;

            private global::System.Data.DataColumn columnTabFontName;

            private global::System.Data.DataColumn columnTabFontSize;

            private global::System.Data.DataColumn columnTabFontBold;

            private global::System.Data.DataColumn columnTabMaxWidth;

            private global::System.Data.DataColumn columnTabCutSize;

            private global::System.Data.DataColumn columnTabHeight;

            private global::System.Data.DataColumn columnTabRowOffset;

            private global::System.Data.DataColumn columnTabShape;

            private global::System.Data.DataColumn columnViewGroup;

            private global::System.Data.DataColumn columnStartupTabset;

            private global::System.Data.DataColumn columnPicture;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabsetsDataTable()
            {
                this.TableName = "Tabsets";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TabsetsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TabsetsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserNameColumn
            {
                get
                {
                    return this.columnUserName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabFontNameColumn
            {
                get
                {
                    return this.columnTabFontName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabFontSizeColumn
            {
                get
                {
                    return this.columnTabFontSize;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabFontBoldColumn
            {
                get
                {
                    return this.columnTabFontBold;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabMaxWidthColumn
            {
                get
                {
                    return this.columnTabMaxWidth;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabCutSizeColumn
            {
                get
                {
                    return this.columnTabCutSize;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabHeightColumn
            {
                get
                {
                    return this.columnTabHeight;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabRowOffsetColumn
            {
                get
                {
                    return this.columnTabRowOffset;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabShapeColumn
            {
                get
                {
                    return this.columnTabShape;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ViewGroupColumn
            {
                get
                {
                    return this.columnViewGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartupTabsetColumn
            {
                get
                {
                    return this.columnStartupTabset;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PictureColumn
            {
                get
                {
                    return this.columnPicture;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabsetsRow this[int index]
            {
                get
                {
                    return ((TabsetsRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TabsetsRowChangeEventHandler TabsetsRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TabsetsRowChangeEventHandler TabsetsRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TabsetsRowChangeEventHandler TabsetsRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TabsetsRowChangeEventHandler TabsetsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTabsetsRow(TabsetsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabsetsRow AddTabsetsRow(short Id, string UserName, string TabFontName, float TabFontSize, bool TabFontBold, short TabMaxWidth, short TabCutSize, short TabHeight, short TabRowOffset, short TabShape, int ViewGroup, bool StartupTabset, string Picture)
            {
                TabsetsRow rowTabsetsRow = ((TabsetsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    Id,
                    UserName,
                    TabFontName,
                    TabFontSize,
                    TabFontBold,
                    TabMaxWidth,
                    TabCutSize,
                    TabHeight,
                    TabRowOffset,
                    TabShape,
                    ViewGroup,
                    StartupTabset,
                    Picture};
                rowTabsetsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTabsetsRow);
                return rowTabsetsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabsetsRow FindById(short Id)
            {
                return ((TabsetsRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                TabsetsDataTable cln = ((TabsetsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new TabsetsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnUserName = base.Columns["UserName"];
                this.columnTabFontName = base.Columns["TabFontName"];
                this.columnTabFontSize = base.Columns["TabFontSize"];
                this.columnTabFontBold = base.Columns["TabFontBold"];
                this.columnTabMaxWidth = base.Columns["TabMaxWidth"];
                this.columnTabCutSize = base.Columns["TabCutSize"];
                this.columnTabHeight = base.Columns["TabHeight"];
                this.columnTabRowOffset = base.Columns["TabRowOffset"];
                this.columnTabShape = base.Columns["TabShape"];
                this.columnViewGroup = base.Columns["ViewGroup"];
                this.columnStartupTabset = base.Columns["StartupTabset"];
                this.columnPicture = base.Columns["Picture"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnTabFontName = new global::System.Data.DataColumn("TabFontName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabFontName);
                this.columnTabFontSize = new global::System.Data.DataColumn("TabFontSize", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabFontSize);
                this.columnTabFontBold = new global::System.Data.DataColumn("TabFontBold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabFontBold);
                this.columnTabMaxWidth = new global::System.Data.DataColumn("TabMaxWidth", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabMaxWidth);
                this.columnTabCutSize = new global::System.Data.DataColumn("TabCutSize", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabCutSize);
                this.columnTabHeight = new global::System.Data.DataColumn("TabHeight", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabHeight);
                this.columnTabRowOffset = new global::System.Data.DataColumn("TabRowOffset", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabRowOffset);
                this.columnTabShape = new global::System.Data.DataColumn("TabShape", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabShape);
                this.columnViewGroup = new global::System.Data.DataColumn("ViewGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewGroup);
                this.columnStartupTabset = new global::System.Data.DataColumn("StartupTabset", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartupTabset);
                this.columnPicture = new global::System.Data.DataColumn("Picture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnUserName.MaxLength = 30;
                this.columnTabFontName.MaxLength = 30;
                this.columnPicture.MaxLength = 20;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabsetsRow NewTabsetsRow()
            {
                return ((TabsetsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new TabsetsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(TabsetsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.TabsetsRowChanged != null))
                {
                    this.TabsetsRowChanged(this, new TabsetsRowChangeEvent(((TabsetsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.TabsetsRowChanging != null))
                {
                    this.TabsetsRowChanging(this, new TabsetsRowChangeEvent(((TabsetsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.TabsetsRowDeleted != null))
                {
                    this.TabsetsRowDeleted(this, new TabsetsRowChangeEvent(((TabsetsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.TabsetsRowDeleting != null))
                {
                    this.TabsetsRowDeleting(this, new TabsetsRowChangeEvent(((TabsetsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTabsetsRow(TabsetsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TabsetsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ScanListDataTable : global::System.Data.TypedTableBase<ScanListRow>
        {

            private global::System.Data.DataColumn columnTableName;

            private global::System.Data.DataColumn columnFieldName;

            private global::System.Data.DataColumn columnFieldType;

            private global::System.Data.DataColumn columnIdStripChars;

            private global::System.Data.DataColumn columnIdMask;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScanListDataTable()
            {
                this.TableName = "ScanList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ScanListDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ScanListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TableNameColumn
            {
                get
                {
                    return this.columnTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FieldNameColumn
            {
                get
                {
                    return this.columnFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FieldTypeColumn
            {
                get
                {
                    return this.columnFieldType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdStripCharsColumn
            {
                get
                {
                    return this.columnIdStripChars;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdMaskColumn
            {
                get
                {
                    return this.columnIdMask;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScanListRow this[int index]
            {
                get
                {
                    return ((ScanListRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScanListRowChangeEventHandler ScanListRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScanListRowChangeEventHandler ScanListRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScanListRowChangeEventHandler ScanListRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScanListRowChangeEventHandler ScanListRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddScanListRow(ScanListRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScanListRow AddScanListRow(string TableName, string FieldName, short FieldType, string IdStripChars, string IdMask)
            {
                ScanListRow rowScanListRow = ((ScanListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    TableName,
                    FieldName,
                    FieldType,
                    IdStripChars,
                    IdMask};
                rowScanListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowScanListRow);
                return rowScanListRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                ScanListDataTable cln = ((ScanListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new ScanListDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnTableName = base.Columns["TableName"];
                this.columnFieldName = base.Columns["FieldName"];
                this.columnFieldType = base.Columns["FieldType"];
                this.columnIdStripChars = base.Columns["IdStripChars"];
                this.columnIdMask = base.Columns["IdMask"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnTableName = new global::System.Data.DataColumn("TableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableName);
                this.columnFieldName = new global::System.Data.DataColumn("FieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldName);
                this.columnFieldType = new global::System.Data.DataColumn("FieldType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldType);
                this.columnIdStripChars = new global::System.Data.DataColumn("IdStripChars", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdStripChars);
                this.columnIdMask = new global::System.Data.DataColumn("IdMask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdMask);
                this.columnTableName.MaxLength = 30;
                this.columnFieldName.MaxLength = 50;
                this.columnIdStripChars.MaxLength = 10;
                this.columnIdMask.MaxLength = 20;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScanListRow NewScanListRow()
            {
                return ((ScanListRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new ScanListRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(ScanListRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.ScanListRowChanged != null))
                {
                    this.ScanListRowChanged(this, new ScanListRowChangeEvent(((ScanListRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.ScanListRowChanging != null))
                {
                    this.ScanListRowChanging(this, new ScanListRowChangeEvent(((ScanListRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.ScanListRowDeleted != null))
                {
                    this.ScanListRowDeleted(this, new ScanListRowChangeEvent(((ScanListRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.ScanListRowDeleting != null))
                {
                    this.ScanListRowDeleting(this, new ScanListRowChangeEvent(((ScanListRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveScanListRow(ScanListRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ScanListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SLRequestorDataTable : global::System.Data.TypedTableBase<SLRequestorRow>
        {

            private global::System.Data.DataColumn columnSLPullListsId;

            private global::System.Data.DataColumn columnPriority;

            private global::System.Data.DataColumn columnDateRequested;

            private global::System.Data.DataColumn columnDateRecieved;

            private global::System.Data.DataColumn columnStatus;

            private global::System.Data.DataColumn columnComments;

            private global::System.Data.DataColumn columnPriorityOrder;

            private global::System.Data.DataColumn columnTableId;

            private global::System.Data.DataColumn columnDateNeeded;

            private global::System.Data.DataColumn columnEmployeeId;

            private global::System.Data.DataColumn columnInstructions;

            private global::System.Data.DataColumn columnExceptionComments;

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnRequestedBy;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLRequestorDataTable()
            {
                this.TableName = "SLRequestor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SLRequestorDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SLRequestorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLPullListsIdColumn
            {
                get
                {
                    return this.columnSLPullListsId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriorityColumn
            {
                get
                {
                    return this.columnPriority;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateRequestedColumn
            {
                get
                {
                    return this.columnDateRequested;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateRecievedColumn
            {
                get
                {
                    return this.columnDateRecieved;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn
            {
                get
                {
                    return this.columnStatus;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn
            {
                get
                {
                    return this.columnComments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriorityOrderColumn
            {
                get
                {
                    return this.columnPriorityOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TableIdColumn
            {
                get
                {
                    return this.columnTableId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateNeededColumn
            {
                get
                {
                    return this.columnDateNeeded;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIdColumn
            {
                get
                {
                    return this.columnEmployeeId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstructionsColumn
            {
                get
                {
                    return this.columnInstructions;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExceptionCommentsColumn
            {
                get
                {
                    return this.columnExceptionComments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLRequestorRow this[int index]
            {
                get
                {
                    return ((SLRequestorRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLRequestorRowChangeEventHandler SLRequestorRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLRequestorRowChangeEventHandler SLRequestorRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLRequestorRowChangeEventHandler SLRequestorRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLRequestorRowChangeEventHandler SLRequestorRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSLRequestorRow(SLRequestorRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLRequestorRow AddSLRequestorRow(int SLPullListsId, string Priority, System.DateTime DateRequested, System.DateTime DateRecieved, string Status, string Comments, int PriorityOrder, string TableId, System.DateTime DateNeeded, string EmployeeId, string Instructions, string ExceptionComments)
            {
                SLRequestorRow rowSLRequestorRow = ((SLRequestorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    SLPullListsId,
                    Priority,
                    DateRequested,
                    DateRecieved,
                    Status,
                    Comments,
                    PriorityOrder,
                    TableId,
                    DateNeeded,
                    EmployeeId,
                    Instructions,
                    ExceptionComments,
                    null};
                rowSLRequestorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSLRequestorRow);
                return rowSLRequestorRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLRequestorRow FindById(int Id)
            {
                return ((SLRequestorRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                SLRequestorDataTable cln = ((SLRequestorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new SLRequestorDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnSLPullListsId = base.Columns["SLPullListsId"];
                this.columnPriority = base.Columns["Priority"];
                this.columnDateRequested = base.Columns["DateRequested"];
                this.columnDateRecieved = base.Columns["DateRecieved"];
                this.columnStatus = base.Columns["Status"];
                this.columnComments = base.Columns["Comments"];
                this.columnPriorityOrder = base.Columns["PriorityOrder"];
                this.columnTableId = base.Columns["TableId"];
                this.columnDateNeeded = base.Columns["DateNeeded"];
                this.columnEmployeeId = base.Columns["EmployeeId"];
                this.columnInstructions = base.Columns["Instructions"];
                this.columnExceptionComments = base.Columns["ExceptionComments"];
                this.columnId = base.Columns["Id"];
                this.columnRequestedBy = base.Columns["RequestedBy"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnSLPullListsId = new global::System.Data.DataColumn("SLPullListsId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLPullListsId);
                this.columnPriority = new global::System.Data.DataColumn("Priority", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriority);
                this.columnDateRequested = new global::System.Data.DataColumn("DateRequested", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateRequested);
                this.columnDateRecieved = new global::System.Data.DataColumn("DateRecieved", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateRecieved);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnPriorityOrder = new global::System.Data.DataColumn("PriorityOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorityOrder);
                this.columnTableId = new global::System.Data.DataColumn("TableId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableId);
                this.columnDateNeeded = new global::System.Data.DataColumn("DateNeeded", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateNeeded);
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.columnInstructions = new global::System.Data.DataColumn("Instructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstructions);
                this.columnRequestedBy = new global::System.Data.DataColumn("RequestedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestedBy);
                this.columnExceptionComments = new global::System.Data.DataColumn("ExceptionComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExceptionComments);
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnPriority.MaxLength = 20;
                this.columnDateRecieved.ReadOnly = true;
                this.columnStatus.MaxLength = 20;
                this.columnComments.ReadOnly = true;
                this.columnComments.MaxLength = 2147483647;
                this.columnTableId.MaxLength = 30;
                this.columnEmployeeId.MaxLength = 30;
                this.columnInstructions.MaxLength = 2147483647;
                this.columnExceptionComments.MaxLength = 2147483647;
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLRequestorRow NewSLRequestorRow()
            {
                return ((SLRequestorRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new SLRequestorRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(SLRequestorRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SLRequestorRowChanged != null))
                {
                    this.SLRequestorRowChanged(this, new SLRequestorRowChangeEvent(((SLRequestorRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SLRequestorRowChanging != null))
                {
                    this.SLRequestorRowChanging(this, new SLRequestorRowChangeEvent(((SLRequestorRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SLRequestorRowDeleted != null))
                {
                    this.SLRequestorRowDeleted(this, new SLRequestorRowChangeEvent(((SLRequestorRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SLRequestorRowDeleting != null))
                {
                    this.SLRequestorRowDeleting(this, new SLRequestorRowChangeEvent(((SLRequestorRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSLRequestorRow(SLRequestorRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SLRequestorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FolderStatusDataTable : global::System.Data.TypedTableBase<FolderStatusRow>
        {

            private global::System.Data.DataColumn columnFolderStatusId;

            private global::System.Data.DataColumn columnWorkflowStep;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderStatusDataTable()
            {
                this.TableName = "FolderStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FolderStatusDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FolderStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FolderStatusIdColumn
            {
                get
                {
                    return this.columnFolderStatusId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkflowStepColumn
            {
                get
                {
                    return this.columnWorkflowStep;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderStatusRow this[int index]
            {
                get
                {
                    return ((FolderStatusRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderStatusRowChangeEventHandler FolderStatusRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderStatusRowChangeEventHandler FolderStatusRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderStatusRowChangeEventHandler FolderStatusRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderStatusRowChangeEventHandler FolderStatusRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFolderStatusRow(FolderStatusRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderStatusRow AddFolderStatusRow(string FolderStatusId, short WorkflowStep)
            {
                FolderStatusRow rowFolderStatusRow = ((FolderStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    FolderStatusId,
                    WorkflowStep};
                rowFolderStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFolderStatusRow);
                return rowFolderStatusRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderStatusRow FindByFolderStatusId(string FolderStatusId)
            {
                return ((FolderStatusRow)(this.Rows.Find(new object[] {
                        FolderStatusId})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                FolderStatusDataTable cln = ((FolderStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new FolderStatusDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnFolderStatusId = base.Columns["FolderStatusId"];
                this.columnWorkflowStep = base.Columns["WorkflowStep"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnFolderStatusId = new global::System.Data.DataColumn("FolderStatusId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolderStatusId);
                this.columnWorkflowStep = new global::System.Data.DataColumn("WorkflowStep", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkflowStep);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnFolderStatusId}, true));
                this.columnFolderStatusId.AllowDBNull = false;
                this.columnFolderStatusId.Unique = true;
                this.columnFolderStatusId.MaxLength = 20;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderStatusRow NewFolderStatusRow()
            {
                return ((FolderStatusRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new FolderStatusRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(FolderStatusRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.FolderStatusRowChanged != null))
                {
                    this.FolderStatusRowChanged(this, new FolderStatusRowChangeEvent(((FolderStatusRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.FolderStatusRowChanging != null))
                {
                    this.FolderStatusRowChanging(this, new FolderStatusRowChangeEvent(((FolderStatusRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.FolderStatusRowDeleted != null))
                {
                    this.FolderStatusRowDeleted(this, new FolderStatusRowChangeEvent(((FolderStatusRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.FolderStatusRowDeleting != null))
                {
                    this.FolderStatusRowDeleting(this, new FolderStatusRowChangeEvent(((FolderStatusRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFolderStatusRow(FolderStatusRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FolderStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TrackingDataTable : global::System.Data.TypedTableBase<TrackingRow>
        {

            private global::System.Data.DataColumn columnTrackedTable;

            private global::System.Data.DataColumn columnTrackedTableId;

            private global::System.Data.DataColumn columnTrackedTableId1;

            private global::System.Data.DataColumn columnLocationsId;

            private global::System.Data.DataColumn columnEmployeesId;

            private global::System.Data.DataColumn columnBoxesId;

            private global::System.Data.DataColumn columnTransactionDateTime;

            private global::System.Data.DataColumn columnProcessedDateTime;

            private global::System.Data.DataColumn columnOut;

            private global::System.Data.DataColumn columnUserName;

            private global::System.Data.DataColumn columnDateDue;

            private global::System.Data.DataColumn columnTrackingAdditionalField1;

            private global::System.Data.DataColumn columnTrackingAdditionalField2;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingDataTable()
            {
                this.TableName = "Tracking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TrackingDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TrackingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackedTableColumn
            {
                get
                {
                    return this.columnTrackedTable;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackedTableIdColumn
            {
                get
                {
                    return this.columnTrackedTableId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackedTableId1Column
            {
                get
                {
                    return this.columnTrackedTableId1;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationsIdColumn
            {
                get
                {
                    return this.columnLocationsId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeesIdColumn
            {
                get
                {
                    return this.columnEmployeesId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoxesIdColumn
            {
                get
                {
                    return this.columnBoxesId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionDateTimeColumn
            {
                get
                {
                    return this.columnTransactionDateTime;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessedDateTimeColumn
            {
                get
                {
                    return this.columnProcessedDateTime;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutColumn
            {
                get
                {
                    return this.columnOut;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserNameColumn
            {
                get
                {
                    return this.columnUserName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateDueColumn
            {
                get
                {
                    return this.columnDateDue;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingAdditionalField1Column
            {
                get
                {
                    return this.columnTrackingAdditionalField1;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingAdditionalField2Column
            {
                get
                {
                    return this.columnTrackingAdditionalField2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingRow this[int index]
            {
                get
                {
                    return ((TrackingRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrackingRowChangeEventHandler TrackingRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrackingRowChangeEventHandler TrackingRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrackingRowChangeEventHandler TrackingRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrackingRowChangeEventHandler TrackingRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTrackingRow(TrackingRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingRow AddTrackingRow(string TrackedTable, string TrackedTableId, string TrackedTableId1, string LocationsId, string EmployeesId, string BoxesId, System.DateTime TransactionDateTime, System.DateTime ProcessedDateTime, bool Out, string UserName, System.DateTime DateDue, string TrackingAdditionalField1, string TrackingAdditionalField2)
            {
                TrackingRow rowTrackingRow = ((TrackingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    TrackedTable,
                    TrackedTableId,
                    TrackedTableId1,
                    LocationsId,
                    EmployeesId,
                    BoxesId,
                    TransactionDateTime,
                    ProcessedDateTime,
                    Out,
                    UserName,
                    DateDue,
                    TrackingAdditionalField1,
                    TrackingAdditionalField2};
                rowTrackingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTrackingRow);
                return rowTrackingRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                TrackingDataTable cln = ((TrackingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new TrackingDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnTrackedTable = base.Columns["TrackedTable"];
                this.columnTrackedTableId = base.Columns["TrackedTableId"];
                this.columnTrackedTableId1 = base.Columns["TrackedTableId1"];
                this.columnLocationsId = base.Columns["LocationsId"];
                this.columnEmployeesId = base.Columns["EmployeesId"];
                this.columnBoxesId = base.Columns["BoxesId"];
                this.columnTransactionDateTime = base.Columns["TransactionDateTime"];
                this.columnProcessedDateTime = base.Columns["ProcessedDateTime"];
                this.columnOut = base.Columns["Out"];
                this.columnUserName = base.Columns["UserName"];
                this.columnDateDue = base.Columns["DateDue"];
                this.columnTrackingAdditionalField1 = base.Columns["TrackingAdditionalField1"];
                this.columnTrackingAdditionalField2 = base.Columns["TrackingAdditionalField2"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnTrackedTable = new global::System.Data.DataColumn("TrackedTable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackedTable);
                this.columnTrackedTableId = new global::System.Data.DataColumn("TrackedTableId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackedTableId);
                this.columnTrackedTableId1 = new global::System.Data.DataColumn("TrackedTableId1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackedTableId1);
                this.columnLocationsId = new global::System.Data.DataColumn("LocationsId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationsId);
                this.columnEmployeesId = new global::System.Data.DataColumn("EmployeesId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeesId);
                this.columnBoxesId = new global::System.Data.DataColumn("BoxesId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoxesId);
                this.columnTransactionDateTime = new global::System.Data.DataColumn("TransactionDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionDateTime);
                this.columnProcessedDateTime = new global::System.Data.DataColumn("ProcessedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessedDateTime);
                this.columnOut = new global::System.Data.DataColumn("Out", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnDateDue = new global::System.Data.DataColumn("DateDue", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDue);
                this.columnTrackingAdditionalField1 = new global::System.Data.DataColumn("TrackingAdditionalField1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingAdditionalField1);
                this.columnTrackingAdditionalField2 = new global::System.Data.DataColumn("TrackingAdditionalField2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingAdditionalField2);
                this.columnTrackedTable.MaxLength = 30;
                this.columnTrackedTableId.MaxLength = 30;
                this.columnTrackedTableId1.MaxLength = 30;
                this.columnLocationsId.MaxLength = 30;
                this.columnEmployeesId.MaxLength = 30;
                this.columnBoxesId.MaxLength = 30;
                this.columnUserName.MaxLength = 50;
                this.columnTrackingAdditionalField1.MaxLength = 50;
                this.columnTrackingAdditionalField2.MaxLength = 2147483647;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingRow NewTrackingRow()
            {
                return ((TrackingRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new TrackingRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(TrackingRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.TrackingRowChanged != null))
                {
                    this.TrackingRowChanged(this, new TrackingRowChangeEvent(((TrackingRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.TrackingRowChanging != null))
                {
                    this.TrackingRowChanging(this, new TrackingRowChangeEvent(((TrackingRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.TrackingRowDeleted != null))
                {
                    this.TrackingRowDeleted(this, new TrackingRowChangeEvent(((TrackingRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.TrackingRowDeleting != null))
                {
                    this.TrackingRowDeleting(this, new TrackingRowChangeEvent(((TrackingRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTrackingRow(TrackingRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TrackingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TablesDataTable : global::System.Data.TypedTableBase<TablesRow>
        {

            private global::System.Data.DataColumn columnTableName;

            private global::System.Data.DataColumn columnUserName;

            private global::System.Data.DataColumn columnDBName;

            private global::System.Data.DataColumn columnDatabaseAccessType;

            private global::System.Data.DataColumn columnAttachments;

            private global::System.Data.DataColumn columnAliasImagingTableName;

            private global::System.Data.DataColumn columnTrackingTable;

            private global::System.Data.DataColumn columnTrackable;

            private global::System.Data.DataColumn columnTrackingStatusFieldName;

            private global::System.Data.DataColumn columnCounterFieldName;

            private global::System.Data.DataColumn columnViewGroup;

            private global::System.Data.DataColumn columnAddGroup;

            private global::System.Data.DataColumn columnEditGroup;

            private global::System.Data.DataColumn columnDelGroup;

            private global::System.Data.DataColumn columnMgrGroup;

            private global::System.Data.DataColumn columnDeleteAttachedGroup;

            private global::System.Data.DataColumn columnAttributesID;

            private global::System.Data.DataColumn columnPicture;

            private global::System.Data.DataColumn columnIdFieldName;

            private global::System.Data.DataColumn columnIdFieldName2;

            private global::System.Data.DataColumn columnIdStripChars;

            private global::System.Data.DataColumn columnIdMask;

            private global::System.Data.DataColumn columnBarCodePrefix;

            private global::System.Data.DataColumn columnDescFieldPrefixOne;

            private global::System.Data.DataColumn columnDescFieldNameOne;

            private global::System.Data.DataColumn columnDescFieldPrefixTwo;

            private global::System.Data.DataColumn columnDescFieldNameTwo;

            private global::System.Data.DataColumn columnMaxRecsOnDropDown;

            private global::System.Data.DataColumn columnADOServerCursor;

            private global::System.Data.DataColumn columnADOQueryTimeout;

            private global::System.Data.DataColumn columnADOCacheSize;

            private global::System.Data.DataColumn columnLSBeforeAddRecord;

            private global::System.Data.DataColumn columnLSAfterAddRecord;

            private global::System.Data.DataColumn columnLSBeforeEditRecord;

            private global::System.Data.DataColumn columnLSAfterEditRecord;

            private global::System.Data.DataColumn columnLSBeforeDeleteRecord;

            private global::System.Data.DataColumn columnLSAfterDeleteRecord;

            private global::System.Data.DataColumn columnDefaultTrackingTable;

            private global::System.Data.DataColumn columnDefaultTrackingId;

            private global::System.Data.DataColumn columnRetentionPeriodActive;

            private global::System.Data.DataColumn columnRetentionInactivityActive;

            private global::System.Data.DataColumn columnRetentionDateOpenedField;

            private global::System.Data.DataColumn columnRetentionDateCreateField;

            private global::System.Data.DataColumn columnRetentionDateClosedField;

            private global::System.Data.DataColumn columnRetentionDateOtherField;

            private global::System.Data.DataColumn columnRetentionFieldName;

            private global::System.Data.DataColumn columnTrackingPhoneFieldName;

            private global::System.Data.DataColumn columnTrackingMailStopFieldName;

            private global::System.Data.DataColumn columnTrackingRequestableFieldName;

            private global::System.Data.DataColumn columnOperatorsIdField;

            private global::System.Data.DataColumn columnInactiveLocationField;

            private global::System.Data.DataColumn columnDefaultDescriptionField;

            private global::System.Data.DataColumn columnDefaultDescriptionText;

            private global::System.Data.DataColumn columnDefaultRetentionId;

            private global::System.Data.DataColumn columnDescFieldPrefixOneTable;

            private global::System.Data.DataColumn columnDescFieldPrefixOneWidth;

            private global::System.Data.DataColumn columnDescRelateTable1;

            private global::System.Data.DataColumn columnDescFieldPrefixTwoTable;

            private global::System.Data.DataColumn columnDescFieldPrefixTwoWidth;

            private global::System.Data.DataColumn columnDescRelateTable2;

            private global::System.Data.DataColumn columnMaxRecordsAllowed;

            private global::System.Data.DataColumn columnOutTable;

            private global::System.Data.DataColumn columnPCFilesEditGrp;

            private global::System.Data.DataColumn columnPCFilesNVerGrp;

            private global::System.Data.DataColumn columnRestrictAddToTable;

            private global::System.Data.DataColumn columnRuleDateField;

            private global::System.Data.DataColumn columnTrackingACTIVEFieldName;

            private global::System.Data.DataColumn columnTrackingOUTFieldName;

            private global::System.Data.DataColumn columnTrackingType;

            private global::System.Data.DataColumn columnAuditConfidentialData;

            private global::System.Data.DataColumn columnAuditUpdate;

            private global::System.Data.DataColumn columnAllowBatchRequesting;

            private global::System.Data.DataColumn columnParentFolderTableName;

            private global::System.Data.DataColumn columnParentDocTypeTableName;

            private global::System.Data.DataColumn columnRecordManageMgmtType;

            private global::System.Data.DataColumn columnTrackingEmailFieldName;

            private global::System.Data.DataColumn columnAutoAddNotification;

            private global::System.Data.DataColumn columnTrackingDueBackDaysFieldName;

            private global::System.Data.DataColumn columnImageCaptureFlagFieldName;

            private global::System.Data.DataColumn columnSignatureRequiredFieldName;

            private global::System.Data.DataColumn columnAuditAttachments;

            private global::System.Data.DataColumn columnRetentionFinalDisposition;

            private global::System.Data.DataColumn columnRetentionAssignmentMethod;

            private global::System.Data.DataColumn columnRetentionRelatedTable;

            private global::System.Data.DataColumn columnArchiveLocationField;

            private global::System.Data.DataColumn columnOfficialRecordHandling;

            private global::System.Data.DataColumn columnDescriptionFieldName;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesDataTable()
            {
                this.TableName = "Tables";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TablesDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TablesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TableNameColumn
            {
                get
                {
                    return this.columnTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserNameColumn
            {
                get
                {
                    return this.columnUserName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DBNameColumn
            {
                get
                {
                    return this.columnDBName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatabaseAccessTypeColumn
            {
                get
                {
                    return this.columnDatabaseAccessType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttachmentsColumn
            {
                get
                {
                    return this.columnAttachments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AliasImagingTableNameColumn
            {
                get
                {
                    return this.columnAliasImagingTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingTableColumn
            {
                get
                {
                    return this.columnTrackingTable;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackableColumn
            {
                get
                {
                    return this.columnTrackable;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingStatusFieldNameColumn
            {
                get
                {
                    return this.columnTrackingStatusFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CounterFieldNameColumn
            {
                get
                {
                    return this.columnCounterFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ViewGroupColumn
            {
                get
                {
                    return this.columnViewGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddGroupColumn
            {
                get
                {
                    return this.columnAddGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EditGroupColumn
            {
                get
                {
                    return this.columnEditGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelGroupColumn
            {
                get
                {
                    return this.columnDelGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MgrGroupColumn
            {
                get
                {
                    return this.columnMgrGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeleteAttachedGroupColumn
            {
                get
                {
                    return this.columnDeleteAttachedGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttributesIDColumn
            {
                get
                {
                    return this.columnAttributesID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PictureColumn
            {
                get
                {
                    return this.columnPicture;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdFieldNameColumn
            {
                get
                {
                    return this.columnIdFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdFieldName2Column
            {
                get
                {
                    return this.columnIdFieldName2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdStripCharsColumn
            {
                get
                {
                    return this.columnIdStripChars;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdMaskColumn
            {
                get
                {
                    return this.columnIdMask;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BarCodePrefixColumn
            {
                get
                {
                    return this.columnBarCodePrefix;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescFieldPrefixOneColumn
            {
                get
                {
                    return this.columnDescFieldPrefixOne;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescFieldNameOneColumn
            {
                get
                {
                    return this.columnDescFieldNameOne;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescFieldPrefixTwoColumn
            {
                get
                {
                    return this.columnDescFieldPrefixTwo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescFieldNameTwoColumn
            {
                get
                {
                    return this.columnDescFieldNameTwo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxRecsOnDropDownColumn
            {
                get
                {
                    return this.columnMaxRecsOnDropDown;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADOServerCursorColumn
            {
                get
                {
                    return this.columnADOServerCursor;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADOQueryTimeoutColumn
            {
                get
                {
                    return this.columnADOQueryTimeout;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADOCacheSizeColumn
            {
                get
                {
                    return this.columnADOCacheSize;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSBeforeAddRecordColumn
            {
                get
                {
                    return this.columnLSBeforeAddRecord;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSAfterAddRecordColumn
            {
                get
                {
                    return this.columnLSAfterAddRecord;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSBeforeEditRecordColumn
            {
                get
                {
                    return this.columnLSBeforeEditRecord;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSAfterEditRecordColumn
            {
                get
                {
                    return this.columnLSAfterEditRecord;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSBeforeDeleteRecordColumn
            {
                get
                {
                    return this.columnLSBeforeDeleteRecord;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSAfterDeleteRecordColumn
            {
                get
                {
                    return this.columnLSAfterDeleteRecord;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultTrackingTableColumn
            {
                get
                {
                    return this.columnDefaultTrackingTable;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultTrackingIdColumn
            {
                get
                {
                    return this.columnDefaultTrackingId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionPeriodActiveColumn
            {
                get
                {
                    return this.columnRetentionPeriodActive;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionInactivityActiveColumn
            {
                get
                {
                    return this.columnRetentionInactivityActive;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionDateOpenedFieldColumn
            {
                get
                {
                    return this.columnRetentionDateOpenedField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionDateCreateFieldColumn
            {
                get
                {
                    return this.columnRetentionDateCreateField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionDateClosedFieldColumn
            {
                get
                {
                    return this.columnRetentionDateClosedField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionDateOtherFieldColumn
            {
                get
                {
                    return this.columnRetentionDateOtherField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionFieldNameColumn
            {
                get
                {
                    return this.columnRetentionFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingPhoneFieldNameColumn
            {
                get
                {
                    return this.columnTrackingPhoneFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingMailStopFieldNameColumn
            {
                get
                {
                    return this.columnTrackingMailStopFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingRequestableFieldNameColumn
            {
                get
                {
                    return this.columnTrackingRequestableFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OperatorsIdFieldColumn
            {
                get
                {
                    return this.columnOperatorsIdField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InactiveLocationFieldColumn
            {
                get
                {
                    return this.columnInactiveLocationField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultDescriptionFieldColumn
            {
                get
                {
                    return this.columnDefaultDescriptionField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultDescriptionTextColumn
            {
                get
                {
                    return this.columnDefaultDescriptionText;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultRetentionIdColumn
            {
                get
                {
                    return this.columnDefaultRetentionId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescFieldPrefixOneTableColumn
            {
                get
                {
                    return this.columnDescFieldPrefixOneTable;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescFieldPrefixOneWidthColumn
            {
                get
                {
                    return this.columnDescFieldPrefixOneWidth;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescRelateTable1Column
            {
                get
                {
                    return this.columnDescRelateTable1;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescFieldPrefixTwoTableColumn
            {
                get
                {
                    return this.columnDescFieldPrefixTwoTable;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescFieldPrefixTwoWidthColumn
            {
                get
                {
                    return this.columnDescFieldPrefixTwoWidth;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescRelateTable2Column
            {
                get
                {
                    return this.columnDescRelateTable2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxRecordsAllowedColumn
            {
                get
                {
                    return this.columnMaxRecordsAllowed;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutTableColumn
            {
                get
                {
                    return this.columnOutTable;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCFilesEditGrpColumn
            {
                get
                {
                    return this.columnPCFilesEditGrp;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCFilesNVerGrpColumn
            {
                get
                {
                    return this.columnPCFilesNVerGrp;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RestrictAddToTableColumn
            {
                get
                {
                    return this.columnRestrictAddToTable;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleDateFieldColumn
            {
                get
                {
                    return this.columnRuleDateField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingACTIVEFieldNameColumn
            {
                get
                {
                    return this.columnTrackingACTIVEFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingOUTFieldNameColumn
            {
                get
                {
                    return this.columnTrackingOUTFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingTypeColumn
            {
                get
                {
                    return this.columnTrackingType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AuditConfidentialDataColumn
            {
                get
                {
                    return this.columnAuditConfidentialData;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AuditUpdateColumn
            {
                get
                {
                    return this.columnAuditUpdate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowBatchRequestingColumn
            {
                get
                {
                    return this.columnAllowBatchRequesting;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentFolderTableNameColumn
            {
                get
                {
                    return this.columnParentFolderTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentDocTypeTableNameColumn
            {
                get
                {
                    return this.columnParentDocTypeTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordManageMgmtTypeColumn
            {
                get
                {
                    return this.columnRecordManageMgmtType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingEmailFieldNameColumn
            {
                get
                {
                    return this.columnTrackingEmailFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoAddNotificationColumn
            {
                get
                {
                    return this.columnAutoAddNotification;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingDueBackDaysFieldNameColumn
            {
                get
                {
                    return this.columnTrackingDueBackDaysFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageCaptureFlagFieldNameColumn
            {
                get
                {
                    return this.columnImageCaptureFlagFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SignatureRequiredFieldNameColumn
            {
                get
                {
                    return this.columnSignatureRequiredFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AuditAttachmentsColumn
            {
                get
                {
                    return this.columnAuditAttachments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionFinalDispositionColumn
            {
                get
                {
                    return this.columnRetentionFinalDisposition;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionAssignmentMethodColumn
            {
                get
                {
                    return this.columnRetentionAssignmentMethod;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionRelatedTableColumn
            {
                get
                {
                    return this.columnRetentionRelatedTable;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchiveLocationFieldColumn
            {
                get
                {
                    return this.columnArchiveLocationField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficialRecordHandlingColumn
            {
                get
                {
                    return this.columnOfficialRecordHandling;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionFieldNameColumn
            {
                get
                {
                    return this.columnDescriptionFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow this[int index]
            {
                get
                {
                    return ((TablesRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TablesRowChangeEventHandler TablesRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TablesRowChangeEventHandler TablesRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TablesRowChangeEventHandler TablesRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TablesRowChangeEventHandler TablesRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTablesRow(TablesRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow AddTablesRow(
                        string TableName,
                        string UserName,
                        string DBName,
                        short DatabaseAccessType,
                        bool Attachments,
                        string AliasImagingTableName,
                        short TrackingTable,
                        bool Trackable,
                        string TrackingStatusFieldName,
                        string CounterFieldName,
                        int ViewGroup,
                        int AddGroup,
                        int EditGroup,
                        int DelGroup,
                        int MgrGroup,
                        int DeleteAttachedGroup,
                        int AttributesID,
                        string Picture,
                        string IdFieldName,
                        string IdFieldName2,
                        string IdStripChars,
                        string IdMask,
                        string BarCodePrefix,
                        string DescFieldPrefixOne,
                        string DescFieldNameOne,
                        string DescFieldPrefixTwo,
                        string DescFieldNameTwo,
                        int MaxRecsOnDropDown,
                        bool ADOServerCursor,
                        int ADOQueryTimeout,
                        int ADOCacheSize,
                        string LSBeforeAddRecord,
                        string LSAfterAddRecord,
                        string LSBeforeEditRecord,
                        string LSAfterEditRecord,
                        string LSBeforeDeleteRecord,
                        string LSAfterDeleteRecord,
                        string DefaultTrackingTable,
                        string DefaultTrackingId,
                        bool RetentionPeriodActive,
                        bool RetentionInactivityActive,
                        string RetentionDateOpenedField,
                        string RetentionDateCreateField,
                        string RetentionDateClosedField,
                        string RetentionDateOtherField,
                        string RetentionFieldName,
                        string TrackingPhoneFieldName,
                        string TrackingMailStopFieldName,
                        string TrackingRequestableFieldName,
                        string OperatorsIdField,
                        string InactiveLocationField,
                        string DefaultDescriptionField,
                        string DefaultDescriptionText,
                        string DefaultRetentionId,
                        string DescFieldPrefixOneTable,
                        short DescFieldPrefixOneWidth,
                        string DescRelateTable1,
                        string DescFieldPrefixTwoTable,
                        short DescFieldPrefixTwoWidth,
                        string DescRelateTable2,
                        short MaxRecordsAllowed,
                        short OutTable,
                        int PCFilesEditGrp,
                        int PCFilesNVerGrp,
                        short RestrictAddToTable,
                        string RuleDateField,
                        string TrackingACTIVEFieldName,
                        string TrackingOUTFieldName,
                        short TrackingType,
                        bool AuditConfidentialData,
                        bool AuditUpdate,
                        bool AllowBatchRequesting,
                        string ParentFolderTableName,
                        string ParentDocTypeTableName,
                        int RecordManageMgmtType,
                        string TrackingEmailFieldName,
                        bool AutoAddNotification,
                        string TrackingDueBackDaysFieldName,
                        string ImageCaptureFlagFieldName,
                        string SignatureRequiredFieldName,
                        bool AuditAttachments,
                        int RetentionFinalDisposition,
                        int RetentionAssignmentMethod,
                        string RetentionRelatedTable,
                        string ArchiveLocationField,
                        bool OfficialRecordHandling,
                        string DescriptionFieldName)
            {
                TablesRow rowTablesRow = ((TablesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    TableName,
                    UserName,
                    DBName,
                    DatabaseAccessType,
                    Attachments,
                    AliasImagingTableName,
                    TrackingTable,
                    Trackable,
                    TrackingStatusFieldName,
                    CounterFieldName,
                    ViewGroup,
                    AddGroup,
                    EditGroup,
                    DelGroup,
                    MgrGroup,
                    DeleteAttachedGroup,
                    AttributesID,
                    Picture,
                    IdFieldName,
                    IdFieldName2,
                    IdStripChars,
                    IdMask,
                    BarCodePrefix,
                    DescFieldPrefixOne,
                    DescFieldNameOne,
                    DescFieldPrefixTwo,
                    DescFieldNameTwo,
                    MaxRecsOnDropDown,
                    ADOServerCursor,
                    ADOQueryTimeout,
                    ADOCacheSize,
                    LSBeforeAddRecord,
                    LSAfterAddRecord,
                    LSBeforeEditRecord,
                    LSAfterEditRecord,
                    LSBeforeDeleteRecord,
                    LSAfterDeleteRecord,
                    DefaultTrackingTable,
                    DefaultTrackingId,
                    RetentionPeriodActive,
                    RetentionInactivityActive,
                    RetentionDateOpenedField,
                    RetentionDateCreateField,
                    RetentionDateClosedField,
                    RetentionDateOtherField,
                    RetentionFieldName,
                    TrackingPhoneFieldName,
                    TrackingMailStopFieldName,
                    TrackingRequestableFieldName,
                    OperatorsIdField,
                    InactiveLocationField,
                    DefaultDescriptionField,
                    DefaultDescriptionText,
                    DefaultRetentionId,
                    DescFieldPrefixOneTable,
                    DescFieldPrefixOneWidth,
                    DescRelateTable1,
                    DescFieldPrefixTwoTable,
                    DescFieldPrefixTwoWidth,
                    DescRelateTable2,
                    MaxRecordsAllowed,
                    OutTable,
                    PCFilesEditGrp,
                    PCFilesNVerGrp,
                    RestrictAddToTable,
                    RuleDateField,
                    TrackingACTIVEFieldName,
                    TrackingOUTFieldName,
                    TrackingType,
                    AuditConfidentialData,
                    AuditUpdate,
                    AllowBatchRequesting,
                    ParentFolderTableName,
                    ParentDocTypeTableName,
                    RecordManageMgmtType,
                    TrackingEmailFieldName,
                    AutoAddNotification,
                    TrackingDueBackDaysFieldName,
                    ImageCaptureFlagFieldName,
                    SignatureRequiredFieldName,
                    AuditAttachments,
                    RetentionFinalDisposition,
                    RetentionAssignmentMethod,
                    RetentionRelatedTable,
                    ArchiveLocationField,
                    OfficialRecordHandling,
                    DescriptionFieldName};
                rowTablesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTablesRow);
                return rowTablesRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                TablesDataTable cln = ((TablesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new TablesDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnTableName = base.Columns["TableName"];
                this.columnUserName = base.Columns["UserName"];
                this.columnDBName = base.Columns["DBName"];
                this.columnDatabaseAccessType = base.Columns["DatabaseAccessType"];
                this.columnAttachments = base.Columns["Attachments"];
                this.columnAliasImagingTableName = base.Columns["AliasImagingTableName"];
                this.columnTrackingTable = base.Columns["TrackingTable"];
                this.columnTrackable = base.Columns["Trackable"];
                this.columnTrackingStatusFieldName = base.Columns["TrackingStatusFieldName"];
                this.columnCounterFieldName = base.Columns["CounterFieldName"];
                this.columnViewGroup = base.Columns["ViewGroup"];
                this.columnAddGroup = base.Columns["AddGroup"];
                this.columnEditGroup = base.Columns["EditGroup"];
                this.columnDelGroup = base.Columns["DelGroup"];
                this.columnMgrGroup = base.Columns["MgrGroup"];
                this.columnDeleteAttachedGroup = base.Columns["DeleteAttachedGroup"];
                this.columnAttributesID = base.Columns["AttributesID"];
                this.columnPicture = base.Columns["Picture"];
                this.columnIdFieldName = base.Columns["IdFieldName"];
                this.columnIdFieldName2 = base.Columns["IdFieldName2"];
                this.columnIdStripChars = base.Columns["IdStripChars"];
                this.columnIdMask = base.Columns["IdMask"];
                this.columnBarCodePrefix = base.Columns["BarCodePrefix"];
                this.columnDescFieldPrefixOne = base.Columns["DescFieldPrefixOne"];
                this.columnDescFieldNameOne = base.Columns["DescFieldNameOne"];
                this.columnDescFieldPrefixTwo = base.Columns["DescFieldPrefixTwo"];
                this.columnDescFieldNameTwo = base.Columns["DescFieldNameTwo"];
                this.columnMaxRecsOnDropDown = base.Columns["MaxRecsOnDropDown"];
                this.columnADOServerCursor = base.Columns["ADOServerCursor"];
                this.columnADOQueryTimeout = base.Columns["ADOQueryTimeout"];
                this.columnADOCacheSize = base.Columns["ADOCacheSize"];
                this.columnLSBeforeAddRecord = base.Columns["LSBeforeAddRecord"];
                this.columnLSAfterAddRecord = base.Columns["LSAfterAddRecord"];
                this.columnLSBeforeEditRecord = base.Columns["LSBeforeEditRecord"];
                this.columnLSAfterEditRecord = base.Columns["LSAfterEditRecord"];
                this.columnLSBeforeDeleteRecord = base.Columns["LSBeforeDeleteRecord"];
                this.columnLSAfterDeleteRecord = base.Columns["LSAfterDeleteRecord"];
                this.columnDefaultTrackingTable = base.Columns["DefaultTrackingTable"];
                this.columnDefaultTrackingId = base.Columns["DefaultTrackingId"];
                this.columnRetentionPeriodActive = base.Columns["RetentionPeriodActive"];
                this.columnRetentionInactivityActive = base.Columns["RetentionInactivityActive"];
                this.columnRetentionDateOpenedField = base.Columns["RetentionDateOpenedField"];
                this.columnRetentionDateCreateField = base.Columns["RetentionDateCreateField"];
                this.columnRetentionDateClosedField = base.Columns["RetentionDateClosedField"];
                this.columnRetentionDateOtherField = base.Columns["RetentionDateOtherField"];
                this.columnRetentionFieldName = base.Columns["RetentionFieldName"];
                this.columnTrackingPhoneFieldName = base.Columns["TrackingPhoneFieldName"];
                this.columnTrackingMailStopFieldName = base.Columns["TrackingMailStopFieldName"];
                this.columnTrackingRequestableFieldName = base.Columns["TrackingRequestableFieldName"];
                this.columnOperatorsIdField = base.Columns["OperatorsIdField"];
                this.columnInactiveLocationField = base.Columns["InactiveLocationField"];
                this.columnDefaultDescriptionField = base.Columns["DefaultDescriptionField"];
                this.columnDefaultDescriptionText = base.Columns["DefaultDescriptionText"];
                this.columnDefaultRetentionId = base.Columns["DefaultRetentionId"];
                this.columnDescFieldPrefixOneTable = base.Columns["DescFieldPrefixOneTable"];
                this.columnDescFieldPrefixOneWidth = base.Columns["DescFieldPrefixOneWidth"];
                this.columnDescRelateTable1 = base.Columns["DescRelateTable1"];
                this.columnDescFieldPrefixTwoTable = base.Columns["DescFieldPrefixTwoTable"];
                this.columnDescFieldPrefixTwoWidth = base.Columns["DescFieldPrefixTwoWidth"];
                this.columnDescRelateTable2 = base.Columns["DescRelateTable2"];
                this.columnMaxRecordsAllowed = base.Columns["MaxRecordsAllowed"];
                this.columnOutTable = base.Columns["OutTable"];
                this.columnPCFilesEditGrp = base.Columns["PCFilesEditGrp"];
                this.columnPCFilesNVerGrp = base.Columns["PCFilesNVerGrp"];
                this.columnRestrictAddToTable = base.Columns["RestrictAddToTable"];
                this.columnRuleDateField = base.Columns["RuleDateField"];
                this.columnTrackingACTIVEFieldName = base.Columns["TrackingACTIVEFieldName"];
                this.columnTrackingOUTFieldName = base.Columns["TrackingOUTFieldName"];
                this.columnTrackingType = base.Columns["TrackingType"];
                this.columnAuditConfidentialData = base.Columns["AuditConfidentialData"];
                this.columnAuditUpdate = base.Columns["AuditUpdate"];
                this.columnAllowBatchRequesting = base.Columns["AllowBatchRequesting"];
                this.columnParentFolderTableName = base.Columns["ParentFolderTableName"];
                this.columnParentDocTypeTableName = base.Columns["ParentDocTypeTableName"];
                this.columnRecordManageMgmtType = base.Columns["RecordManageMgmtType"];
                this.columnTrackingEmailFieldName = base.Columns["TrackingEmailFieldName"];
                this.columnAutoAddNotification = base.Columns["AutoAddNotification"];
                this.columnTrackingDueBackDaysFieldName = base.Columns["TrackingDueBackDaysFieldName"];
                this.columnImageCaptureFlagFieldName = base.Columns["ImageCaptureFlagFieldName"];
                this.columnSignatureRequiredFieldName = base.Columns["SignatureRequiredFieldName"];
                this.columnAuditAttachments = base.Columns["AuditAttachments"];
                this.columnRetentionFinalDisposition = base.Columns["RetentionFinalDisposition"];
                this.columnRetentionAssignmentMethod = base.Columns["RetentionAssignmentMethod"];
                this.columnRetentionRelatedTable = base.Columns["RetentionRelatedTable"];
                this.columnArchiveLocationField = base.Columns["ArchiveLocationField"];
                this.columnOfficialRecordHandling = base.Columns["OfficialRecordHandling"];
                this.columnDescriptionFieldName = base.Columns["DescriptionFieldName"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnTableName = new global::System.Data.DataColumn("TableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableName);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnDBName = new global::System.Data.DataColumn("DBName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBName);
                this.columnDatabaseAccessType = new global::System.Data.DataColumn("DatabaseAccessType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatabaseAccessType);
                this.columnAttachments = new global::System.Data.DataColumn("Attachments", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachments);
                this.columnAliasImagingTableName = new global::System.Data.DataColumn("AliasImagingTableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAliasImagingTableName);
                this.columnTrackingTable = new global::System.Data.DataColumn("TrackingTable", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingTable);
                this.columnTrackable = new global::System.Data.DataColumn("Trackable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackable);
                this.columnTrackingStatusFieldName = new global::System.Data.DataColumn("TrackingStatusFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingStatusFieldName);
                this.columnCounterFieldName = new global::System.Data.DataColumn("CounterFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounterFieldName);
                this.columnViewGroup = new global::System.Data.DataColumn("ViewGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewGroup);
                this.columnAddGroup = new global::System.Data.DataColumn("AddGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddGroup);
                this.columnEditGroup = new global::System.Data.DataColumn("EditGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditGroup);
                this.columnDelGroup = new global::System.Data.DataColumn("DelGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelGroup);
                this.columnMgrGroup = new global::System.Data.DataColumn("MgrGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMgrGroup);
                this.columnDeleteAttachedGroup = new global::System.Data.DataColumn("DeleteAttachedGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleteAttachedGroup);
                this.columnAttributesID = new global::System.Data.DataColumn("AttributesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttributesID);
                this.columnPicture = new global::System.Data.DataColumn("Picture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture);
                this.columnIdFieldName = new global::System.Data.DataColumn("IdFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdFieldName);
                this.columnIdFieldName2 = new global::System.Data.DataColumn("IdFieldName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdFieldName2);
                this.columnIdStripChars = new global::System.Data.DataColumn("IdStripChars", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdStripChars);
                this.columnIdMask = new global::System.Data.DataColumn("IdMask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdMask);
                this.columnBarCodePrefix = new global::System.Data.DataColumn("BarCodePrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarCodePrefix);
                this.columnDescFieldPrefixOne = new global::System.Data.DataColumn("DescFieldPrefixOne", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescFieldPrefixOne);
                this.columnDescFieldNameOne = new global::System.Data.DataColumn("DescFieldNameOne", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescFieldNameOne);
                this.columnDescFieldPrefixTwo = new global::System.Data.DataColumn("DescFieldPrefixTwo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescFieldPrefixTwo);
                this.columnDescFieldNameTwo = new global::System.Data.DataColumn("DescFieldNameTwo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescFieldNameTwo);
                this.columnMaxRecsOnDropDown = new global::System.Data.DataColumn("MaxRecsOnDropDown", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxRecsOnDropDown);
                this.columnADOServerCursor = new global::System.Data.DataColumn("ADOServerCursor", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADOServerCursor);
                this.columnADOQueryTimeout = new global::System.Data.DataColumn("ADOQueryTimeout", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADOQueryTimeout);
                this.columnADOCacheSize = new global::System.Data.DataColumn("ADOCacheSize", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADOCacheSize);
                this.columnLSBeforeAddRecord = new global::System.Data.DataColumn("LSBeforeAddRecord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSBeforeAddRecord);
                this.columnLSAfterAddRecord = new global::System.Data.DataColumn("LSAfterAddRecord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSAfterAddRecord);
                this.columnLSBeforeEditRecord = new global::System.Data.DataColumn("LSBeforeEditRecord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSBeforeEditRecord);
                this.columnLSAfterEditRecord = new global::System.Data.DataColumn("LSAfterEditRecord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSAfterEditRecord);
                this.columnLSBeforeDeleteRecord = new global::System.Data.DataColumn("LSBeforeDeleteRecord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSBeforeDeleteRecord);
                this.columnLSAfterDeleteRecord = new global::System.Data.DataColumn("LSAfterDeleteRecord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSAfterDeleteRecord);
                this.columnDefaultTrackingTable = new global::System.Data.DataColumn("DefaultTrackingTable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultTrackingTable);
                this.columnDefaultTrackingId = new global::System.Data.DataColumn("DefaultTrackingId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultTrackingId);
                this.columnRetentionPeriodActive = new global::System.Data.DataColumn("RetentionPeriodActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionPeriodActive);
                this.columnRetentionInactivityActive = new global::System.Data.DataColumn("RetentionInactivityActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionInactivityActive);
                this.columnRetentionDateOpenedField = new global::System.Data.DataColumn("RetentionDateOpenedField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionDateOpenedField);
                this.columnRetentionDateCreateField = new global::System.Data.DataColumn("RetentionDateCreateField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionDateCreateField);
                this.columnRetentionDateClosedField = new global::System.Data.DataColumn("RetentionDateClosedField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionDateClosedField);
                this.columnRetentionDateOtherField = new global::System.Data.DataColumn("RetentionDateOtherField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionDateOtherField);
                this.columnRetentionFieldName = new global::System.Data.DataColumn("RetentionFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionFieldName);
                this.columnTrackingPhoneFieldName = new global::System.Data.DataColumn("TrackingPhoneFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingPhoneFieldName);
                this.columnTrackingMailStopFieldName = new global::System.Data.DataColumn("TrackingMailStopFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingMailStopFieldName);
                this.columnTrackingRequestableFieldName = new global::System.Data.DataColumn("TrackingRequestableFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingRequestableFieldName);
                this.columnOperatorsIdField = new global::System.Data.DataColumn("OperatorsIdField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperatorsIdField);
                this.columnInactiveLocationField = new global::System.Data.DataColumn("InactiveLocationField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactiveLocationField);
                this.columnDefaultDescriptionField = new global::System.Data.DataColumn("DefaultDescriptionField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultDescriptionField);
                this.columnDefaultDescriptionText = new global::System.Data.DataColumn("DefaultDescriptionText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultDescriptionText);
                this.columnDefaultRetentionId = new global::System.Data.DataColumn("DefaultRetentionId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultRetentionId);
                this.columnDescFieldPrefixOneTable = new global::System.Data.DataColumn("DescFieldPrefixOneTable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescFieldPrefixOneTable);
                this.columnDescFieldPrefixOneWidth = new global::System.Data.DataColumn("DescFieldPrefixOneWidth", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescFieldPrefixOneWidth);
                this.columnDescRelateTable1 = new global::System.Data.DataColumn("DescRelateTable1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescRelateTable1);
                this.columnDescFieldPrefixTwoTable = new global::System.Data.DataColumn("DescFieldPrefixTwoTable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescFieldPrefixTwoTable);
                this.columnDescFieldPrefixTwoWidth = new global::System.Data.DataColumn("DescFieldPrefixTwoWidth", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescFieldPrefixTwoWidth);
                this.columnDescRelateTable2 = new global::System.Data.DataColumn("DescRelateTable2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescRelateTable2);
                this.columnMaxRecordsAllowed = new global::System.Data.DataColumn("MaxRecordsAllowed", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxRecordsAllowed);
                this.columnOutTable = new global::System.Data.DataColumn("OutTable", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutTable);
                this.columnPCFilesEditGrp = new global::System.Data.DataColumn("PCFilesEditGrp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCFilesEditGrp);
                this.columnPCFilesNVerGrp = new global::System.Data.DataColumn("PCFilesNVerGrp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCFilesNVerGrp);
                this.columnRestrictAddToTable = new global::System.Data.DataColumn("RestrictAddToTable", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestrictAddToTable);
                this.columnRuleDateField = new global::System.Data.DataColumn("RuleDateField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleDateField);
                this.columnTrackingACTIVEFieldName = new global::System.Data.DataColumn("TrackingACTIVEFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingACTIVEFieldName);
                this.columnTrackingOUTFieldName = new global::System.Data.DataColumn("TrackingOUTFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingOUTFieldName);
                this.columnTrackingType = new global::System.Data.DataColumn("TrackingType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingType);
                this.columnAuditConfidentialData = new global::System.Data.DataColumn("AuditConfidentialData", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuditConfidentialData);
                this.columnAuditUpdate = new global::System.Data.DataColumn("AuditUpdate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuditUpdate);
                this.columnAllowBatchRequesting = new global::System.Data.DataColumn("AllowBatchRequesting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowBatchRequesting);
                this.columnParentFolderTableName = new global::System.Data.DataColumn("ParentFolderTableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentFolderTableName);
                this.columnParentDocTypeTableName = new global::System.Data.DataColumn("ParentDocTypeTableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentDocTypeTableName);
                this.columnRecordManageMgmtType = new global::System.Data.DataColumn("RecordManageMgmtType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordManageMgmtType);
                this.columnTrackingEmailFieldName = new global::System.Data.DataColumn("TrackingEmailFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingEmailFieldName);
                this.columnAutoAddNotification = new global::System.Data.DataColumn("AutoAddNotification", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoAddNotification);
                this.columnTrackingDueBackDaysFieldName = new global::System.Data.DataColumn("TrackingDueBackDaysFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingDueBackDaysFieldName);
                this.columnImageCaptureFlagFieldName = new global::System.Data.DataColumn("ImageCaptureFlagFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageCaptureFlagFieldName);
                this.columnSignatureRequiredFieldName = new global::System.Data.DataColumn("SignatureRequiredFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignatureRequiredFieldName);
                this.columnAuditAttachments = new global::System.Data.DataColumn("AuditAttachments", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuditAttachments);
                this.columnRetentionFinalDisposition = new global::System.Data.DataColumn("RetentionFinalDisposition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionFinalDisposition);
                this.columnRetentionAssignmentMethod = new global::System.Data.DataColumn("RetentionAssignmentMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionAssignmentMethod);
                this.columnRetentionRelatedTable = new global::System.Data.DataColumn("RetentionRelatedTable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionRelatedTable);
                this.columnArchiveLocationField = new global::System.Data.DataColumn("ArchiveLocationField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchiveLocationField);
                this.columnOfficialRecordHandling = new global::System.Data.DataColumn("OfficialRecordHandling", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficialRecordHandling);
                this.columnDescriptionFieldName = new global::System.Data.DataColumn("DescriptionFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescriptionFieldName);
                this.columnTableName.AllowDBNull = false;
                this.columnTableName.MaxLength = 20;
                this.columnUserName.MaxLength = 50;
                this.columnDBName.MaxLength = 50;
                this.columnAliasImagingTableName.MaxLength = 20;
                this.columnTrackingStatusFieldName.MaxLength = 50;
                this.columnCounterFieldName.MaxLength = 50;
                this.columnPicture.MaxLength = 80;
                this.columnIdFieldName.MaxLength = 50;
                this.columnIdFieldName2.MaxLength = 50;
                this.columnIdStripChars.MaxLength = 10;
                this.columnIdMask.MaxLength = 20;
                this.columnBarCodePrefix.MaxLength = 10;
                this.columnDescFieldPrefixOne.MaxLength = 20;
                this.columnDescFieldNameOne.MaxLength = 50;
                this.columnDescFieldPrefixTwo.MaxLength = 20;
                this.columnDescFieldNameTwo.MaxLength = 50;
                this.columnLSBeforeAddRecord.MaxLength = 50;
                this.columnLSAfterAddRecord.MaxLength = 50;
                this.columnLSBeforeEditRecord.MaxLength = 50;
                this.columnLSAfterEditRecord.MaxLength = 50;
                this.columnLSBeforeDeleteRecord.MaxLength = 50;
                this.columnLSAfterDeleteRecord.MaxLength = 50;
                this.columnDefaultTrackingTable.MaxLength = 20;
                this.columnDefaultTrackingId.MaxLength = 30;
                this.columnRetentionDateOpenedField.MaxLength = 50;
                this.columnRetentionDateCreateField.MaxLength = 50;
                this.columnRetentionDateClosedField.MaxLength = 50;
                this.columnRetentionDateOtherField.MaxLength = 50;
                this.columnRetentionFieldName.MaxLength = 50;
                this.columnTrackingPhoneFieldName.MaxLength = 30;
                this.columnTrackingMailStopFieldName.MaxLength = 30;
                this.columnTrackingRequestableFieldName.MaxLength = 30;
                this.columnOperatorsIdField.MaxLength = 30;
                this.columnInactiveLocationField.MaxLength = 50;
                this.columnDefaultDescriptionField.MaxLength = 20;
                this.columnDefaultDescriptionText.MaxLength = 20;
                this.columnDefaultRetentionId.MaxLength = 20;
                this.columnDescFieldPrefixOneTable.MaxLength = 20;
                this.columnDescRelateTable1.MaxLength = 20;
                this.columnDescFieldPrefixTwoTable.MaxLength = 20;
                this.columnDescRelateTable2.MaxLength = 20;
                this.columnRuleDateField.MaxLength = 50;
                this.columnTrackingACTIVEFieldName.MaxLength = 50;
                this.columnTrackingOUTFieldName.MaxLength = 50;
                this.columnParentFolderTableName.MaxLength = 20;
                this.columnParentDocTypeTableName.MaxLength = 20;
                this.columnTrackingEmailFieldName.MaxLength = 30;
                this.columnTrackingDueBackDaysFieldName.MaxLength = 30;
                this.columnImageCaptureFlagFieldName.MaxLength = 30;
                this.columnSignatureRequiredFieldName.MaxLength = 255;
                this.columnRetentionRelatedTable.MaxLength = 20;
                this.columnArchiveLocationField.MaxLength = 50;
                this.columnDescriptionFieldName.MaxLength = 50;
                this.ExtendedProperties.Add("Generator_TablePropName", "_Tables");
                this.ExtendedProperties.Add("Generator_UserTableName", "Tables");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow NewTablesRow()
            {
                return ((TablesRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new TablesRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(TablesRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.TablesRowChanged != null))
                {
                    this.TablesRowChanged(this, new TablesRowChangeEvent(((TablesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.TablesRowChanging != null))
                {
                    this.TablesRowChanging(this, new TablesRowChangeEvent(((TablesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.TablesRowDeleted != null))
                {
                    this.TablesRowDeleted(this, new TablesRowChangeEvent(((TablesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.TablesRowDeleting != null))
                {
                    this.TablesRowDeleting(this, new TablesRowChangeEvent(((TablesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTablesRow(TablesRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TablesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TabletabsDataTable : global::System.Data.TypedTableBase<TabletabsRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnTableName;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabletabsDataTable()
            {
                this.TableName = "Tabletabs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TabletabsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TabletabsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TableNameColumn
            {
                get
                {
                    return this.columnTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabletabsRow this[int index]
            {
                get
                {
                    return ((TabletabsRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TabletabsRowChangeEventHandler TabletabsRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TabletabsRowChangeEventHandler TabletabsRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TabletabsRowChangeEventHandler TabletabsRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TabletabsRowChangeEventHandler TabletabsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTabletabsRow(TabletabsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabletabsRow AddTabletabsRow(string TableName)
            {
                TabletabsRow rowTabletabsRow = ((TabletabsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    TableName};
                rowTabletabsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTabletabsRow);
                return rowTabletabsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabletabsRow FindById(int Id)
            {
                return ((TabletabsRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                TabletabsDataTable cln = ((TabletabsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new TabletabsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnTableName = base.Columns["TableName"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnTableName = new global::System.Data.DataColumn("TableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnTableName.MaxLength = 20;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabletabsRow NewTabletabsRow()
            {
                return ((TabletabsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new TabletabsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(TabletabsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.TabletabsRowChanged != null))
                {
                    this.TabletabsRowChanged(this, new TabletabsRowChangeEvent(((TabletabsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.TabletabsRowChanging != null))
                {
                    this.TabletabsRowChanging(this, new TabletabsRowChangeEvent(((TabletabsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.TabletabsRowDeleted != null))
                {
                    this.TabletabsRowDeleted(this, new TabletabsRowChangeEvent(((TabletabsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.TabletabsRowDeleting != null))
                {
                    this.TabletabsRowDeleting(this, new TabletabsRowChangeEvent(((TabletabsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTabletabsRow(TabletabsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TabletabsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        //[global::System.Serializable()]
        //[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ViewColumnsDataTable : global::System.Data.TypedTableBase<ViewColumnsRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnViewsId;

            private global::System.Data.DataColumn columnColumnNum;

            private global::System.Data.DataColumn columnFieldName;

            private global::System.Data.DataColumn columnHeading;

            private global::System.Data.DataColumn columnLookupType;

            private global::System.Data.DataColumn columnColumnWidth;

            private global::System.Data.DataColumn columnColumnVisible;

            private global::System.Data.DataColumn columnColumnOrder;

            private global::System.Data.DataColumn columnColumnStyle;

            private global::System.Data.DataColumn columnEditMask;

            private global::System.Data.DataColumn columnPicture;

            private global::System.Data.DataColumn columnLookupIdCol;

            private global::System.Data.DataColumn columnSortField;

            private global::System.Data.DataColumn columnSortableField;

            private global::System.Data.DataColumn columnFilterField;

            private global::System.Data.DataColumn columnCountColumn;

            private global::System.Data.DataColumn columnSubtotalColumn;

            private global::System.Data.DataColumn columnPrintColumnAsSubheader;

            private global::System.Data.DataColumn columnRestartPageNumber;

            private global::System.Data.DataColumn columnUseAsPrintId;

            private global::System.Data.DataColumn columnDropDownSuggestionOnly;

            private global::System.Data.DataColumn columnSuppressPrinting;

            private global::System.Data.DataColumn columnValueCount;

            private global::System.Data.DataColumn columnAlternateFieldName;

            private global::System.Data.DataColumn columnDefaultLookupValue;

            private global::System.Data.DataColumn columnDropDownFilterIdField;

            private global::System.Data.DataColumn columnDropDownFilterMatchField;

            private global::System.Data.DataColumn columnDropDownFlag;

            private global::System.Data.DataColumn columnDropDownReferenceColNum;

            private global::System.Data.DataColumn columnDropDownReferenceValue;

            private global::System.Data.DataColumn columnDropDownTargetField;

            private global::System.Data.DataColumn columnEditAllowed;

            private global::System.Data.DataColumn columnFormColWidth;

            private global::System.Data.DataColumn columnFreezeOrder;

            private global::System.Data.DataColumn columnInputMask;

            private global::System.Data.DataColumn columnMaskClipMode;

            private global::System.Data.DataColumn columnMaskInclude;

            private global::System.Data.DataColumn columnMaskPromptChar;

            private global::System.Data.DataColumn columnMaxPrintLines;

            private global::System.Data.DataColumn columnPageBreakField;

            private global::System.Data.DataColumn columnPrinterColWidth;

            private global::System.Data.DataColumn columnSortOrder;

            private global::System.Data.DataColumn columnSortOrderDesc;

            private global::System.Data.DataColumn columnSuppressDuplicates;

            private global::System.Data.DataColumn columnVisibleOnForm;

            private global::System.Data.DataColumn columnVisibleOnPrint;

            private global::System.Data.DataColumn columnAlternateSortColumn;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsDataTable()
            {
                this.TableName = "ViewColumns";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ViewColumnsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ViewColumnsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ViewsIdColumn
            {
                get
                {
                    return this.columnViewsId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColumnNumColumn
            {
                get
                {
                    return this.columnColumnNum;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FieldNameColumn
            {
                get
                {
                    return this.columnFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeadingColumn
            {
                get
                {
                    return this.columnHeading;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LookupTypeColumn
            {
                get
                {
                    return this.columnLookupType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColumnWidthColumn
            {
                get
                {
                    return this.columnColumnWidth;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColumnVisibleColumn
            {
                get
                {
                    return this.columnColumnVisible;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColumnOrderColumn
            {
                get
                {
                    return this.columnColumnOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColumnStyleColumn
            {
                get
                {
                    return this.columnColumnStyle;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EditMaskColumn
            {
                get
                {
                    return this.columnEditMask;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PictureColumn
            {
                get
                {
                    return this.columnPicture;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LookupIdColColumn
            {
                get
                {
                    return this.columnLookupIdCol;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SortFieldColumn
            {
                get
                {
                    return this.columnSortField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SortableFieldColumn
            {
                get
                {
                    return this.columnSortableField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FilterFieldColumn
            {
                get
                {
                    return this.columnFilterField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountColumnColumn
            {
                get
                {
                    return this.columnCountColumn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubtotalColumnColumn
            {
                get
                {
                    return this.columnSubtotalColumn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrintColumnAsSubheaderColumn
            {
                get
                {
                    return this.columnPrintColumnAsSubheader;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RestartPageNumberColumn
            {
                get
                {
                    return this.columnRestartPageNumber;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseAsPrintIdColumn
            {
                get
                {
                    return this.columnUseAsPrintId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DropDownSuggestionOnlyColumn
            {
                get
                {
                    return this.columnDropDownSuggestionOnly;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuppressPrintingColumn
            {
                get
                {
                    return this.columnSuppressPrinting;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValueCountColumn
            {
                get
                {
                    return this.columnValueCount;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternateFieldNameColumn
            {
                get
                {
                    return this.columnAlternateFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultLookupValueColumn
            {
                get
                {
                    return this.columnDefaultLookupValue;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DropDownFilterIdFieldColumn
            {
                get
                {
                    return this.columnDropDownFilterIdField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DropDownFilterMatchFieldColumn
            {
                get
                {
                    return this.columnDropDownFilterMatchField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DropDownFlagColumn
            {
                get
                {
                    return this.columnDropDownFlag;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DropDownReferenceColNumColumn
            {
                get
                {
                    return this.columnDropDownReferenceColNum;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DropDownReferenceValueColumn
            {
                get
                {
                    return this.columnDropDownReferenceValue;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DropDownTargetFieldColumn
            {
                get
                {
                    return this.columnDropDownTargetField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EditAllowedColumn
            {
                get
                {
                    return this.columnEditAllowed;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormColWidthColumn
            {
                get
                {
                    return this.columnFormColWidth;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreezeOrderColumn
            {
                get
                {
                    return this.columnFreezeOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputMaskColumn
            {
                get
                {
                    return this.columnInputMask;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaskClipModeColumn
            {
                get
                {
                    return this.columnMaskClipMode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaskIncludeColumn
            {
                get
                {
                    return this.columnMaskInclude;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaskPromptCharColumn
            {
                get
                {
                    return this.columnMaskPromptChar;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxPrintLinesColumn
            {
                get
                {
                    return this.columnMaxPrintLines;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PageBreakFieldColumn
            {
                get
                {
                    return this.columnPageBreakField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrinterColWidthColumn
            {
                get
                {
                    return this.columnPrinterColWidth;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SortOrderColumn
            {
                get
                {
                    return this.columnSortOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SortOrderDescColumn
            {
                get
                {
                    return this.columnSortOrderDesc;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuppressDuplicatesColumn
            {
                get
                {
                    return this.columnSuppressDuplicates;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisibleOnFormColumn
            {
                get
                {
                    return this.columnVisibleOnForm;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisibleOnPrintColumn
            {
                get
                {
                    return this.columnVisibleOnPrint;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternateSortColumnColumn
            {
                get
                {
                    return this.columnAlternateSortColumn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow this[int index]
            {
                get
                {
                    return ((ViewColumnsRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewColumnsRowChangeEventHandler ViewColumnsRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewColumnsRowChangeEventHandler ViewColumnsRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewColumnsRowChangeEventHandler ViewColumnsRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewColumnsRowChangeEventHandler ViewColumnsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddViewColumnsRow(ViewColumnsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow AddViewColumnsRow(
                        int ViewsId,
                        short ColumnNum,
                        string FieldName,
                        string Heading,
                        short LookupType,
                        short ColumnWidth,
                        bool ColumnVisible,
                        short ColumnOrder,
                        short ColumnStyle,
                        string EditMask,
                        string Picture,
                        short LookupIdCol,
                        short SortField,
                        bool SortableField,
                        bool FilterField,
                        bool CountColumn,
                        bool SubtotalColumn,
                        bool PrintColumnAsSubheader,
                        bool RestartPageNumber,
                        bool UseAsPrintId,
                        bool DropDownSuggestionOnly,
                        bool SuppressPrinting,
                        bool ValueCount,
                        string AlternateFieldName,
                        string DefaultLookupValue,
                        string DropDownFilterIdField,
                        string DropDownFilterMatchField,
                        short DropDownFlag,
                        short DropDownReferenceColNum,
                        string DropDownReferenceValue,
                        string DropDownTargetField,
                        bool EditAllowed,
                        int FormColWidth,
                        int FreezeOrder,
                        string InputMask,
                        bool MaskClipMode,
                        bool MaskInclude,
                        string MaskPromptChar,
                        int MaxPrintLines,
                        bool PageBreakField,
                        int PrinterColWidth,
                        int SortOrder,
                        bool SortOrderDesc,
                        bool SuppressDuplicates,
                        bool VisibleOnForm,
                        bool VisibleOnPrint,
                        int AlternateSortColumn)
            {
                ViewColumnsRow rowViewColumnsRow = ((ViewColumnsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    ViewsId,
                    ColumnNum,
                    FieldName,
                    Heading,
                    LookupType,
                    ColumnWidth,
                    ColumnVisible,
                    ColumnOrder,
                    ColumnStyle,
                    EditMask,
                    Picture,
                    LookupIdCol,
                    SortField,
                    SortableField,
                    FilterField,
                    CountColumn,
                    SubtotalColumn,
                    PrintColumnAsSubheader,
                    RestartPageNumber,
                    UseAsPrintId,
                    DropDownSuggestionOnly,
                    SuppressPrinting,
                    ValueCount,
                    AlternateFieldName,
                    DefaultLookupValue,
                    DropDownFilterIdField,
                    DropDownFilterMatchField,
                    DropDownFlag,
                    DropDownReferenceColNum,
                    DropDownReferenceValue,
                    DropDownTargetField,
                    EditAllowed,
                    FormColWidth,
                    FreezeOrder,
                    InputMask,
                    MaskClipMode,
                    MaskInclude,
                    MaskPromptChar,
                    MaxPrintLines,
                    PageBreakField,
                    PrinterColWidth,
                    SortOrder,
                    SortOrderDesc,
                    SuppressDuplicates,
                    VisibleOnForm,
                    VisibleOnPrint,
                    AlternateSortColumn};
                rowViewColumnsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowViewColumnsRow);
                return rowViewColumnsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow FindById(int Id)
            {
                return ((ViewColumnsRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                ViewColumnsDataTable cln = ((ViewColumnsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new ViewColumnsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnViewsId = base.Columns["ViewsId"];
                this.columnColumnNum = base.Columns["ColumnNum"];
                this.columnFieldName = base.Columns["FieldName"];
                this.columnHeading = base.Columns["Heading"];
                this.columnLookupType = base.Columns["LookupType"];
                this.columnColumnWidth = base.Columns["ColumnWidth"];
                this.columnColumnVisible = base.Columns["ColumnVisible"];
                this.columnColumnOrder = base.Columns["ColumnOrder"];
                this.columnColumnStyle = base.Columns["ColumnStyle"];
                this.columnEditMask = base.Columns["EditMask"];
                this.columnPicture = base.Columns["Picture"];
                this.columnLookupIdCol = base.Columns["LookupIdCol"];
                this.columnSortField = base.Columns["SortField"];
                this.columnSortableField = base.Columns["SortableField"];
                this.columnFilterField = base.Columns["FilterField"];
                this.columnCountColumn = base.Columns["CountColumn"];
                this.columnSubtotalColumn = base.Columns["SubtotalColumn"];
                this.columnPrintColumnAsSubheader = base.Columns["PrintColumnAsSubheader"];
                this.columnRestartPageNumber = base.Columns["RestartPageNumber"];
                this.columnUseAsPrintId = base.Columns["UseAsPrintId"];
                this.columnDropDownSuggestionOnly = base.Columns["DropDownSuggestionOnly"];
                this.columnSuppressPrinting = base.Columns["SuppressPrinting"];
                this.columnValueCount = base.Columns["ValueCount"];
                this.columnAlternateFieldName = base.Columns["AlternateFieldName"];
                this.columnDefaultLookupValue = base.Columns["DefaultLookupValue"];
                this.columnDropDownFilterIdField = base.Columns["DropDownFilterIdField"];
                this.columnDropDownFilterMatchField = base.Columns["DropDownFilterMatchField"];
                this.columnDropDownFlag = base.Columns["DropDownFlag"];
                this.columnDropDownReferenceColNum = base.Columns["DropDownReferenceColNum"];
                this.columnDropDownReferenceValue = base.Columns["DropDownReferenceValue"];
                this.columnDropDownTargetField = base.Columns["DropDownTargetField"];
                this.columnEditAllowed = base.Columns["EditAllowed"];
                this.columnFormColWidth = base.Columns["FormColWidth"];
                this.columnFreezeOrder = base.Columns["FreezeOrder"];
                this.columnInputMask = base.Columns["InputMask"];
                this.columnMaskClipMode = base.Columns["MaskClipMode"];
                this.columnMaskInclude = base.Columns["MaskInclude"];
                this.columnMaskPromptChar = base.Columns["MaskPromptChar"];
                this.columnMaxPrintLines = base.Columns["MaxPrintLines"];
                this.columnPageBreakField = base.Columns["PageBreakField"];
                this.columnPrinterColWidth = base.Columns["PrinterColWidth"];
                this.columnSortOrder = base.Columns["SortOrder"];
                this.columnSortOrderDesc = base.Columns["SortOrderDesc"];
                this.columnSuppressDuplicates = base.Columns["SuppressDuplicates"];
                this.columnVisibleOnForm = base.Columns["VisibleOnForm"];
                this.columnVisibleOnPrint = base.Columns["VisibleOnPrint"];
                this.columnAlternateSortColumn = base.Columns["AlternateSortColumn"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnViewsId = new global::System.Data.DataColumn("ViewsId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewsId);
                this.columnColumnNum = new global::System.Data.DataColumn("ColumnNum", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnNum);
                this.columnFieldName = new global::System.Data.DataColumn("FieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldName);
                this.columnHeading = new global::System.Data.DataColumn("Heading", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeading);
                this.columnLookupType = new global::System.Data.DataColumn("LookupType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLookupType);
                this.columnColumnWidth = new global::System.Data.DataColumn("ColumnWidth", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnWidth);
                this.columnColumnVisible = new global::System.Data.DataColumn("ColumnVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnVisible);
                this.columnColumnOrder = new global::System.Data.DataColumn("ColumnOrder", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnOrder);
                this.columnColumnStyle = new global::System.Data.DataColumn("ColumnStyle", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnStyle);
                this.columnEditMask = new global::System.Data.DataColumn("EditMask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditMask);
                this.columnPicture = new global::System.Data.DataColumn("Picture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture);
                this.columnLookupIdCol = new global::System.Data.DataColumn("LookupIdCol", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLookupIdCol);
                this.columnSortField = new global::System.Data.DataColumn("SortField", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortField);
                this.columnSortableField = new global::System.Data.DataColumn("SortableField", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortableField);
                this.columnFilterField = new global::System.Data.DataColumn("FilterField", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterField);
                this.columnCountColumn = new global::System.Data.DataColumn("CountColumn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountColumn);
                this.columnSubtotalColumn = new global::System.Data.DataColumn("SubtotalColumn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubtotalColumn);
                this.columnPrintColumnAsSubheader = new global::System.Data.DataColumn("PrintColumnAsSubheader", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintColumnAsSubheader);
                this.columnRestartPageNumber = new global::System.Data.DataColumn("RestartPageNumber", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestartPageNumber);
                this.columnUseAsPrintId = new global::System.Data.DataColumn("UseAsPrintId", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseAsPrintId);
                this.columnDropDownSuggestionOnly = new global::System.Data.DataColumn("DropDownSuggestionOnly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropDownSuggestionOnly);
                this.columnSuppressPrinting = new global::System.Data.DataColumn("SuppressPrinting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppressPrinting);
                this.columnValueCount = new global::System.Data.DataColumn("ValueCount", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCount);
                this.columnAlternateFieldName = new global::System.Data.DataColumn("AlternateFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternateFieldName);
                this.columnDefaultLookupValue = new global::System.Data.DataColumn("DefaultLookupValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultLookupValue);
                this.columnDropDownFilterIdField = new global::System.Data.DataColumn("DropDownFilterIdField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropDownFilterIdField);
                this.columnDropDownFilterMatchField = new global::System.Data.DataColumn("DropDownFilterMatchField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropDownFilterMatchField);
                this.columnDropDownFlag = new global::System.Data.DataColumn("DropDownFlag", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropDownFlag);
                this.columnDropDownReferenceColNum = new global::System.Data.DataColumn("DropDownReferenceColNum", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropDownReferenceColNum);
                this.columnDropDownReferenceValue = new global::System.Data.DataColumn("DropDownReferenceValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropDownReferenceValue);
                this.columnDropDownTargetField = new global::System.Data.DataColumn("DropDownTargetField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropDownTargetField);
                this.columnEditAllowed = new global::System.Data.DataColumn("EditAllowed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditAllowed);
                this.columnFormColWidth = new global::System.Data.DataColumn("FormColWidth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormColWidth);
                this.columnFreezeOrder = new global::System.Data.DataColumn("FreezeOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreezeOrder);
                this.columnInputMask = new global::System.Data.DataColumn("InputMask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputMask);
                this.columnMaskClipMode = new global::System.Data.DataColumn("MaskClipMode", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaskClipMode);
                this.columnMaskInclude = new global::System.Data.DataColumn("MaskInclude", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaskInclude);
                this.columnMaskPromptChar = new global::System.Data.DataColumn("MaskPromptChar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaskPromptChar);
                this.columnMaxPrintLines = new global::System.Data.DataColumn("MaxPrintLines", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxPrintLines);
                this.columnPageBreakField = new global::System.Data.DataColumn("PageBreakField", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageBreakField);
                this.columnPrinterColWidth = new global::System.Data.DataColumn("PrinterColWidth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrinterColWidth);
                this.columnSortOrder = new global::System.Data.DataColumn("SortOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortOrder);
                this.columnSortOrderDesc = new global::System.Data.DataColumn("SortOrderDesc", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortOrderDesc);
                this.columnSuppressDuplicates = new global::System.Data.DataColumn("SuppressDuplicates", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppressDuplicates);
                this.columnVisibleOnForm = new global::System.Data.DataColumn("VisibleOnForm", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisibleOnForm);
                this.columnVisibleOnPrint = new global::System.Data.DataColumn("VisibleOnPrint", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisibleOnPrint);
                this.columnAlternateSortColumn = new global::System.Data.DataColumn("AlternateSortColumn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternateSortColumn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnFieldName.MaxLength = 50;
                this.columnHeading.MaxLength = 30;
                this.columnEditMask.MaxLength = 30;
                this.columnPicture.MaxLength = 20;
                this.columnAlternateFieldName.MaxLength = 2147483647;
                this.columnDefaultLookupValue.MaxLength = 50;
                this.columnDropDownFilterIdField.MaxLength = 50;
                this.columnDropDownFilterMatchField.MaxLength = 50;
                this.columnDropDownReferenceValue.MaxLength = 30;
                this.columnDropDownTargetField.MaxLength = 50;
                this.columnInputMask.MaxLength = 50;
                this.columnMaskPromptChar.MaxLength = 1;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow NewViewColumnsRow()
            {
                return ((ViewColumnsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new ViewColumnsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(ViewColumnsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.ViewColumnsRowChanged != null))
                {
                    this.ViewColumnsRowChanged(this, new ViewColumnsRowChangeEvent(((ViewColumnsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.ViewColumnsRowChanging != null))
                {
                    this.ViewColumnsRowChanging(this, new ViewColumnsRowChangeEvent(((ViewColumnsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.ViewColumnsRowDeleted != null))
                {
                    this.ViewColumnsRowDeleted(this, new ViewColumnsRowChangeEvent(((ViewColumnsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.ViewColumnsRowDeleting != null))
                {
                    this.ViewColumnsRowDeleting(this, new ViewColumnsRowChangeEvent(((ViewColumnsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveViewColumnsRow(ViewColumnsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ViewColumnsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StatusHistoryDataTable : global::System.Data.TypedTableBase<StatusHistoryRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnFoldersId;

            private global::System.Data.DataColumn columnOperator;

            private global::System.Data.DataColumn columnStatusChangeDateTime;

            private global::System.Data.DataColumn columnNewStatus;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusHistoryDataTable()
            {
                this.TableName = "StatusHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StatusHistoryDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StatusHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FoldersIdColumn
            {
                get
                {
                    return this.columnFoldersId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OperatorColumn
            {
                get
                {
                    return this.columnOperator;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusChangeDateTimeColumn
            {
                get
                {
                    return this.columnStatusChangeDateTime;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NewStatusColumn
            {
                get
                {
                    return this.columnNewStatus;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusHistoryRow this[int index]
            {
                get
                {
                    return ((StatusHistoryRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatusHistoryRowChangeEventHandler StatusHistoryRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatusHistoryRowChangeEventHandler StatusHistoryRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatusHistoryRowChangeEventHandler StatusHistoryRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatusHistoryRowChangeEventHandler StatusHistoryRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStatusHistoryRow(StatusHistoryRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusHistoryRow AddStatusHistoryRow(int FoldersId, string Operator, System.DateTime StatusChangeDateTime, string NewStatus)
            {
                StatusHistoryRow rowStatusHistoryRow = ((StatusHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    FoldersId,
                    Operator,
                    StatusChangeDateTime,
                    NewStatus};
                rowStatusHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStatusHistoryRow);
                return rowStatusHistoryRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusHistoryRow FindById(int Id)
            {
                return ((StatusHistoryRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                StatusHistoryDataTable cln = ((StatusHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new StatusHistoryDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnFoldersId = base.Columns["FoldersId"];
                this.columnOperator = base.Columns["Operator"];
                this.columnStatusChangeDateTime = base.Columns["StatusChangeDateTime"];
                this.columnNewStatus = base.Columns["NewStatus"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnFoldersId = new global::System.Data.DataColumn("FoldersId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFoldersId);
                this.columnOperator = new global::System.Data.DataColumn("Operator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperator);
                this.columnStatusChangeDateTime = new global::System.Data.DataColumn("StatusChangeDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusChangeDateTime);
                this.columnNewStatus = new global::System.Data.DataColumn("NewStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnOperator.MaxLength = 50;
                this.columnNewStatus.MaxLength = 20;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusHistoryRow NewStatusHistoryRow()
            {
                return ((StatusHistoryRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new StatusHistoryRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(StatusHistoryRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.StatusHistoryRowChanged != null))
                {
                    this.StatusHistoryRowChanged(this, new StatusHistoryRowChangeEvent(((StatusHistoryRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.StatusHistoryRowChanging != null))
                {
                    this.StatusHistoryRowChanging(this, new StatusHistoryRowChangeEvent(((StatusHistoryRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.StatusHistoryRowDeleted != null))
                {
                    this.StatusHistoryRowDeleted(this, new StatusHistoryRowChangeEvent(((StatusHistoryRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.StatusHistoryRowDeleting != null))
                {
                    this.StatusHistoryRowDeleting(this, new StatusHistoryRowChangeEvent(((StatusHistoryRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStatusHistoryRow(StatusHistoryRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StatusHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LinkScriptHeaderDataTable : global::System.Data.TypedTableBase<LinkScriptHeaderRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnFormPageAction;

            private global::System.Data.DataColumn columnDirectoryName;

            private global::System.Data.DataColumn columnOutputSettingsId;

            private global::System.Data.DataColumn columnCallingType;

            private global::System.Data.DataColumn columnPCFilesDeleteAfterCopy;

            private global::System.Data.DataColumn columnViewGroup;

            private global::System.Data.DataColumn columnUIType;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptHeaderDataTable()
            {
                this.TableName = "LinkScriptHeader";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LinkScriptHeaderDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LinkScriptHeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormPageActionColumn
            {
                get
                {
                    return this.columnFormPageAction;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectoryNameColumn
            {
                get
                {
                    return this.columnDirectoryName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutputSettingsIdColumn
            {
                get
                {
                    return this.columnOutputSettingsId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallingTypeColumn
            {
                get
                {
                    return this.columnCallingType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCFilesDeleteAfterCopyColumn
            {
                get
                {
                    return this.columnPCFilesDeleteAfterCopy;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ViewGroupColumn
            {
                get
                {
                    return this.columnViewGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UITypeColumn
            {
                get
                {
                    return this.columnUIType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptHeaderRow this[int index]
            {
                get
                {
                    return ((LinkScriptHeaderRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LinkScriptHeaderRowChangeEventHandler LinkScriptHeaderRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LinkScriptHeaderRowChangeEventHandler LinkScriptHeaderRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LinkScriptHeaderRowChangeEventHandler LinkScriptHeaderRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LinkScriptHeaderRowChangeEventHandler LinkScriptHeaderRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLinkScriptHeaderRow(LinkScriptHeaderRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptHeaderRow AddLinkScriptHeaderRow(string Id, int FormPageAction, string DirectoryName, string OutputSettingsId, int CallingType, bool PCFilesDeleteAfterCopy, int ViewGroup, int UIType)
            {
                LinkScriptHeaderRow rowLinkScriptHeaderRow = ((LinkScriptHeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    Id,
                    FormPageAction,
                    DirectoryName,
                    OutputSettingsId,
                    CallingType,
                    PCFilesDeleteAfterCopy,
                    ViewGroup,
                    UIType};
                rowLinkScriptHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLinkScriptHeaderRow);
                return rowLinkScriptHeaderRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptHeaderRow FindById(string Id)
            {
                return ((LinkScriptHeaderRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                LinkScriptHeaderDataTable cln = ((LinkScriptHeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new LinkScriptHeaderDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnFormPageAction = base.Columns["FormPageAction"];
                this.columnDirectoryName = base.Columns["DirectoryName"];
                this.columnOutputSettingsId = base.Columns["OutputSettingsId"];
                this.columnCallingType = base.Columns["CallingType"];
                this.columnPCFilesDeleteAfterCopy = base.Columns["PCFilesDeleteAfterCopy"];
                this.columnViewGroup = base.Columns["ViewGroup"];
                this.columnUIType = base.Columns["UIType"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnFormPageAction = new global::System.Data.DataColumn("FormPageAction", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormPageAction);
                this.columnDirectoryName = new global::System.Data.DataColumn("DirectoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectoryName);
                this.columnOutputSettingsId = new global::System.Data.DataColumn("OutputSettingsId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputSettingsId);
                this.columnCallingType = new global::System.Data.DataColumn("CallingType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallingType);
                this.columnPCFilesDeleteAfterCopy = new global::System.Data.DataColumn("PCFilesDeleteAfterCopy", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCFilesDeleteAfterCopy);
                this.columnViewGroup = new global::System.Data.DataColumn("ViewGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewGroup);
                this.columnUIType = new global::System.Data.DataColumn("UIType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUIType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnId.MaxLength = 50;
                this.columnDirectoryName.MaxLength = 120;
                this.columnOutputSettingsId.MaxLength = 20;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptHeaderRow NewLinkScriptHeaderRow()
            {
                return ((LinkScriptHeaderRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new LinkScriptHeaderRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(LinkScriptHeaderRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.LinkScriptHeaderRowChanged != null))
                {
                    this.LinkScriptHeaderRowChanged(this, new LinkScriptHeaderRowChangeEvent(((LinkScriptHeaderRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.LinkScriptHeaderRowChanging != null))
                {
                    this.LinkScriptHeaderRowChanging(this, new LinkScriptHeaderRowChangeEvent(((LinkScriptHeaderRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.LinkScriptHeaderRowDeleted != null))
                {
                    this.LinkScriptHeaderRowDeleted(this, new LinkScriptHeaderRowChangeEvent(((LinkScriptHeaderRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.LinkScriptHeaderRowDeleting != null))
                {
                    this.LinkScriptHeaderRowDeleting(this, new LinkScriptHeaderRowChangeEvent(((LinkScriptHeaderRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLinkScriptHeaderRow(LinkScriptHeaderRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LinkScriptHeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LinkScriptDataTable : global::System.Data.TypedTableBase<LinkScriptRow>
        {

            private global::System.Data.DataColumn columnScriptName;

            private global::System.Data.DataColumn columnScriptSequence;

            private global::System.Data.DataColumn columnCommand;

            private global::System.Data.DataColumn columnArgOne;

            private global::System.Data.DataColumn columnArgTwo;

            private global::System.Data.DataColumn columnArgThree;

            private global::System.Data.DataColumn columnResult;

            private global::System.Data.DataColumn columnComment;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptDataTable()
            {
                this.TableName = "LinkScript";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LinkScriptDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LinkScriptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScriptNameColumn
            {
                get
                {
                    return this.columnScriptName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScriptSequenceColumn
            {
                get
                {
                    return this.columnScriptSequence;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommandColumn
            {
                get
                {
                    return this.columnCommand;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArgOneColumn
            {
                get
                {
                    return this.columnArgOne;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArgTwoColumn
            {
                get
                {
                    return this.columnArgTwo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArgThreeColumn
            {
                get
                {
                    return this.columnArgThree;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultColumn
            {
                get
                {
                    return this.columnResult;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptRow this[int index]
            {
                get
                {
                    return ((LinkScriptRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LinkScriptRowChangeEventHandler LinkScriptRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LinkScriptRowChangeEventHandler LinkScriptRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LinkScriptRowChangeEventHandler LinkScriptRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LinkScriptRowChangeEventHandler LinkScriptRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLinkScriptRow(LinkScriptRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptRow AddLinkScriptRow(string ScriptName, double ScriptSequence, string Command, string ArgOne, string ArgTwo, string ArgThree, string Result, string Comment)
            {
                LinkScriptRow rowLinkScriptRow = ((LinkScriptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    ScriptName,
                    ScriptSequence,
                    Command,
                    ArgOne,
                    ArgTwo,
                    ArgThree,
                    Result,
                    Comment};
                rowLinkScriptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLinkScriptRow);
                return rowLinkScriptRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptRow FindByScriptNameScriptSequence(string ScriptName, double ScriptSequence)
            {
                return ((LinkScriptRow)(this.Rows.Find(new object[] {
                        ScriptName,
                        ScriptSequence})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                LinkScriptDataTable cln = ((LinkScriptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new LinkScriptDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnScriptName = base.Columns["ScriptName"];
                this.columnScriptSequence = base.Columns["ScriptSequence"];
                this.columnCommand = base.Columns["Command"];
                this.columnArgOne = base.Columns["ArgOne"];
                this.columnArgTwo = base.Columns["ArgTwo"];
                this.columnArgThree = base.Columns["ArgThree"];
                this.columnResult = base.Columns["Result"];
                this.columnComment = base.Columns["Comment"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnScriptName = new global::System.Data.DataColumn("ScriptName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScriptName);
                this.columnScriptSequence = new global::System.Data.DataColumn("ScriptSequence", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScriptSequence);
                this.columnCommand = new global::System.Data.DataColumn("Command", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommand);
                this.columnArgOne = new global::System.Data.DataColumn("ArgOne", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArgOne);
                this.columnArgTwo = new global::System.Data.DataColumn("ArgTwo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArgTwo);
                this.columnArgThree = new global::System.Data.DataColumn("ArgThree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArgThree);
                this.columnResult = new global::System.Data.DataColumn("Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnScriptName,
                            this.columnScriptSequence}, true));
                this.columnScriptName.AllowDBNull = false;
                this.columnScriptName.MaxLength = 50;
                this.columnScriptSequence.AllowDBNull = false;
                this.columnCommand.MaxLength = 50;
                this.columnArgOne.MaxLength = 2147483647;
                this.columnArgTwo.MaxLength = 2147483647;
                this.columnArgThree.MaxLength = 2147483647;
                this.columnResult.MaxLength = 255;
                this.columnComment.MaxLength = 255;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptRow NewLinkScriptRow()
            {
                return ((LinkScriptRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new LinkScriptRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(LinkScriptRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.LinkScriptRowChanged != null))
                {
                    this.LinkScriptRowChanged(this, new LinkScriptRowChangeEvent(((LinkScriptRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.LinkScriptRowChanging != null))
                {
                    this.LinkScriptRowChanging(this, new LinkScriptRowChangeEvent(((LinkScriptRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.LinkScriptRowDeleted != null))
                {
                    this.LinkScriptRowDeleted(this, new LinkScriptRowChangeEvent(((LinkScriptRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.LinkScriptRowDeleting != null))
                {
                    this.LinkScriptRowDeleting(this, new LinkScriptRowChangeEvent(((LinkScriptRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLinkScriptRow(LinkScriptRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LinkScriptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TrackingHistoryDataTable : global::System.Data.TypedTableBase<TrackingHistoryRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnTrackedTableId;

            private global::System.Data.DataColumn columnTrackedTable;

            private global::System.Data.DataColumn columnLocationsId;

            private global::System.Data.DataColumn columnEmployeesId;

            private global::System.Data.DataColumn columnBoxesId;

            private global::System.Data.DataColumn columnTransactionDateTime;

            private global::System.Data.DataColumn columnIsActualScan;

            private global::System.Data.DataColumn columnBatchId;

            private global::System.Data.DataColumn columnUserName;

            private global::System.Data.DataColumn columnTrackingAdditionalField1;

            private global::System.Data.DataColumn columnTrackingAdditionalField2;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingHistoryDataTable()
            {
                this.TableName = "TrackingHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TrackingHistoryDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TrackingHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackedTableIdColumn
            {
                get
                {
                    return this.columnTrackedTableId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackedTableColumn
            {
                get
                {
                    return this.columnTrackedTable;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationsIdColumn
            {
                get
                {
                    return this.columnLocationsId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeesIdColumn
            {
                get
                {
                    return this.columnEmployeesId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoxesIdColumn
            {
                get
                {
                    return this.columnBoxesId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionDateTimeColumn
            {
                get
                {
                    return this.columnTransactionDateTime;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActualScanColumn
            {
                get
                {
                    return this.columnIsActualScan;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BatchIdColumn
            {
                get
                {
                    return this.columnBatchId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserNameColumn
            {
                get
                {
                    return this.columnUserName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingAdditionalField1Column
            {
                get
                {
                    return this.columnTrackingAdditionalField1;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingAdditionalField2Column
            {
                get
                {
                    return this.columnTrackingAdditionalField2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingHistoryRow this[int index]
            {
                get
                {
                    return ((TrackingHistoryRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrackingHistoryRowChangeEventHandler TrackingHistoryRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrackingHistoryRowChangeEventHandler TrackingHistoryRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrackingHistoryRowChangeEventHandler TrackingHistoryRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrackingHistoryRowChangeEventHandler TrackingHistoryRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTrackingHistoryRow(TrackingHistoryRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingHistoryRow AddTrackingHistoryRow(string TrackedTableId, string TrackedTable, string LocationsId, string EmployeesId, string BoxesId, System.DateTime TransactionDateTime, bool IsActualScan, int BatchId, string UserName, string TrackingAdditionalField1, string TrackingAdditionalField2)
            {
                TrackingHistoryRow rowTrackingHistoryRow = ((TrackingHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    TrackedTableId,
                    TrackedTable,
                    LocationsId,
                    EmployeesId,
                    BoxesId,
                    TransactionDateTime,
                    IsActualScan,
                    BatchId,
                    UserName,
                    TrackingAdditionalField1,
                    TrackingAdditionalField2};
                rowTrackingHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTrackingHistoryRow);
                return rowTrackingHistoryRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingHistoryRow FindById(int Id)
            {
                return ((TrackingHistoryRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                TrackingHistoryDataTable cln = ((TrackingHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new TrackingHistoryDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnTrackedTableId = base.Columns["TrackedTableId"];
                this.columnTrackedTable = base.Columns["TrackedTable"];
                this.columnLocationsId = base.Columns["LocationsId"];
                this.columnEmployeesId = base.Columns["EmployeesId"];
                this.columnBoxesId = base.Columns["BoxesId"];
                this.columnTransactionDateTime = base.Columns["TransactionDateTime"];
                this.columnIsActualScan = base.Columns["IsActualScan"];
                this.columnBatchId = base.Columns["BatchId"];
                this.columnUserName = base.Columns["UserName"];
                this.columnTrackingAdditionalField1 = base.Columns["TrackingAdditionalField1"];
                this.columnTrackingAdditionalField2 = base.Columns["TrackingAdditionalField2"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnTrackedTableId = new global::System.Data.DataColumn("TrackedTableId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackedTableId);
                this.columnTrackedTable = new global::System.Data.DataColumn("TrackedTable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackedTable);
                this.columnLocationsId = new global::System.Data.DataColumn("LocationsId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationsId);
                this.columnEmployeesId = new global::System.Data.DataColumn("EmployeesId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeesId);
                this.columnBoxesId = new global::System.Data.DataColumn("BoxesId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoxesId);
                this.columnTransactionDateTime = new global::System.Data.DataColumn("TransactionDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionDateTime);
                this.columnIsActualScan = new global::System.Data.DataColumn("IsActualScan", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActualScan);
                this.columnBatchId = new global::System.Data.DataColumn("BatchId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchId);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnTrackingAdditionalField1 = new global::System.Data.DataColumn("TrackingAdditionalField1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingAdditionalField1);
                this.columnTrackingAdditionalField2 = new global::System.Data.DataColumn("TrackingAdditionalField2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingAdditionalField2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnTrackedTableId.MaxLength = 30;
                this.columnTrackedTable.MaxLength = 30;
                this.columnLocationsId.MaxLength = 30;
                this.columnEmployeesId.MaxLength = 30;
                this.columnBoxesId.MaxLength = 30;
                this.columnUserName.MaxLength = 50;
                this.columnTrackingAdditionalField1.MaxLength = 50;
                this.columnTrackingAdditionalField2.MaxLength = 2147483647;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingHistoryRow NewTrackingHistoryRow()
            {
                return ((TrackingHistoryRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new TrackingHistoryRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(TrackingHistoryRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.TrackingHistoryRowChanged != null))
                {
                    this.TrackingHistoryRowChanged(this, new TrackingHistoryRowChangeEvent(((TrackingHistoryRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.TrackingHistoryRowChanging != null))
                {
                    this.TrackingHistoryRowChanging(this, new TrackingHistoryRowChangeEvent(((TrackingHistoryRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.TrackingHistoryRowDeleted != null))
                {
                    this.TrackingHistoryRowDeleted(this, new TrackingHistoryRowChangeEvent(((TrackingHistoryRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.TrackingHistoryRowDeleting != null))
                {
                    this.TrackingHistoryRowDeleting(this, new TrackingHistoryRowChangeEvent(((TrackingHistoryRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTrackingHistoryRow(TrackingHistoryRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TrackingHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ViewsDataTable : global::System.Data.TypedTableBase<ViewsRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnTableName;

            private global::System.Data.DataColumn columnViewName;

            private global::System.Data.DataColumn columnSQLStatement;

            private global::System.Data.DataColumn columnTaskListDisplayString;

            private global::System.Data.DataColumn columnMaxRecsPerFetch;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsDataTable()
            {
                this.TableName = "Views";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ViewsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ViewsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TableNameColumn
            {
                get
                {
                    return this.columnTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ViewNameColumn
            {
                get
                {
                    return this.columnViewName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SQLStatementColumn
            {
                get
                {
                    return this.columnSQLStatement;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaskListDisplayStringColumn
            {
                get
                {
                    return this.columnTaskListDisplayString;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxRecsPerFetchColumn
            {
                get
                {
                    return this.columnMaxRecsPerFetch;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow this[int index]
            {
                get
                {
                    return ((ViewsRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewsRowChangeEventHandler ViewsRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewsRowChangeEventHandler ViewsRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewsRowChangeEventHandler ViewsRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewsRowChangeEventHandler ViewsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddViewsRow(ViewsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow AddViewsRow(string TableName, string ViewName, string SQLStatement, string TaskListDisplayString, int MaxRecsPerFetch)
            {
                ViewsRow rowViewsRow = ((ViewsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    TableName,
                    ViewName,
                    SQLStatement,
                    TaskListDisplayString,
                    MaxRecsPerFetch};
                rowViewsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowViewsRow);
                return rowViewsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow FindById(int Id)
            {
                return ((ViewsRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                ViewsDataTable cln = ((ViewsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new ViewsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnTableName = base.Columns["TableName"];
                this.columnViewName = base.Columns["ViewName"];
                this.columnSQLStatement = base.Columns["SQLStatement"];
                this.columnTaskListDisplayString = base.Columns["TaskListDisplayString"];
                this.columnMaxRecsPerFetch = base.Columns["MaxRecsPerFetch"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnTableName = new global::System.Data.DataColumn("TableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableName);
                this.columnViewName = new global::System.Data.DataColumn("ViewName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewName);
                this.columnSQLStatement = new global::System.Data.DataColumn("SQLStatement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQLStatement);
                this.columnTaskListDisplayString = new global::System.Data.DataColumn("TaskListDisplayString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaskListDisplayString);
                this.columnMaxRecsPerFetch = new global::System.Data.DataColumn("MaxRecsPerFetch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxRecsPerFetch);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnTableName.MaxLength = 20;
                this.columnViewName.MaxLength = 60;
                this.columnSQLStatement.MaxLength = 2147483647;
                this.columnTaskListDisplayString.MaxLength = 255;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow NewViewsRow()
            {
                return ((ViewsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new ViewsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(ViewsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.ViewsRowChanged != null))
                {
                    this.ViewsRowChanged(this, new ViewsRowChangeEvent(((ViewsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.ViewsRowChanging != null))
                {
                    this.ViewsRowChanging(this, new ViewsRowChangeEvent(((ViewsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.ViewsRowDeleted != null))
                {
                    this.ViewsRowDeleted(this, new ViewsRowChangeEvent(((ViewsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.ViewsRowDeleting != null))
                {
                    this.ViewsRowDeleting(this, new ViewsRowChangeEvent(((ViewsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveViewsRow(ViewsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ViewsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SLTextSearchItemsDataTable : global::System.Data.TypedTableBase<SLTextSearchItemsRow>
        {

            private global::System.Data.DataColumn columnIndexTableName;

            private global::System.Data.DataColumn columnIndexFieldName;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTextSearchItemsDataTable()
            {
                this.TableName = "SLTextSearchItems";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SLTextSearchItemsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SLTextSearchItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndexTableNameColumn
            {
                get
                {
                    return this.columnIndexTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndexFieldNameColumn
            {
                get
                {
                    return this.columnIndexFieldName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTextSearchItemsRow this[int index]
            {
                get
                {
                    return ((SLTextSearchItemsRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLTextSearchItemsRowChangeEventHandler SLTextSearchItemsRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLTextSearchItemsRowChangeEventHandler SLTextSearchItemsRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLTextSearchItemsRowChangeEventHandler SLTextSearchItemsRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLTextSearchItemsRowChangeEventHandler SLTextSearchItemsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSLTextSearchItemsRow(SLTextSearchItemsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTextSearchItemsRow AddSLTextSearchItemsRow(string IndexTableName, string IndexFieldName)
            {
                SLTextSearchItemsRow rowSLTextSearchItemsRow = ((SLTextSearchItemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    IndexTableName,
                    IndexFieldName};
                rowSLTextSearchItemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSLTextSearchItemsRow);
                return rowSLTextSearchItemsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                SLTextSearchItemsDataTable cln = ((SLTextSearchItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new SLTextSearchItemsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnIndexTableName = base.Columns["IndexTableName"];
                this.columnIndexFieldName = base.Columns["IndexFieldName"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnIndexTableName = new global::System.Data.DataColumn("IndexTableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexTableName);
                this.columnIndexFieldName = new global::System.Data.DataColumn("IndexFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexFieldName);
                this.columnIndexTableName.AllowDBNull = false;
                this.columnIndexTableName.MaxLength = 30;
                this.columnIndexFieldName.MaxLength = 50;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTextSearchItemsRow NewSLTextSearchItemsRow()
            {
                return ((SLTextSearchItemsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new SLTextSearchItemsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(SLTextSearchItemsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SLTextSearchItemsRowChanged != null))
                {
                    this.SLTextSearchItemsRowChanged(this, new SLTextSearchItemsRowChangeEvent(((SLTextSearchItemsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SLTextSearchItemsRowChanging != null))
                {
                    this.SLTextSearchItemsRowChanging(this, new SLTextSearchItemsRowChangeEvent(((SLTextSearchItemsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SLTextSearchItemsRowDeleted != null))
                {
                    this.SLTextSearchItemsRowDeleted(this, new SLTextSearchItemsRowChangeEvent(((SLTextSearchItemsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SLTextSearchItemsRowDeleting != null))
                {
                    this.SLTextSearchItemsRowDeleting(this, new SLTextSearchItemsRowChangeEvent(((SLTextSearchItemsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSLTextSearchItemsRow(SLTextSearchItemsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SLTextSearchItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PrimaryKeyDataTable : global::System.Data.TypedTableBase<PrimaryKeyRow>
        {

            private global::System.Data.DataColumn columnname;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrimaryKeyDataTable()
            {
                this.TableName = "PrimaryKey";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PrimaryKeyDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PrimaryKeyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn
            {
                get
                {
                    return this.columnname;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrimaryKeyRow this[int index]
            {
                get
                {
                    return ((PrimaryKeyRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PrimaryKeyRowChangeEventHandler PrimaryKeyRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PrimaryKeyRowChangeEventHandler PrimaryKeyRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PrimaryKeyRowChangeEventHandler PrimaryKeyRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PrimaryKeyRowChangeEventHandler PrimaryKeyRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPrimaryKeyRow(PrimaryKeyRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrimaryKeyRow AddPrimaryKeyRow(string name)
            {
                PrimaryKeyRow rowPrimaryKeyRow = ((PrimaryKeyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    name};
                rowPrimaryKeyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPrimaryKeyRow);
                return rowPrimaryKeyRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                PrimaryKeyDataTable cln = ((PrimaryKeyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new PrimaryKeyDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnname = base.Columns["name"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnname.MaxLength = 128;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrimaryKeyRow NewPrimaryKeyRow()
            {
                return ((PrimaryKeyRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new PrimaryKeyRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(PrimaryKeyRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.PrimaryKeyRowChanged != null))
                {
                    this.PrimaryKeyRowChanged(this, new PrimaryKeyRowChangeEvent(((PrimaryKeyRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.PrimaryKeyRowChanging != null))
                {
                    this.PrimaryKeyRowChanging(this, new PrimaryKeyRowChangeEvent(((PrimaryKeyRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.PrimaryKeyRowDeleted != null))
                {
                    this.PrimaryKeyRowDeleted(this, new PrimaryKeyRowChangeEvent(((PrimaryKeyRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.PrimaryKeyRowDeleting != null))
                {
                    this.PrimaryKeyRowDeleting(this, new PrimaryKeyRowChangeEvent(((PrimaryKeyRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePrimaryKeyRow(PrimaryKeyRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PrimaryKeyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SystemDataTable : global::System.Data.TypedTableBase<SystemRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnUserName;

            private global::System.Data.DataColumn columnHeadingHeight;

            private global::System.Data.DataColumn columnRowHeight;

            private global::System.Data.DataColumn columnGridFontName;

            private global::System.Data.DataColumn columnGridFontSize;

            private global::System.Data.DataColumn columnGridFontBold;

            private global::System.Data.DataColumn columnGridHdrAttributes;

            private global::System.Data.DataColumn columnTabFontName;

            private global::System.Data.DataColumn columnTabFontSize;

            private global::System.Data.DataColumn columnTabFontBold;

            private global::System.Data.DataColumn columnBaseFontName;

            private global::System.Data.DataColumn columnBaseFontSize;

            private global::System.Data.DataColumn columnBaseFontBold;

            private global::System.Data.DataColumn columnGridOffsetX;

            private global::System.Data.DataColumn columnGridOffsetY;

            private global::System.Data.DataColumn columnTabMaxWidth;

            private global::System.Data.DataColumn columnTabCutSize;

            private global::System.Data.DataColumn columnTabHeight;

            private global::System.Data.DataColumn columnTabRowOffset;

            private global::System.Data.DataColumn columnTabSelectType;

            private global::System.Data.DataColumn columnTabsPerRow;

            private global::System.Data.DataColumn columnFrameWidth;

            private global::System.Data.DataColumn columnRMAGgroup;

            private global::System.Data.DataColumn columnMgrGroup;

            private global::System.Data.DataColumn columnLibrarianMDIPercent;

            private global::System.Data.DataColumn columnImageBackColor1;

            private global::System.Data.DataColumn columnImageBackColor2;

            private global::System.Data.DataColumn columnImageBackColor3;

            private global::System.Data.DataColumn columnImageGridBackColor1;

            private global::System.Data.DataColumn columnImageGridBackColor2;

            private global::System.Data.DataColumn columnImageGridBackColor3;

            private global::System.Data.DataColumn columnAnnotationAdd;

            private global::System.Data.DataColumn columnAnnotationEdit;

            private global::System.Data.DataColumn columnAnnotationDelete;

            private global::System.Data.DataColumn columnAnnotationView;

            private global::System.Data.DataColumn columnNoGridURL;

            private global::System.Data.DataColumn columnADOConnectionTimeout;

            private global::System.Data.DataColumn columnDefaultOutputSettingsId;

            private global::System.Data.DataColumn columnLSAfterDestinationScanned;

            private global::System.Data.DataColumn columnLSAfterObjectScanned;

            private global::System.Data.DataColumn columnLSAfterDestinationAccepted;

            private global::System.Data.DataColumn columnLSAfterObjectAccepted;

            private global::System.Data.DataColumn columnLSAfterTrackingComplete;

            private global::System.Data.DataColumn columnUseViewDisplayMode;

            private global::System.Data.DataColumn columnFormViewMinLines;

            private global::System.Data.DataColumn columnImportRunGroup;

            private global::System.Data.DataColumn columnExpressSetupGroup;

            private global::System.Data.DataColumn columnManualTrackingGroup;

            private global::System.Data.DataColumn columnMaxHistoryDays;

            private global::System.Data.DataColumn columnMaxHistoryItems;

            private global::System.Data.DataColumn columnTrackingAdditionalField1Desc;

            private global::System.Data.DataColumn columnTrackingAdditionalField1Type;

            private global::System.Data.DataColumn columnTrackingAdditionalField2Desc;

            private global::System.Data.DataColumn columnAllowRequests;

            private global::System.Data.DataColumn columnAllowWaitList;

            private global::System.Data.DataColumn columnPopupWaitList;

            private global::System.Data.DataColumn columnRequestorOperatorGrp;

            private global::System.Data.DataColumn columnRequestorHighPGrp;

            private global::System.Data.DataColumn columnRetentionTurnOffCitations;

            private global::System.Data.DataColumn columnRetentionYearEnd;

            private global::System.Data.DataColumn columnRetentionAttachDelGroup;

            private global::System.Data.DataColumn columnRetentionOperatorGroup;

            private global::System.Data.DataColumn columnGridBackColorEven;

            private global::System.Data.DataColumn columnGridBackColorOdd;

            private global::System.Data.DataColumn columnGridForeColorEven;

            private global::System.Data.DataColumn columnGridForeColorOdd;

            private global::System.Data.DataColumn columnReportGridColor;

            private global::System.Data.DataColumn columnAlternateRowColors;

            private global::System.Data.DataColumn columnArchGroup;

            private global::System.Data.DataColumn columnCOLDGroup;

            private global::System.Data.DataColumn columnDateDueOn;

            private global::System.Data.DataColumn columnFaxmGroup;

            private global::System.Data.DataColumn columnImportGroup;

            private global::System.Data.DataColumn columnLabelGroup;

            private global::System.Data.DataColumn columnLitigationOn;

            private global::System.Data.DataColumn columnNetworkSecurityOn;

            private global::System.Data.DataColumn columnOtherGroup;

            private global::System.Data.DataColumn columnPCFilesEditGrp;

            private global::System.Data.DataColumn columnPCFilesNVerGrp;

            private global::System.Data.DataColumn columnPicture;

            private global::System.Data.DataColumn columnPrintFast;

            private global::System.Data.DataColumn columnReconciliationOn;

            private global::System.Data.DataColumn columnRedactViewGrp;

            private global::System.Data.DataColumn columnRetentionOn;

            private global::System.Data.DataColumn columnScanGroup;

            private global::System.Data.DataColumn columnSecurityGroup;

            private global::System.Data.DataColumn columnSQLGroup;

            private global::System.Data.DataColumn columnTrackingGroup;

            private global::System.Data.DataColumn columnTrackingOutOn;

            private global::System.Data.DataColumn columnReqAutoPrintMethod;

            private global::System.Data.DataColumn columnReqAutoPrintCopies;

            private global::System.Data.DataColumn columnReqAutoPrintInterval;

            private global::System.Data.DataColumn columnReqAutoPrintIDType;

            private global::System.Data.DataColumn columnBatchRequestGroup;

            private global::System.Data.DataColumn columnAuditingSecurityManagerGrp;

            private global::System.Data.DataColumn columnRequestConfirmation;

            private global::System.Data.DataColumn columnEMailDeliveryEnabled;

            private global::System.Data.DataColumn columnEMailWaitListEnabled;

            private global::System.Data.DataColumn columnEMailSendMethod;

            private global::System.Data.DataColumn columnEMailConfirmationType;

            private global::System.Data.DataColumn columnSMTPAuthentication;

            private global::System.Data.DataColumn columnSMTPPort;

            private global::System.Data.DataColumn columnSMTPServer;

            private global::System.Data.DataColumn columnSMTPUserAddress;

            private global::System.Data.DataColumn columnSMTPUserPassword;

            private global::System.Data.DataColumn columnLastPastDueEmailTime;

            private global::System.Data.DataColumn columnLastPastDueEmailUser;

            private global::System.Data.DataColumn columnEMailExceptionEnabled;

            private global::System.Data.DataColumn columnDefaultDueBackDays;

            private global::System.Data.DataColumn columnImageCaptureGroup;

            private global::System.Data.DataColumn columnExportGroup;

            private global::System.Data.DataColumn columnNotificationEnabled;

            private global::System.Data.DataColumn columnAttachmentVersionGroup;

            private global::System.Data.DataColumn columnRedactEditGrp;

            private global::System.Data.DataColumn columnUseTableIcons;

            private global::System.Data.DataColumn columnSignatureCaptureOn;

            private global::System.Data.DataColumn columnInactiveRecordGroup;

            private global::System.Data.DataColumn columnPrintImageFooter;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemDataTable()
            {
                this.TableName = "System";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SystemDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SystemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserNameColumn
            {
                get
                {
                    return this.columnUserName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeadingHeightColumn
            {
                get
                {
                    return this.columnHeadingHeight;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowHeightColumn
            {
                get
                {
                    return this.columnRowHeight;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GridFontNameColumn
            {
                get
                {
                    return this.columnGridFontName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GridFontSizeColumn
            {
                get
                {
                    return this.columnGridFontSize;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GridFontBoldColumn
            {
                get
                {
                    return this.columnGridFontBold;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GridHdrAttributesColumn
            {
                get
                {
                    return this.columnGridHdrAttributes;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabFontNameColumn
            {
                get
                {
                    return this.columnTabFontName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabFontSizeColumn
            {
                get
                {
                    return this.columnTabFontSize;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabFontBoldColumn
            {
                get
                {
                    return this.columnTabFontBold;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseFontNameColumn
            {
                get
                {
                    return this.columnBaseFontName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseFontSizeColumn
            {
                get
                {
                    return this.columnBaseFontSize;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseFontBoldColumn
            {
                get
                {
                    return this.columnBaseFontBold;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GridOffsetXColumn
            {
                get
                {
                    return this.columnGridOffsetX;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GridOffsetYColumn
            {
                get
                {
                    return this.columnGridOffsetY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabMaxWidthColumn
            {
                get
                {
                    return this.columnTabMaxWidth;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabCutSizeColumn
            {
                get
                {
                    return this.columnTabCutSize;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabHeightColumn
            {
                get
                {
                    return this.columnTabHeight;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabRowOffsetColumn
            {
                get
                {
                    return this.columnTabRowOffset;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabSelectTypeColumn
            {
                get
                {
                    return this.columnTabSelectType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabsPerRowColumn
            {
                get
                {
                    return this.columnTabsPerRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrameWidthColumn
            {
                get
                {
                    return this.columnFrameWidth;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RMAGgroupColumn
            {
                get
                {
                    return this.columnRMAGgroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MgrGroupColumn
            {
                get
                {
                    return this.columnMgrGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibrarianMDIPercentColumn
            {
                get
                {
                    return this.columnLibrarianMDIPercent;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageBackColor1Column
            {
                get
                {
                    return this.columnImageBackColor1;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageBackColor2Column
            {
                get
                {
                    return this.columnImageBackColor2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageBackColor3Column
            {
                get
                {
                    return this.columnImageBackColor3;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageGridBackColor1Column
            {
                get
                {
                    return this.columnImageGridBackColor1;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageGridBackColor2Column
            {
                get
                {
                    return this.columnImageGridBackColor2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageGridBackColor3Column
            {
                get
                {
                    return this.columnImageGridBackColor3;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnnotationAddColumn
            {
                get
                {
                    return this.columnAnnotationAdd;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnnotationEditColumn
            {
                get
                {
                    return this.columnAnnotationEdit;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnnotationDeleteColumn
            {
                get
                {
                    return this.columnAnnotationDelete;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnnotationViewColumn
            {
                get
                {
                    return this.columnAnnotationView;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoGridURLColumn
            {
                get
                {
                    return this.columnNoGridURL;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADOConnectionTimeoutColumn
            {
                get
                {
                    return this.columnADOConnectionTimeout;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultOutputSettingsIdColumn
            {
                get
                {
                    return this.columnDefaultOutputSettingsId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSAfterDestinationScannedColumn
            {
                get
                {
                    return this.columnLSAfterDestinationScanned;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSAfterObjectScannedColumn
            {
                get
                {
                    return this.columnLSAfterObjectScanned;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSAfterDestinationAcceptedColumn
            {
                get
                {
                    return this.columnLSAfterDestinationAccepted;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSAfterObjectAcceptedColumn
            {
                get
                {
                    return this.columnLSAfterObjectAccepted;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LSAfterTrackingCompleteColumn
            {
                get
                {
                    return this.columnLSAfterTrackingComplete;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseViewDisplayModeColumn
            {
                get
                {
                    return this.columnUseViewDisplayMode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormViewMinLinesColumn
            {
                get
                {
                    return this.columnFormViewMinLines;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportRunGroupColumn
            {
                get
                {
                    return this.columnImportRunGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpressSetupGroupColumn
            {
                get
                {
                    return this.columnExpressSetupGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManualTrackingGroupColumn
            {
                get
                {
                    return this.columnManualTrackingGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxHistoryDaysColumn
            {
                get
                {
                    return this.columnMaxHistoryDays;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxHistoryItemsColumn
            {
                get
                {
                    return this.columnMaxHistoryItems;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingAdditionalField1DescColumn
            {
                get
                {
                    return this.columnTrackingAdditionalField1Desc;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingAdditionalField1TypeColumn
            {
                get
                {
                    return this.columnTrackingAdditionalField1Type;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingAdditionalField2DescColumn
            {
                get
                {
                    return this.columnTrackingAdditionalField2Desc;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowRequestsColumn
            {
                get
                {
                    return this.columnAllowRequests;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowWaitListColumn
            {
                get
                {
                    return this.columnAllowWaitList;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PopupWaitListColumn
            {
                get
                {
                    return this.columnPopupWaitList;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequestorOperatorGrpColumn
            {
                get
                {
                    return this.columnRequestorOperatorGrp;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequestorHighPGrpColumn
            {
                get
                {
                    return this.columnRequestorHighPGrp;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionTurnOffCitationsColumn
            {
                get
                {
                    return this.columnRetentionTurnOffCitations;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionYearEndColumn
            {
                get
                {
                    return this.columnRetentionYearEnd;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionAttachDelGroupColumn
            {
                get
                {
                    return this.columnRetentionAttachDelGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionOperatorGroupColumn
            {
                get
                {
                    return this.columnRetentionOperatorGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GridBackColorEvenColumn
            {
                get
                {
                    return this.columnGridBackColorEven;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GridBackColorOddColumn
            {
                get
                {
                    return this.columnGridBackColorOdd;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GridForeColorEvenColumn
            {
                get
                {
                    return this.columnGridForeColorEven;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GridForeColorOddColumn
            {
                get
                {
                    return this.columnGridForeColorOdd;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReportGridColorColumn
            {
                get
                {
                    return this.columnReportGridColor;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternateRowColorsColumn
            {
                get
                {
                    return this.columnAlternateRowColors;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchGroupColumn
            {
                get
                {
                    return this.columnArchGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLDGroupColumn
            {
                get
                {
                    return this.columnCOLDGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateDueOnColumn
            {
                get
                {
                    return this.columnDateDueOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaxmGroupColumn
            {
                get
                {
                    return this.columnFaxmGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportGroupColumn
            {
                get
                {
                    return this.columnImportGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabelGroupColumn
            {
                get
                {
                    return this.columnLabelGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LitigationOnColumn
            {
                get
                {
                    return this.columnLitigationOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetworkSecurityOnColumn
            {
                get
                {
                    return this.columnNetworkSecurityOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherGroupColumn
            {
                get
                {
                    return this.columnOtherGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCFilesEditGrpColumn
            {
                get
                {
                    return this.columnPCFilesEditGrp;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCFilesNVerGrpColumn
            {
                get
                {
                    return this.columnPCFilesNVerGrp;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PictureColumn
            {
                get
                {
                    return this.columnPicture;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrintFastColumn
            {
                get
                {
                    return this.columnPrintFast;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReconciliationOnColumn
            {
                get
                {
                    return this.columnReconciliationOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RedactViewGrpColumn
            {
                get
                {
                    return this.columnRedactViewGrp;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetentionOnColumn
            {
                get
                {
                    return this.columnRetentionOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScanGroupColumn
            {
                get
                {
                    return this.columnScanGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecurityGroupColumn
            {
                get
                {
                    return this.columnSecurityGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SQLGroupColumn
            {
                get
                {
                    return this.columnSQLGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingGroupColumn
            {
                get
                {
                    return this.columnTrackingGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingOutOnColumn
            {
                get
                {
                    return this.columnTrackingOutOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqAutoPrintMethodColumn
            {
                get
                {
                    return this.columnReqAutoPrintMethod;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqAutoPrintCopiesColumn
            {
                get
                {
                    return this.columnReqAutoPrintCopies;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqAutoPrintIntervalColumn
            {
                get
                {
                    return this.columnReqAutoPrintInterval;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqAutoPrintIDTypeColumn
            {
                get
                {
                    return this.columnReqAutoPrintIDType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BatchRequestGroupColumn
            {
                get
                {
                    return this.columnBatchRequestGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AuditingSecurityManagerGrpColumn
            {
                get
                {
                    return this.columnAuditingSecurityManagerGrp;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequestConfirmationColumn
            {
                get
                {
                    return this.columnRequestConfirmation;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailDeliveryEnabledColumn
            {
                get
                {
                    return this.columnEMailDeliveryEnabled;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailWaitListEnabledColumn
            {
                get
                {
                    return this.columnEMailWaitListEnabled;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailSendMethodColumn
            {
                get
                {
                    return this.columnEMailSendMethod;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailConfirmationTypeColumn
            {
                get
                {
                    return this.columnEMailConfirmationType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SMTPAuthenticationColumn
            {
                get
                {
                    return this.columnSMTPAuthentication;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SMTPPortColumn
            {
                get
                {
                    return this.columnSMTPPort;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SMTPServerColumn
            {
                get
                {
                    return this.columnSMTPServer;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SMTPUserAddressColumn
            {
                get
                {
                    return this.columnSMTPUserAddress;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SMTPUserPasswordColumn
            {
                get
                {
                    return this.columnSMTPUserPassword;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastPastDueEmailTimeColumn
            {
                get
                {
                    return this.columnLastPastDueEmailTime;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastPastDueEmailUserColumn
            {
                get
                {
                    return this.columnLastPastDueEmailUser;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailExceptionEnabledColumn
            {
                get
                {
                    return this.columnEMailExceptionEnabled;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultDueBackDaysColumn
            {
                get
                {
                    return this.columnDefaultDueBackDays;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageCaptureGroupColumn
            {
                get
                {
                    return this.columnImageCaptureGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExportGroupColumn
            {
                get
                {
                    return this.columnExportGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotificationEnabledColumn
            {
                get
                {
                    return this.columnNotificationEnabled;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttachmentVersionGroupColumn
            {
                get
                {
                    return this.columnAttachmentVersionGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RedactEditGrpColumn
            {
                get
                {
                    return this.columnRedactEditGrp;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseTableIconsColumn
            {
                get
                {
                    return this.columnUseTableIcons;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SignatureCaptureOnColumn
            {
                get
                {
                    return this.columnSignatureCaptureOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InactiveRecordGroupColumn
            {
                get
                {
                    return this.columnInactiveRecordGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrintImageFooterColumn
            {
                get
                {
                    return this.columnPrintImageFooter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemRow this[int index]
            {
                get
                {
                    return ((SystemRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SystemRowChangeEventHandler SystemRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SystemRowChangeEventHandler SystemRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SystemRowChangeEventHandler SystemRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SystemRowChangeEventHandler SystemRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSystemRow(SystemRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemRow AddSystemRow(
                        string UserName,
                        float HeadingHeight,
                        short RowHeight,
                        string GridFontName,
                        float GridFontSize,
                        bool GridFontBold,
                        short GridHdrAttributes,
                        string TabFontName,
                        float TabFontSize,
                        bool TabFontBold,
                        string BaseFontName,
                        float BaseFontSize,
                        bool BaseFontBold,
                        short GridOffsetX,
                        short GridOffsetY,
                        short TabMaxWidth,
                        short TabCutSize,
                        short TabHeight,
                        short TabRowOffset,
                        short TabSelectType,
                        short TabsPerRow,
                        short FrameWidth,
                        int RMAGgroup,
                        int MgrGroup,
                        short LibrarianMDIPercent,
                        int ImageBackColor1,
                        int ImageBackColor2,
                        int ImageBackColor3,
                        int ImageGridBackColor1,
                        int ImageGridBackColor2,
                        int ImageGridBackColor3,
                        int AnnotationAdd,
                        int AnnotationEdit,
                        int AnnotationDelete,
                        int AnnotationView,
                        string NoGridURL,
                        int ADOConnectionTimeout,
                        string DefaultOutputSettingsId,
                        string LSAfterDestinationScanned,
                        string LSAfterObjectScanned,
                        string LSAfterDestinationAccepted,
                        string LSAfterObjectAccepted,
                        string LSAfterTrackingComplete,
                        bool UseViewDisplayMode,
                        int FormViewMinLines,
                        int ImportRunGroup,
                        int ExpressSetupGroup,
                        int ManualTrackingGroup,
                        int MaxHistoryDays,
                        int MaxHistoryItems,
                        string TrackingAdditionalField1Desc,
                        int TrackingAdditionalField1Type,
                        string TrackingAdditionalField2Desc,
                        bool AllowRequests,
                        bool AllowWaitList,
                        bool PopupWaitList,
                        int RequestorOperatorGrp,
                        int RequestorHighPGrp,
                        bool RetentionTurnOffCitations,
                        int RetentionYearEnd,
                        int RetentionAttachDelGroup,
                        int RetentionOperatorGroup,
                        int GridBackColorEven,
                        int GridBackColorOdd,
                        int GridForeColorEven,
                        int GridForeColorOdd,
                        int ReportGridColor,
                        bool AlternateRowColors,
                        int ArchGroup,
                        int COLDGroup,
                        bool DateDueOn,
                        int FaxmGroup,
                        int ImportGroup,
                        int LabelGroup,
                        bool LitigationOn,
                        bool NetworkSecurityOn,
                        int OtherGroup,
                        int PCFilesEditGrp,
                        int PCFilesNVerGrp,
                        string Picture,
                        bool PrintFast,
                        bool ReconciliationOn,
                        int RedactViewGrp,
                        bool RetentionOn,
                        int ScanGroup,
                        int SecurityGroup,
                        int SQLGroup,
                        int TrackingGroup,
                        bool TrackingOutOn,
                        int ReqAutoPrintMethod,
                        int ReqAutoPrintCopies,
                        int ReqAutoPrintInterval,
                        int ReqAutoPrintIDType,
                        int BatchRequestGroup,
                        int AuditingSecurityManagerGrp,
                        int RequestConfirmation,
                        bool EMailDeliveryEnabled,
                        bool EMailWaitListEnabled,
                        int EMailSendMethod,
                        int EMailConfirmationType,
                        bool SMTPAuthentication,
                        int SMTPPort,
                        string SMTPServer,
                        string SMTPUserAddress,
                        string SMTPUserPassword,
                        System.DateTime LastPastDueEmailTime,
                        string LastPastDueEmailUser,
                        bool EMailExceptionEnabled,
                        short DefaultDueBackDays,
                        int ImageCaptureGroup,
                        int ExportGroup,
                        int NotificationEnabled,
                        int AttachmentVersionGroup,
                        int RedactEditGrp,
                        bool UseTableIcons,
                        int SignatureCaptureOn,
                        int InactiveRecordGroup,
                        bool PrintImageFooter)
            {
                SystemRow rowSystemRow = ((SystemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    UserName,
                    HeadingHeight,
                    RowHeight,
                    GridFontName,
                    GridFontSize,
                    GridFontBold,
                    GridHdrAttributes,
                    TabFontName,
                    TabFontSize,
                    TabFontBold,
                    BaseFontName,
                    BaseFontSize,
                    BaseFontBold,
                    GridOffsetX,
                    GridOffsetY,
                    TabMaxWidth,
                    TabCutSize,
                    TabHeight,
                    TabRowOffset,
                    TabSelectType,
                    TabsPerRow,
                    FrameWidth,
                    RMAGgroup,
                    MgrGroup,
                    LibrarianMDIPercent,
                    ImageBackColor1,
                    ImageBackColor2,
                    ImageBackColor3,
                    ImageGridBackColor1,
                    ImageGridBackColor2,
                    ImageGridBackColor3,
                    AnnotationAdd,
                    AnnotationEdit,
                    AnnotationDelete,
                    AnnotationView,
                    NoGridURL,
                    ADOConnectionTimeout,
                    DefaultOutputSettingsId,
                    LSAfterDestinationScanned,
                    LSAfterObjectScanned,
                    LSAfterDestinationAccepted,
                    LSAfterObjectAccepted,
                    LSAfterTrackingComplete,
                    UseViewDisplayMode,
                    FormViewMinLines,
                    ImportRunGroup,
                    ExpressSetupGroup,
                    ManualTrackingGroup,
                    MaxHistoryDays,
                    MaxHistoryItems,
                    TrackingAdditionalField1Desc,
                    TrackingAdditionalField1Type,
                    TrackingAdditionalField2Desc,
                    AllowRequests,
                    AllowWaitList,
                    PopupWaitList,
                    RequestorOperatorGrp,
                    RequestorHighPGrp,
                    RetentionTurnOffCitations,
                    RetentionYearEnd,
                    RetentionAttachDelGroup,
                    RetentionOperatorGroup,
                    GridBackColorEven,
                    GridBackColorOdd,
                    GridForeColorEven,
                    GridForeColorOdd,
                    ReportGridColor,
                    AlternateRowColors,
                    ArchGroup,
                    COLDGroup,
                    DateDueOn,
                    FaxmGroup,
                    ImportGroup,
                    LabelGroup,
                    LitigationOn,
                    NetworkSecurityOn,
                    OtherGroup,
                    PCFilesEditGrp,
                    PCFilesNVerGrp,
                    Picture,
                    PrintFast,
                    ReconciliationOn,
                    RedactViewGrp,
                    RetentionOn,
                    ScanGroup,
                    SecurityGroup,
                    SQLGroup,
                    TrackingGroup,
                    TrackingOutOn,
                    ReqAutoPrintMethod,
                    ReqAutoPrintCopies,
                    ReqAutoPrintInterval,
                    ReqAutoPrintIDType,
                    BatchRequestGroup,
                    AuditingSecurityManagerGrp,
                    RequestConfirmation,
                    EMailDeliveryEnabled,
                    EMailWaitListEnabled,
                    EMailSendMethod,
                    EMailConfirmationType,
                    SMTPAuthentication,
                    SMTPPort,
                    SMTPServer,
                    SMTPUserAddress,
                    SMTPUserPassword,
                    LastPastDueEmailTime,
                    LastPastDueEmailUser,
                    EMailExceptionEnabled,
                    DefaultDueBackDays,
                    ImageCaptureGroup,
                    ExportGroup,
                    NotificationEnabled,
                    AttachmentVersionGroup,
                    RedactEditGrp,
                    UseTableIcons,
                    SignatureCaptureOn,
                    InactiveRecordGroup,
                    PrintImageFooter};
                rowSystemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSystemRow);
                return rowSystemRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemRow FindById(int Id)
            {
                return ((SystemRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                SystemDataTable cln = ((SystemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new SystemDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnUserName = base.Columns["UserName"];
                this.columnHeadingHeight = base.Columns["HeadingHeight"];
                this.columnRowHeight = base.Columns["RowHeight"];
                this.columnGridFontName = base.Columns["GridFontName"];
                this.columnGridFontSize = base.Columns["GridFontSize"];
                this.columnGridFontBold = base.Columns["GridFontBold"];
                this.columnGridHdrAttributes = base.Columns["GridHdrAttributes"];
                this.columnTabFontName = base.Columns["TabFontName"];
                this.columnTabFontSize = base.Columns["TabFontSize"];
                this.columnTabFontBold = base.Columns["TabFontBold"];
                this.columnBaseFontName = base.Columns["BaseFontName"];
                this.columnBaseFontSize = base.Columns["BaseFontSize"];
                this.columnBaseFontBold = base.Columns["BaseFontBold"];
                this.columnGridOffsetX = base.Columns["GridOffsetX"];
                this.columnGridOffsetY = base.Columns["GridOffsetY"];
                this.columnTabMaxWidth = base.Columns["TabMaxWidth"];
                this.columnTabCutSize = base.Columns["TabCutSize"];
                this.columnTabHeight = base.Columns["TabHeight"];
                this.columnTabRowOffset = base.Columns["TabRowOffset"];
                this.columnTabSelectType = base.Columns["TabSelectType"];
                this.columnTabsPerRow = base.Columns["TabsPerRow"];
                this.columnFrameWidth = base.Columns["FrameWidth"];
                this.columnRMAGgroup = base.Columns["RMAGgroup"];
                this.columnMgrGroup = base.Columns["MgrGroup"];
                this.columnLibrarianMDIPercent = base.Columns["LibrarianMDIPercent"];
                this.columnImageBackColor1 = base.Columns["ImageBackColor1"];
                this.columnImageBackColor2 = base.Columns["ImageBackColor2"];
                this.columnImageBackColor3 = base.Columns["ImageBackColor3"];
                this.columnImageGridBackColor1 = base.Columns["ImageGridBackColor1"];
                this.columnImageGridBackColor2 = base.Columns["ImageGridBackColor2"];
                this.columnImageGridBackColor3 = base.Columns["ImageGridBackColor3"];
                this.columnAnnotationAdd = base.Columns["AnnotationAdd"];
                this.columnAnnotationEdit = base.Columns["AnnotationEdit"];
                this.columnAnnotationDelete = base.Columns["AnnotationDelete"];
                this.columnAnnotationView = base.Columns["AnnotationView"];
                this.columnNoGridURL = base.Columns["NoGridURL"];
                this.columnADOConnectionTimeout = base.Columns["ADOConnectionTimeout"];
                this.columnDefaultOutputSettingsId = base.Columns["DefaultOutputSettingsId"];
                this.columnLSAfterDestinationScanned = base.Columns["LSAfterDestinationScanned"];
                this.columnLSAfterObjectScanned = base.Columns["LSAfterObjectScanned"];
                this.columnLSAfterDestinationAccepted = base.Columns["LSAfterDestinationAccepted"];
                this.columnLSAfterObjectAccepted = base.Columns["LSAfterObjectAccepted"];
                this.columnLSAfterTrackingComplete = base.Columns["LSAfterTrackingComplete"];
                this.columnUseViewDisplayMode = base.Columns["UseViewDisplayMode"];
                this.columnFormViewMinLines = base.Columns["FormViewMinLines"];
                this.columnImportRunGroup = base.Columns["ImportRunGroup"];
                this.columnExpressSetupGroup = base.Columns["ExpressSetupGroup"];
                this.columnManualTrackingGroup = base.Columns["ManualTrackingGroup"];
                this.columnMaxHistoryDays = base.Columns["MaxHistoryDays"];
                this.columnMaxHistoryItems = base.Columns["MaxHistoryItems"];
                this.columnTrackingAdditionalField1Desc = base.Columns["TrackingAdditionalField1Desc"];
                this.columnTrackingAdditionalField1Type = base.Columns["TrackingAdditionalField1Type"];
                this.columnTrackingAdditionalField2Desc = base.Columns["TrackingAdditionalField2Desc"];
                this.columnAllowRequests = base.Columns["AllowRequests"];
                this.columnAllowWaitList = base.Columns["AllowWaitList"];
                this.columnPopupWaitList = base.Columns["PopupWaitList"];
                this.columnRequestorOperatorGrp = base.Columns["RequestorOperatorGrp"];
                this.columnRequestorHighPGrp = base.Columns["RequestorHighPGrp"];
                this.columnRetentionTurnOffCitations = base.Columns["RetentionTurnOffCitations"];
                this.columnRetentionYearEnd = base.Columns["RetentionYearEnd"];
                this.columnRetentionAttachDelGroup = base.Columns["RetentionAttachDelGroup"];
                this.columnRetentionOperatorGroup = base.Columns["RetentionOperatorGroup"];
                this.columnGridBackColorEven = base.Columns["GridBackColorEven"];
                this.columnGridBackColorOdd = base.Columns["GridBackColorOdd"];
                this.columnGridForeColorEven = base.Columns["GridForeColorEven"];
                this.columnGridForeColorOdd = base.Columns["GridForeColorOdd"];
                this.columnReportGridColor = base.Columns["ReportGridColor"];
                this.columnAlternateRowColors = base.Columns["AlternateRowColors"];
                this.columnArchGroup = base.Columns["ArchGroup"];
                this.columnCOLDGroup = base.Columns["COLDGroup"];
                this.columnDateDueOn = base.Columns["DateDueOn"];
                this.columnFaxmGroup = base.Columns["FaxmGroup"];
                this.columnImportGroup = base.Columns["ImportGroup"];
                this.columnLabelGroup = base.Columns["LabelGroup"];
                this.columnLitigationOn = base.Columns["LitigationOn"];
                this.columnNetworkSecurityOn = base.Columns["NetworkSecurityOn"];
                this.columnOtherGroup = base.Columns["OtherGroup"];
                this.columnPCFilesEditGrp = base.Columns["PCFilesEditGrp"];
                this.columnPCFilesNVerGrp = base.Columns["PCFilesNVerGrp"];
                this.columnPicture = base.Columns["Picture"];
                this.columnPrintFast = base.Columns["PrintFast"];
                this.columnReconciliationOn = base.Columns["ReconciliationOn"];
                this.columnRedactViewGrp = base.Columns["RedactViewGrp"];
                this.columnRetentionOn = base.Columns["RetentionOn"];
                this.columnScanGroup = base.Columns["ScanGroup"];
                this.columnSecurityGroup = base.Columns["SecurityGroup"];
                this.columnSQLGroup = base.Columns["SQLGroup"];
                this.columnTrackingGroup = base.Columns["TrackingGroup"];
                this.columnTrackingOutOn = base.Columns["TrackingOutOn"];
                this.columnReqAutoPrintMethod = base.Columns["ReqAutoPrintMethod"];
                this.columnReqAutoPrintCopies = base.Columns["ReqAutoPrintCopies"];
                this.columnReqAutoPrintInterval = base.Columns["ReqAutoPrintInterval"];
                this.columnReqAutoPrintIDType = base.Columns["ReqAutoPrintIDType"];
                this.columnBatchRequestGroup = base.Columns["BatchRequestGroup"];
                this.columnAuditingSecurityManagerGrp = base.Columns["AuditingSecurityManagerGrp"];
                this.columnRequestConfirmation = base.Columns["RequestConfirmation"];
                this.columnEMailDeliveryEnabled = base.Columns["EMailDeliveryEnabled"];
                this.columnEMailWaitListEnabled = base.Columns["EMailWaitListEnabled"];
                this.columnEMailSendMethod = base.Columns["EMailSendMethod"];
                this.columnEMailConfirmationType = base.Columns["EMailConfirmationType"];
                this.columnSMTPAuthentication = base.Columns["SMTPAuthentication"];
                this.columnSMTPPort = base.Columns["SMTPPort"];
                this.columnSMTPServer = base.Columns["SMTPServer"];
                this.columnSMTPUserAddress = base.Columns["SMTPUserAddress"];
                this.columnSMTPUserPassword = base.Columns["SMTPUserPassword"];
                this.columnLastPastDueEmailTime = base.Columns["LastPastDueEmailTime"];
                this.columnLastPastDueEmailUser = base.Columns["LastPastDueEmailUser"];
                this.columnEMailExceptionEnabled = base.Columns["EMailExceptionEnabled"];
                this.columnDefaultDueBackDays = base.Columns["DefaultDueBackDays"];
                this.columnImageCaptureGroup = base.Columns["ImageCaptureGroup"];
                this.columnExportGroup = base.Columns["ExportGroup"];
                this.columnNotificationEnabled = base.Columns["NotificationEnabled"];
                this.columnAttachmentVersionGroup = base.Columns["AttachmentVersionGroup"];
                this.columnRedactEditGrp = base.Columns["RedactEditGrp"];
                this.columnUseTableIcons = base.Columns["UseTableIcons"];
                this.columnSignatureCaptureOn = base.Columns["SignatureCaptureOn"];
                this.columnInactiveRecordGroup = base.Columns["InactiveRecordGroup"];
                this.columnPrintImageFooter = base.Columns["PrintImageFooter"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnHeadingHeight = new global::System.Data.DataColumn("HeadingHeight", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadingHeight);
                this.columnRowHeight = new global::System.Data.DataColumn("RowHeight", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowHeight);
                this.columnGridFontName = new global::System.Data.DataColumn("GridFontName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridFontName);
                this.columnGridFontSize = new global::System.Data.DataColumn("GridFontSize", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridFontSize);
                this.columnGridFontBold = new global::System.Data.DataColumn("GridFontBold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridFontBold);
                this.columnGridHdrAttributes = new global::System.Data.DataColumn("GridHdrAttributes", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridHdrAttributes);
                this.columnTabFontName = new global::System.Data.DataColumn("TabFontName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabFontName);
                this.columnTabFontSize = new global::System.Data.DataColumn("TabFontSize", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabFontSize);
                this.columnTabFontBold = new global::System.Data.DataColumn("TabFontBold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabFontBold);
                this.columnBaseFontName = new global::System.Data.DataColumn("BaseFontName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseFontName);
                this.columnBaseFontSize = new global::System.Data.DataColumn("BaseFontSize", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseFontSize);
                this.columnBaseFontBold = new global::System.Data.DataColumn("BaseFontBold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseFontBold);
                this.columnGridOffsetX = new global::System.Data.DataColumn("GridOffsetX", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridOffsetX);
                this.columnGridOffsetY = new global::System.Data.DataColumn("GridOffsetY", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridOffsetY);
                this.columnTabMaxWidth = new global::System.Data.DataColumn("TabMaxWidth", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabMaxWidth);
                this.columnTabCutSize = new global::System.Data.DataColumn("TabCutSize", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabCutSize);
                this.columnTabHeight = new global::System.Data.DataColumn("TabHeight", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabHeight);
                this.columnTabRowOffset = new global::System.Data.DataColumn("TabRowOffset", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabRowOffset);
                this.columnTabSelectType = new global::System.Data.DataColumn("TabSelectType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabSelectType);
                this.columnTabsPerRow = new global::System.Data.DataColumn("TabsPerRow", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabsPerRow);
                this.columnFrameWidth = new global::System.Data.DataColumn("FrameWidth", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrameWidth);
                this.columnRMAGgroup = new global::System.Data.DataColumn("RMAGgroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMAGgroup);
                this.columnMgrGroup = new global::System.Data.DataColumn("MgrGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMgrGroup);
                this.columnLibrarianMDIPercent = new global::System.Data.DataColumn("LibrarianMDIPercent", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibrarianMDIPercent);
                this.columnImageBackColor1 = new global::System.Data.DataColumn("ImageBackColor1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageBackColor1);
                this.columnImageBackColor2 = new global::System.Data.DataColumn("ImageBackColor2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageBackColor2);
                this.columnImageBackColor3 = new global::System.Data.DataColumn("ImageBackColor3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageBackColor3);
                this.columnImageGridBackColor1 = new global::System.Data.DataColumn("ImageGridBackColor1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageGridBackColor1);
                this.columnImageGridBackColor2 = new global::System.Data.DataColumn("ImageGridBackColor2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageGridBackColor2);
                this.columnImageGridBackColor3 = new global::System.Data.DataColumn("ImageGridBackColor3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageGridBackColor3);
                this.columnAnnotationAdd = new global::System.Data.DataColumn("AnnotationAdd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnotationAdd);
                this.columnAnnotationEdit = new global::System.Data.DataColumn("AnnotationEdit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnotationEdit);
                this.columnAnnotationDelete = new global::System.Data.DataColumn("AnnotationDelete", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnotationDelete);
                this.columnAnnotationView = new global::System.Data.DataColumn("AnnotationView", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnotationView);
                this.columnNoGridURL = new global::System.Data.DataColumn("NoGridURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoGridURL);
                this.columnADOConnectionTimeout = new global::System.Data.DataColumn("ADOConnectionTimeout", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADOConnectionTimeout);
                this.columnDefaultOutputSettingsId = new global::System.Data.DataColumn("DefaultOutputSettingsId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultOutputSettingsId);
                this.columnLSAfterDestinationScanned = new global::System.Data.DataColumn("LSAfterDestinationScanned", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSAfterDestinationScanned);
                this.columnLSAfterObjectScanned = new global::System.Data.DataColumn("LSAfterObjectScanned", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSAfterObjectScanned);
                this.columnLSAfterDestinationAccepted = new global::System.Data.DataColumn("LSAfterDestinationAccepted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSAfterDestinationAccepted);
                this.columnLSAfterObjectAccepted = new global::System.Data.DataColumn("LSAfterObjectAccepted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSAfterObjectAccepted);
                this.columnLSAfterTrackingComplete = new global::System.Data.DataColumn("LSAfterTrackingComplete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSAfterTrackingComplete);
                this.columnUseViewDisplayMode = new global::System.Data.DataColumn("UseViewDisplayMode", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseViewDisplayMode);
                this.columnFormViewMinLines = new global::System.Data.DataColumn("FormViewMinLines", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormViewMinLines);
                this.columnImportRunGroup = new global::System.Data.DataColumn("ImportRunGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportRunGroup);
                this.columnExpressSetupGroup = new global::System.Data.DataColumn("ExpressSetupGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpressSetupGroup);
                this.columnManualTrackingGroup = new global::System.Data.DataColumn("ManualTrackingGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManualTrackingGroup);
                this.columnMaxHistoryDays = new global::System.Data.DataColumn("MaxHistoryDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxHistoryDays);
                this.columnMaxHistoryItems = new global::System.Data.DataColumn("MaxHistoryItems", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxHistoryItems);
                this.columnTrackingAdditionalField1Desc = new global::System.Data.DataColumn("TrackingAdditionalField1Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingAdditionalField1Desc);
                this.columnTrackingAdditionalField1Type = new global::System.Data.DataColumn("TrackingAdditionalField1Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingAdditionalField1Type);
                this.columnTrackingAdditionalField2Desc = new global::System.Data.DataColumn("TrackingAdditionalField2Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingAdditionalField2Desc);
                this.columnAllowRequests = new global::System.Data.DataColumn("AllowRequests", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowRequests);
                this.columnAllowWaitList = new global::System.Data.DataColumn("AllowWaitList", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowWaitList);
                this.columnPopupWaitList = new global::System.Data.DataColumn("PopupWaitList", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPopupWaitList);
                this.columnRequestorOperatorGrp = new global::System.Data.DataColumn("RequestorOperatorGrp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestorOperatorGrp);
                this.columnRequestorHighPGrp = new global::System.Data.DataColumn("RequestorHighPGrp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestorHighPGrp);
                this.columnRetentionTurnOffCitations = new global::System.Data.DataColumn("RetentionTurnOffCitations", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionTurnOffCitations);
                this.columnRetentionYearEnd = new global::System.Data.DataColumn("RetentionYearEnd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionYearEnd);
                this.columnRetentionAttachDelGroup = new global::System.Data.DataColumn("RetentionAttachDelGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionAttachDelGroup);
                this.columnRetentionOperatorGroup = new global::System.Data.DataColumn("RetentionOperatorGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionOperatorGroup);
                this.columnGridBackColorEven = new global::System.Data.DataColumn("GridBackColorEven", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridBackColorEven);
                this.columnGridBackColorOdd = new global::System.Data.DataColumn("GridBackColorOdd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridBackColorOdd);
                this.columnGridForeColorEven = new global::System.Data.DataColumn("GridForeColorEven", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridForeColorEven);
                this.columnGridForeColorOdd = new global::System.Data.DataColumn("GridForeColorOdd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridForeColorOdd);
                this.columnReportGridColor = new global::System.Data.DataColumn("ReportGridColor", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportGridColor);
                this.columnAlternateRowColors = new global::System.Data.DataColumn("AlternateRowColors", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternateRowColors);
                this.columnArchGroup = new global::System.Data.DataColumn("ArchGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchGroup);
                this.columnCOLDGroup = new global::System.Data.DataColumn("COLDGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLDGroup);
                this.columnDateDueOn = new global::System.Data.DataColumn("DateDueOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDueOn);
                this.columnFaxmGroup = new global::System.Data.DataColumn("FaxmGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaxmGroup);
                this.columnImportGroup = new global::System.Data.DataColumn("ImportGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportGroup);
                this.columnLabelGroup = new global::System.Data.DataColumn("LabelGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelGroup);
                this.columnLitigationOn = new global::System.Data.DataColumn("LitigationOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLitigationOn);
                this.columnNetworkSecurityOn = new global::System.Data.DataColumn("NetworkSecurityOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetworkSecurityOn);
                this.columnOtherGroup = new global::System.Data.DataColumn("OtherGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherGroup);
                this.columnPCFilesEditGrp = new global::System.Data.DataColumn("PCFilesEditGrp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCFilesEditGrp);
                this.columnPCFilesNVerGrp = new global::System.Data.DataColumn("PCFilesNVerGrp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCFilesNVerGrp);
                this.columnPicture = new global::System.Data.DataColumn("Picture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture);
                this.columnPrintFast = new global::System.Data.DataColumn("PrintFast", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintFast);
                this.columnReconciliationOn = new global::System.Data.DataColumn("ReconciliationOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReconciliationOn);
                this.columnRedactViewGrp = new global::System.Data.DataColumn("RedactViewGrp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedactViewGrp);
                this.columnRetentionOn = new global::System.Data.DataColumn("RetentionOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetentionOn);
                this.columnScanGroup = new global::System.Data.DataColumn("ScanGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanGroup);
                this.columnSecurityGroup = new global::System.Data.DataColumn("SecurityGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityGroup);
                this.columnSQLGroup = new global::System.Data.DataColumn("SQLGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQLGroup);
                this.columnTrackingGroup = new global::System.Data.DataColumn("TrackingGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingGroup);
                this.columnTrackingOutOn = new global::System.Data.DataColumn("TrackingOutOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingOutOn);
                this.columnReqAutoPrintMethod = new global::System.Data.DataColumn("ReqAutoPrintMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqAutoPrintMethod);
                this.columnReqAutoPrintCopies = new global::System.Data.DataColumn("ReqAutoPrintCopies", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqAutoPrintCopies);
                this.columnReqAutoPrintInterval = new global::System.Data.DataColumn("ReqAutoPrintInterval", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqAutoPrintInterval);
                this.columnReqAutoPrintIDType = new global::System.Data.DataColumn("ReqAutoPrintIDType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqAutoPrintIDType);
                this.columnBatchRequestGroup = new global::System.Data.DataColumn("BatchRequestGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchRequestGroup);
                this.columnAuditingSecurityManagerGrp = new global::System.Data.DataColumn("AuditingSecurityManagerGrp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuditingSecurityManagerGrp);
                this.columnRequestConfirmation = new global::System.Data.DataColumn("RequestConfirmation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestConfirmation);
                this.columnEMailDeliveryEnabled = new global::System.Data.DataColumn("EMailDeliveryEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMailDeliveryEnabled);
                this.columnEMailWaitListEnabled = new global::System.Data.DataColumn("EMailWaitListEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMailWaitListEnabled);
                this.columnEMailSendMethod = new global::System.Data.DataColumn("EMailSendMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMailSendMethod);
                this.columnEMailConfirmationType = new global::System.Data.DataColumn("EMailConfirmationType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMailConfirmationType);
                this.columnSMTPAuthentication = new global::System.Data.DataColumn("SMTPAuthentication", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTPAuthentication);
                this.columnSMTPPort = new global::System.Data.DataColumn("SMTPPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTPPort);
                this.columnSMTPServer = new global::System.Data.DataColumn("SMTPServer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTPServer);
                this.columnSMTPUserAddress = new global::System.Data.DataColumn("SMTPUserAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTPUserAddress);
                this.columnSMTPUserPassword = new global::System.Data.DataColumn("SMTPUserPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTPUserPassword);
                this.columnLastPastDueEmailTime = new global::System.Data.DataColumn("LastPastDueEmailTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPastDueEmailTime);
                this.columnLastPastDueEmailUser = new global::System.Data.DataColumn("LastPastDueEmailUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPastDueEmailUser);
                this.columnEMailExceptionEnabled = new global::System.Data.DataColumn("EMailExceptionEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMailExceptionEnabled);
                this.columnDefaultDueBackDays = new global::System.Data.DataColumn("DefaultDueBackDays", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultDueBackDays);
                this.columnImageCaptureGroup = new global::System.Data.DataColumn("ImageCaptureGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageCaptureGroup);
                this.columnExportGroup = new global::System.Data.DataColumn("ExportGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExportGroup);
                this.columnNotificationEnabled = new global::System.Data.DataColumn("NotificationEnabled", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotificationEnabled);
                this.columnAttachmentVersionGroup = new global::System.Data.DataColumn("AttachmentVersionGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachmentVersionGroup);
                this.columnRedactEditGrp = new global::System.Data.DataColumn("RedactEditGrp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedactEditGrp);
                this.columnUseTableIcons = new global::System.Data.DataColumn("UseTableIcons", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseTableIcons);
                this.columnSignatureCaptureOn = new global::System.Data.DataColumn("SignatureCaptureOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignatureCaptureOn);
                this.columnInactiveRecordGroup = new global::System.Data.DataColumn("InactiveRecordGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactiveRecordGroup);
                this.columnPrintImageFooter = new global::System.Data.DataColumn("PrintImageFooter", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintImageFooter);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnUserName.MaxLength = 50;
                this.columnGridFontName.MaxLength = 30;
                this.columnTabFontName.MaxLength = 30;
                this.columnBaseFontName.MaxLength = 30;
                this.columnNoGridURL.MaxLength = 200;
                this.columnDefaultOutputSettingsId.MaxLength = 20;
                this.columnLSAfterDestinationScanned.MaxLength = 50;
                this.columnLSAfterObjectScanned.MaxLength = 50;
                this.columnLSAfterDestinationAccepted.MaxLength = 50;
                this.columnLSAfterObjectAccepted.MaxLength = 50;
                this.columnLSAfterTrackingComplete.MaxLength = 50;
                this.columnTrackingAdditionalField1Desc.MaxLength = 50;
                this.columnTrackingAdditionalField2Desc.MaxLength = 50;
                this.columnPicture.MaxLength = 20;
                this.columnSMTPServer.MaxLength = 255;
                this.columnSMTPUserAddress.MaxLength = 255;
                this.columnSMTPUserPassword.MaxLength = 255;
                this.columnLastPastDueEmailUser.MaxLength = 50;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemRow NewSystemRow()
            {
                return ((SystemRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new SystemRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(SystemRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SystemRowChanged != null))
                {
                    this.SystemRowChanged(this, new SystemRowChangeEvent(((SystemRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SystemRowChanging != null))
                {
                    this.SystemRowChanging(this, new SystemRowChangeEvent(((SystemRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SystemRowDeleted != null))
                {
                    this.SystemRowDeleted(this, new SystemRowChangeEvent(((SystemRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SystemRowDeleting != null))
                {
                    this.SystemRowDeleting(this, new SystemRowChangeEvent(((SystemRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSystemRow(SystemRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SystemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row>
        {

            private global::System.Data.DataColumn columnParentViewID;

            private global::System.Data.DataColumn columnChildViewID;

            private global::System.Data.DataColumn columnChildViewName;

            private global::System.Data.DataColumn columnChildKeyField;

            private global::System.Data.DataColumn columnTabOrder;

            private global::System.Data.DataColumn columnChildTableName;

            private global::System.Data.DataColumn columnChildUserName;

            private global::System.Data.DataColumn columnViewOrder;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1DataTable()
            {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1DataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentViewIDColumn
            {
                get
                {
                    return this.columnParentViewID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildViewIDColumn
            {
                get
                {
                    return this.columnChildViewID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildViewNameColumn
            {
                get
                {
                    return this.columnChildViewName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildKeyFieldColumn
            {
                get
                {
                    return this.columnChildKeyField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabOrderColumn
            {
                get
                {
                    return this.columnTabOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildTableNameColumn
            {
                get
                {
                    return this.columnChildTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildUserNameColumn
            {
                get
                {
                    return this.columnChildUserName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ViewOrderColumn
            {
                get
                {
                    return this.columnViewOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row this[int index]
            {
                get
                {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable1Row(DataTable1Row row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row AddDataTable1Row(string ChildViewName, string ChildKeyField, short TabOrder, string ChildTableName, string ChildUserName, int ViewOrder)
            {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    null,
                    ChildViewName,
                    ChildKeyField,
                    TabOrder,
                    ChildTableName,
                    ChildUserName,
                    ViewOrder};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row FindByParentViewIDChildViewID(int ParentViewID, int ChildViewID)
            {
                return ((DataTable1Row)(this.Rows.Find(new object[] {
                        ParentViewID,
                        ChildViewID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new DataTable1DataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnParentViewID = base.Columns["ParentViewID"];
                this.columnChildViewID = base.Columns["ChildViewID"];
                this.columnChildViewName = base.Columns["ChildViewName"];
                this.columnChildKeyField = base.Columns["ChildKeyField"];
                this.columnTabOrder = base.Columns["TabOrder"];
                this.columnChildTableName = base.Columns["ChildTableName"];
                this.columnChildUserName = base.Columns["ChildUserName"];
                this.columnViewOrder = base.Columns["ViewOrder"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnParentViewID = new global::System.Data.DataColumn("ParentViewID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentViewID);
                this.columnChildViewID = new global::System.Data.DataColumn("ChildViewID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildViewID);
                this.columnChildViewName = new global::System.Data.DataColumn("ChildViewName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildViewName);
                this.columnChildKeyField = new global::System.Data.DataColumn("ChildKeyField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildKeyField);
                this.columnTabOrder = new global::System.Data.DataColumn("TabOrder", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabOrder);
                this.columnChildTableName = new global::System.Data.DataColumn("ChildTableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildTableName);
                this.columnChildUserName = new global::System.Data.DataColumn("ChildUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildUserName);
                this.columnViewOrder = new global::System.Data.DataColumn("ViewOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewOrder);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnParentViewID,
                            this.columnChildViewID}, true));
                this.columnParentViewID.AutoIncrement = true;
                this.columnParentViewID.AutoIncrementSeed = -1;
                this.columnParentViewID.AutoIncrementStep = -1;
                this.columnParentViewID.AllowDBNull = false;
                this.columnParentViewID.ReadOnly = true;
                this.columnChildViewID.AutoIncrement = true;
                this.columnChildViewID.AutoIncrementSeed = -1;
                this.columnChildViewID.AutoIncrementStep = -1;
                this.columnChildViewID.AllowDBNull = false;
                this.columnChildViewID.ReadOnly = true;
                this.columnChildViewName.MaxLength = 60;
                this.columnChildKeyField.MaxLength = 51;
                this.columnChildTableName.MaxLength = 20;
                this.columnChildUserName.MaxLength = 50;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row NewDataTable1Row()
            {
                return ((DataTable1Row)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new DataTable1Row(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(DataTable1Row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null))
                {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null))
                {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null))
                {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null))
                {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable1Row(DataTable1Row row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmployeesDataTable : global::System.Data.TypedTableBase<EmployeesRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnPhone;

            private global::System.Data.DataColumn columnActive;

            private global::System.Data.DataColumn columnOut;

            private global::System.Data.DataColumn columnUserName;

            private global::System.Data.DataColumn columnEmployeeEmail;

            private global::System.Data.DataColumn columnDueBackDays;

            private global::System.Data.DataColumn columnFirstName;

            private global::System.Data.DataColumn columnLastName;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeesDataTable()
            {
                this.TableName = "Employees";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmployeesDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EmployeesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneColumn
            {
                get
                {
                    return this.columnPhone;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn
            {
                get
                {
                    return this.columnActive;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutColumn
            {
                get
                {
                    return this.columnOut;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserNameColumn
            {
                get
                {
                    return this.columnUserName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeEmailColumn
            {
                get
                {
                    return this.columnEmployeeEmail;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DueBackDaysColumn
            {
                get
                {
                    return this.columnDueBackDays;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn
            {
                get
                {
                    return this.columnFirstName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn
            {
                get
                {
                    return this.columnLastName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeesRow this[int index]
            {
                get
                {
                    return ((EmployeesRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeesRowChangeEventHandler EmployeesRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeesRowChangeEventHandler EmployeesRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeesRowChangeEventHandler EmployeesRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeesRowChangeEventHandler EmployeesRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEmployeesRow(EmployeesRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeesRow AddEmployeesRow(string Phone, bool Active, bool Out, string UserName, string EmployeeEmail, int DueBackDays, string FirstName, string LastName)
            {
                EmployeesRow rowEmployeesRow = ((EmployeesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    Phone,
                    Active,
                    Out,
                    UserName,
                    EmployeeEmail,
                    DueBackDays,
                    FirstName,
                    LastName};
                rowEmployeesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmployeesRow);
                return rowEmployeesRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeesRow FindById(int Id)
            {
                return ((EmployeesRow)(this.Rows.Find(new object[] {
                        Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                EmployeesDataTable cln = ((EmployeesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new EmployeesDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnPhone = base.Columns["Phone"];
                this.columnActive = base.Columns["Active"];
                this.columnOut = base.Columns["Out"];
                this.columnUserName = base.Columns["UserName"];
                this.columnEmployeeEmail = base.Columns["EmployeeEmail"];
                this.columnDueBackDays = base.Columns["DueBackDays"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnOut = new global::System.Data.DataColumn("Out", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnEmployeeEmail = new global::System.Data.DataColumn("EmployeeEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeEmail);
                this.columnDueBackDays = new global::System.Data.DataColumn("DueBackDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueBackDays);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnPhone.MaxLength = 20;
                this.columnActive.AllowDBNull = false;
                this.columnOut.AllowDBNull = false;
                this.columnUserName.MaxLength = 30;
                this.columnEmployeeEmail.MaxLength = 50;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeesRow NewEmployeesRow()
            {
                return ((EmployeesRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new EmployeesRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(EmployeesRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.EmployeesRowChanged != null))
                {
                    this.EmployeesRowChanged(this, new EmployeesRowChangeEvent(((EmployeesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.EmployeesRowChanging != null))
                {
                    this.EmployeesRowChanging(this, new EmployeesRowChangeEvent(((EmployeesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.EmployeesRowDeleted != null))
                {
                    this.EmployeesRowDeleted(this, new EmployeesRowChangeEvent(((EmployeesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.EmployeesRowDeleting != null))
                {
                    this.EmployeesRowDeleting(this, new EmployeesRowChangeEvent(((EmployeesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEmployeesRow(EmployeesRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmployeesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ChildViewsDataTable : global::System.Data.TypedTableBase<ChildViewsRow>
        {

            private global::System.Data.DataColumn columnParentViewID;

            private global::System.Data.DataColumn columnChildViewID;

            private global::System.Data.DataColumn columnChildViewName;

            private global::System.Data.DataColumn columnChildKeyField;

            private global::System.Data.DataColumn columnTabOrder;

            private global::System.Data.DataColumn columnChildTableName;

            private global::System.Data.DataColumn columnChildUserName;

            private global::System.Data.DataColumn columnViewOrder;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChildViewsDataTable()
            {
                this.TableName = "ChildViews";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChildViewsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ChildViewsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentViewIDColumn
            {
                get
                {
                    return this.columnParentViewID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildViewIDColumn
            {
                get
                {
                    return this.columnChildViewID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildViewNameColumn
            {
                get
                {
                    return this.columnChildViewName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildKeyFieldColumn
            {
                get
                {
                    return this.columnChildKeyField;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabOrderColumn
            {
                get
                {
                    return this.columnTabOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildTableNameColumn
            {
                get
                {
                    return this.columnChildTableName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildUserNameColumn
            {
                get
                {
                    return this.columnChildUserName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ViewOrderColumn
            {
                get
                {
                    return this.columnViewOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChildViewsRow this[int index]
            {
                get
                {
                    return ((ChildViewsRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChildViewsRowChangeEventHandler ChildViewsRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChildViewsRowChangeEventHandler ChildViewsRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChildViewsRowChangeEventHandler ChildViewsRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChildViewsRowChangeEventHandler ChildViewsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddChildViewsRow(ChildViewsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChildViewsRow AddChildViewsRow(string ChildViewName, string ChildKeyField, short TabOrder, string ChildTableName, string ChildUserName, int ViewOrder)
            {
                ChildViewsRow rowChildViewsRow = ((ChildViewsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                    null,
                    null,
                    ChildViewName,
                    ChildKeyField,
                    TabOrder,
                    ChildTableName,
                    ChildUserName,
                    ViewOrder};
                rowChildViewsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowChildViewsRow);
                return rowChildViewsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChildViewsRow FindByParentViewIDChildViewID(int ParentViewID, int ChildViewID)
            {
                return ((ChildViewsRow)(this.Rows.Find(new object[] {
                        ParentViewID,
                        ChildViewID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                ChildViewsDataTable cln = ((ChildViewsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new ChildViewsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnParentViewID = base.Columns["ParentViewID"];
                this.columnChildViewID = base.Columns["ChildViewID"];
                this.columnChildViewName = base.Columns["ChildViewName"];
                this.columnChildKeyField = base.Columns["ChildKeyField"];
                this.columnTabOrder = base.Columns["TabOrder"];
                this.columnChildTableName = base.Columns["ChildTableName"];
                this.columnChildUserName = base.Columns["ChildUserName"];
                this.columnViewOrder = base.Columns["ViewOrder"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnParentViewID = new global::System.Data.DataColumn("ParentViewID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentViewID);
                this.columnChildViewID = new global::System.Data.DataColumn("ChildViewID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildViewID);
                this.columnChildViewName = new global::System.Data.DataColumn("ChildViewName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildViewName);
                this.columnChildKeyField = new global::System.Data.DataColumn("ChildKeyField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildKeyField);
                this.columnTabOrder = new global::System.Data.DataColumn("TabOrder", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabOrder);
                this.columnChildTableName = new global::System.Data.DataColumn("ChildTableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildTableName);
                this.columnChildUserName = new global::System.Data.DataColumn("ChildUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildUserName);
                this.columnViewOrder = new global::System.Data.DataColumn("ViewOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewOrder);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnParentViewID,
                            this.columnChildViewID}, true));
                this.columnParentViewID.AutoIncrement = true;
                this.columnParentViewID.AutoIncrementSeed = -1;
                this.columnParentViewID.AutoIncrementStep = -1;
                this.columnParentViewID.AllowDBNull = false;
                this.columnParentViewID.ReadOnly = true;
                this.columnChildViewID.AutoIncrement = true;
                this.columnChildViewID.AutoIncrementSeed = -1;
                this.columnChildViewID.AutoIncrementStep = -1;
                this.columnChildViewID.AllowDBNull = false;
                this.columnChildViewID.ReadOnly = true;
                this.columnChildViewName.MaxLength = 60;
                this.columnChildKeyField.MaxLength = 51;
                this.columnChildTableName.MaxLength = 20;
                this.columnChildUserName.MaxLength = 50;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChildViewsRow NewChildViewsRow()
            {
                return ((ChildViewsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new ChildViewsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(ChildViewsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.ChildViewsRowChanged != null))
                {
                    this.ChildViewsRowChanged(this, new ChildViewsRowChangeEvent(((ChildViewsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.ChildViewsRowChanging != null))
                {
                    this.ChildViewsRowChanging(this, new ChildViewsRowChangeEvent(((ChildViewsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.ChildViewsRowDeleted != null))
                {
                    this.ChildViewsRowDeleted(this, new ChildViewsRowChangeEvent(((ChildViewsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.ChildViewsRowDeleting != null))
                {
                    this.ChildViewsRowDeleting(this, new ChildViewsRowChangeEvent(((ChildViewsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveChildViewsRow(ChildViewsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordsManage ds = new RecordsManage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ChildViewsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SLTableFileRoomOrderRow : global::System.Data.DataRow
        {

            private SLTableFileRoomOrderDataTable tableSLTableFileRoomOrder;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SLTableFileRoomOrderRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableSLTableFileRoomOrder = ((SLTableFileRoomOrderDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableSLTableFileRoomOrder.IdColumn]));
                }
                set
                {
                    this[this.tableSLTableFileRoomOrder.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TableName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSLTableFileRoomOrder.TableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TableName\' in table \'SLTableFileRoomOrder\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLTableFileRoomOrder.TableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FieldName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSLTableFileRoomOrder.FieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldName\' in table \'SLTableFileRoomOrder\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLTableFileRoomOrder.FieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool StartFromFront
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSLTableFileRoomOrder.StartFromFrontColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartFromFront\' in table \'SLTableFileRoomOrder\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLTableFileRoomOrder.StartFromFrontColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StartingPosition
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSLTableFileRoomOrder.StartingPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartingPosition\' in table \'SLTableFileRoomOrder\' is DBNull" +
                                ".", e);
                    }
                }
                set
                {
                    this[this.tableSLTableFileRoomOrder.StartingPositionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberofCharacters
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSLTableFileRoomOrder.NumberofCharactersColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberofCharacters\' in table \'SLTableFileRoomOrder\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tableSLTableFileRoomOrder.NumberofCharactersColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FieldFormat
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSLTableFileRoomOrder.FieldFormatColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldFormat\' in table \'SLTableFileRoomOrder\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLTableFileRoomOrder.FieldFormatColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTableNameNull()
            {
                return this.IsNull(this.tableSLTableFileRoomOrder.TableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTableNameNull()
            {
                this[this.tableSLTableFileRoomOrder.TableNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFieldNameNull()
            {
                return this.IsNull(this.tableSLTableFileRoomOrder.FieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFieldNameNull()
            {
                this[this.tableSLTableFileRoomOrder.FieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStartFromFrontNull()
            {
                return this.IsNull(this.tableSLTableFileRoomOrder.StartFromFrontColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStartFromFrontNull()
            {
                this[this.tableSLTableFileRoomOrder.StartFromFrontColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStartingPositionNull()
            {
                return this.IsNull(this.tableSLTableFileRoomOrder.StartingPositionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStartingPositionNull()
            {
                this[this.tableSLTableFileRoomOrder.StartingPositionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberofCharactersNull()
            {
                return this.IsNull(this.tableSLTableFileRoomOrder.NumberofCharactersColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberofCharactersNull()
            {
                this[this.tableSLTableFileRoomOrder.NumberofCharactersColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFieldFormatNull()
            {
                return this.IsNull(this.tableSLTableFileRoomOrder.FieldFormatColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFieldFormatNull()
            {
                this[this.tableSLTableFileRoomOrder.FieldFormatColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.moti mashiah
        ///</summary>
        public partial class RelationShipsRow : global::System.Data.DataRow
        {

            private RelationShipsDataTable tableRelationShips;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RelationShipsRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableRelationShips = ((RelationShipsDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableRelationShips.IdColumn]));
                }
                set
                {
                    this[this.tableRelationShips.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpperTableName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableRelationShips.UpperTableNameColumn]);
                        //return ((string)(this[this.tableRelationShips.UpperTableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpperTableName\' in table \'RelationShips\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableRelationShips.UpperTableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpperTableFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableRelationShips.UpperTableFieldNameColumn]);
                        //return ((string)(this[this.tableRelationShips.UpperTableFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpperTableFieldName\' in table \'RelationShips\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableRelationShips.UpperTableFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LowerTableName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableRelationShips.LowerTableNameColumn]);
                        //return ((string)(this[this.tableRelationShips.LowerTableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LowerTableName\' in table \'RelationShips\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableRelationShips.LowerTableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LowerTableFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableRelationShips.LowerTableFieldNameColumn]);
                        //return ((string)(this[this.tableRelationShips.LowerTableFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LowerTableFieldName\' in table \'RelationShips\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableRelationShips.LowerTableFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabOrder
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableRelationShips.TabOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabOrder\' in table \'RelationShips\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableRelationShips.TabOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short IdTypes
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableRelationShips.IdTypesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdTypes\' in table \'RelationShips\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableRelationShips.IdTypesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DrillDownViewGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableRelationShips.DrillDownViewGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrillDownViewGroup\' in table \'RelationShips\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableRelationShips.DrillDownViewGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpperTableNameNull()
            {
                return this.IsNull(this.tableRelationShips.UpperTableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpperTableNameNull()
            {
                this[this.tableRelationShips.UpperTableNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpperTableFieldNameNull()
            {
                return this.IsNull(this.tableRelationShips.UpperTableFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpperTableFieldNameNull()
            {
                this[this.tableRelationShips.UpperTableFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLowerTableNameNull()
            {
                return this.IsNull(this.tableRelationShips.LowerTableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLowerTableNameNull()
            {
                this[this.tableRelationShips.LowerTableNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLowerTableFieldNameNull()
            {
                return this.IsNull(this.tableRelationShips.LowerTableFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLowerTableFieldNameNull()
            {
                this[this.tableRelationShips.LowerTableFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabOrderNull()
            {
                return this.IsNull(this.tableRelationShips.TabOrderColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabOrderNull()
            {
                this[this.tableRelationShips.TabOrderColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdTypesNull()
            {
                return this.IsNull(this.tableRelationShips.IdTypesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdTypesNull()
            {
                this[this.tableRelationShips.IdTypesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrillDownViewGroupNull()
            {
                return this.IsNull(this.tableRelationShips.DrillDownViewGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrillDownViewGroupNull()
            {
                this[this.tableRelationShips.DrillDownViewGroupColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TabsetsRow : global::System.Data.DataRow
        {

            private TabsetsDataTable tableTabsets;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TabsetsRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableTabsets = ((TabsetsDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Id
            {
                get
                {
                    return ((short)(this[this.tableTabsets.IdColumn]));
                }
                set
                {
                    this[this.tableTabsets.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTabsets.UserNameColumn]);
                        //return ((string)(this[this.tableTabsets.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.UserNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TabFontName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTabsets.TabFontNameColumn]);
                        //return ((string)(this[this.tableTabsets.TabFontNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabFontName\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.TabFontNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float TabFontSize
            {
                get
                {
                    try
                    {
                        return ((float)(this[this.tableTabsets.TabFontSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabFontSize\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.TabFontSizeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TabFontBold
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTabsets.TabFontBoldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabFontBold\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.TabFontBoldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabMaxWidth
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTabsets.TabMaxWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabMaxWidth\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.TabMaxWidthColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabCutSize
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTabsets.TabCutSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabCutSize\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.TabCutSizeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabHeight
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTabsets.TabHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabHeight\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.TabHeightColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabRowOffset
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTabsets.TabRowOffsetColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabRowOffset\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.TabRowOffsetColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabShape
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTabsets.TabShapeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabShape\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.TabShapeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ViewGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTabsets.ViewGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewGroup\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.ViewGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool StartupTabset
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTabsets.StartupTabsetColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartupTabset\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.StartupTabsetColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Picture
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTabsets.PictureColumn]);
                        //return ((string)(this[this.tableTabsets.PictureColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Picture\' in table \'Tabsets\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabsets.PictureColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserNameNull()
            {
                return this.IsNull(this.tableTabsets.UserNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserNameNull()
            {
                this[this.tableTabsets.UserNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabFontNameNull()
            {
                return this.IsNull(this.tableTabsets.TabFontNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabFontNameNull()
            {
                this[this.tableTabsets.TabFontNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabFontSizeNull()
            {
                return this.IsNull(this.tableTabsets.TabFontSizeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabFontSizeNull()
            {
                this[this.tableTabsets.TabFontSizeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabFontBoldNull()
            {
                return this.IsNull(this.tableTabsets.TabFontBoldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabFontBoldNull()
            {
                this[this.tableTabsets.TabFontBoldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabMaxWidthNull()
            {
                return this.IsNull(this.tableTabsets.TabMaxWidthColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabMaxWidthNull()
            {
                this[this.tableTabsets.TabMaxWidthColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabCutSizeNull()
            {
                return this.IsNull(this.tableTabsets.TabCutSizeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabCutSizeNull()
            {
                this[this.tableTabsets.TabCutSizeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabHeightNull()
            {
                return this.IsNull(this.tableTabsets.TabHeightColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabHeightNull()
            {
                this[this.tableTabsets.TabHeightColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabRowOffsetNull()
            {
                return this.IsNull(this.tableTabsets.TabRowOffsetColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabRowOffsetNull()
            {
                this[this.tableTabsets.TabRowOffsetColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabShapeNull()
            {
                return this.IsNull(this.tableTabsets.TabShapeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabShapeNull()
            {
                this[this.tableTabsets.TabShapeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsViewGroupNull()
            {
                return this.IsNull(this.tableTabsets.ViewGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetViewGroupNull()
            {
                this[this.tableTabsets.ViewGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStartupTabsetNull()
            {
                return this.IsNull(this.tableTabsets.StartupTabsetColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStartupTabsetNull()
            {
                this[this.tableTabsets.StartupTabsetColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPictureNull()
            {
                return this.IsNull(this.tableTabsets.PictureColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPictureNull()
            {
                this[this.tableTabsets.PictureColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ScanListRow : global::System.Data.DataRow
        {

            private ScanListDataTable tableScanList;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ScanListRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableScanList = ((ScanListDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TableName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableScanList.TableNameColumn]);
                        //return ((string)(this[this.tableScanList.TableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TableName\' in table \'ScanList\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableScanList.TableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableScanList.FieldNameColumn]);
                        //return ((string)(this[this.tableScanList.FieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldName\' in table \'ScanList\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableScanList.FieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short FieldType
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableScanList.FieldTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldType\' in table \'ScanList\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableScanList.FieldTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IdStripChars
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableScanList.IdStripCharsColumn]);
                        //return ((string)(this[this.tableScanList.IdStripCharsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdStripChars\' in table \'ScanList\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableScanList.IdStripCharsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IdMask
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableScanList.IdMaskColumn]);
                        //return ((string)(this[this.tableScanList.IdMaskColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdMask\' in table \'ScanList\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableScanList.IdMaskColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTableNameNull()
            {
                return this.IsNull(this.tableScanList.TableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTableNameNull()
            {
                this[this.tableScanList.TableNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFieldNameNull()
            {
                return this.IsNull(this.tableScanList.FieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFieldNameNull()
            {
                this[this.tableScanList.FieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFieldTypeNull()
            {
                return this.IsNull(this.tableScanList.FieldTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFieldTypeNull()
            {
                this[this.tableScanList.FieldTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdStripCharsNull()
            {
                return this.IsNull(this.tableScanList.IdStripCharsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdStripCharsNull()
            {
                this[this.tableScanList.IdStripCharsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdMaskNull()
            {
                return this.IsNull(this.tableScanList.IdMaskColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdMaskNull()
            {
                this[this.tableScanList.IdMaskColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SLRequestorRow : global::System.Data.DataRow
        {

            private SLRequestorDataTable tableSLRequestor;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SLRequestorRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableSLRequestor = ((SLRequestorDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SLPullListsId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSLRequestor.SLPullListsIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLPullListsId\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.SLPullListsIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Priority
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSLRequestor.PriorityColumn]);
                        //return ((string)(this[this.tableSLRequestor.PriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Priority\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.PriorityColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateRequested
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableSLRequestor.DateRequestedColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateRequested\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.DateRequestedColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateRecieved
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableSLRequestor.DateRecievedColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateRecieved\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.DateRecievedColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Status
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSLRequestor.StatusColumn]);
                        //return ((string)(this[this.tableSLRequestor.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.StatusColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comments
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSLRequestor.CommentsColumn]);
                        //return ((string)(this[this.tableSLRequestor.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.CommentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PriorityOrder
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSLRequestor.PriorityOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriorityOrder\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.PriorityOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TableId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSLRequestor.TableIdColumn]);
                        //return ((string)(this[this.tableSLRequestor.TableIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TableId\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.TableIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateNeeded
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableSLRequestor.DateNeededColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateNeeded\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.DateNeededColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSLRequestor.EmployeeIdColumn]);
                        //return ((string)(this[this.tableSLRequestor.EmployeeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeId\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.EmployeeIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Instructions
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSLRequestor.InstructionsColumn]);
                        //return ((string)(this[this.tableSLRequestor.InstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instructions\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.InstructionsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExceptionComments
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSLRequestor.ExceptionCommentsColumn]);
                        //return ((string)(this[this.tableSLRequestor.ExceptionCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExceptionComments\' in table \'SLRequestor\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLRequestor.ExceptionCommentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableSLRequestor.IdColumn]));
                }
                set
                {
                    this[this.tableSLRequestor.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLPullListsIdNull()
            {
                return this.IsNull(this.tableSLRequestor.SLPullListsIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLPullListsIdNull()
            {
                this[this.tableSLRequestor.SLPullListsIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriorityNull()
            {
                return this.IsNull(this.tableSLRequestor.PriorityColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriorityNull()
            {
                this[this.tableSLRequestor.PriorityColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateRequestedNull()
            {
                return this.IsNull(this.tableSLRequestor.DateRequestedColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateRequestedNull()
            {
                this[this.tableSLRequestor.DateRequestedColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateRecievedNull()
            {
                return this.IsNull(this.tableSLRequestor.DateRecievedColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateRecievedNull()
            {
                this[this.tableSLRequestor.DateRecievedColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatusNull()
            {
                return this.IsNull(this.tableSLRequestor.StatusColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusNull()
            {
                this[this.tableSLRequestor.StatusColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentsNull()
            {
                return this.IsNull(this.tableSLRequestor.CommentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentsNull()
            {
                this[this.tableSLRequestor.CommentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriorityOrderNull()
            {
                return this.IsNull(this.tableSLRequestor.PriorityOrderColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriorityOrderNull()
            {
                this[this.tableSLRequestor.PriorityOrderColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTableIdNull()
            {
                return this.IsNull(this.tableSLRequestor.TableIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTableIdNull()
            {
                this[this.tableSLRequestor.TableIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateNeededNull()
            {
                return this.IsNull(this.tableSLRequestor.DateNeededColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateNeededNull()
            {
                this[this.tableSLRequestor.DateNeededColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeIdNull()
            {
                return this.IsNull(this.tableSLRequestor.EmployeeIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeIdNull()
            {
                this[this.tableSLRequestor.EmployeeIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstructionsNull()
            {
                return this.IsNull(this.tableSLRequestor.InstructionsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstructionsNull()
            {
                this[this.tableSLRequestor.InstructionsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExceptionCommentsNull()
            {
                return this.IsNull(this.tableSLRequestor.ExceptionCommentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExceptionCommentsNull()
            {
                this[this.tableSLRequestor.ExceptionCommentsColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FolderStatusRow : global::System.Data.DataRow
        {

            private FolderStatusDataTable tableFolderStatus;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FolderStatusRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableFolderStatus = ((FolderStatusDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FolderStatusId
            {
                get
                {
                    return RecordsManage.HandleDBNull(this[this.tableFolderStatus.FolderStatusIdColumn]);
                    //return ((string)(this[this.tableFolderStatus.FolderStatusIdColumn]));
                }
                set
                {
                    this[this.tableFolderStatus.FolderStatusIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short WorkflowStep
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableFolderStatus.WorkflowStepColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkflowStep\' in table \'FolderStatus\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableFolderStatus.WorkflowStepColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkflowStepNull()
            {
                return this.IsNull(this.tableFolderStatus.WorkflowStepColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkflowStepNull()
            {
                this[this.tableFolderStatus.WorkflowStepColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TrackingRow : global::System.Data.DataRow
        {

            private TrackingDataTable tableTracking;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TrackingRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableTracking = ((TrackingDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackedTable
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTracking.TrackedTableColumn]);
                        //return ((string)(this[this.tableTracking.TrackedTableColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackedTable\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.TrackedTableColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackedTableId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTracking.TrackedTableIdColumn]);
                        //return ((string)(this[this.tableTracking.TrackedTableIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackedTableId\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.TrackedTableIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackedTableId1
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTracking.TrackedTableId1Column]);
                        //return ((string)(this[this.tableTracking.TrackedTableId1Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackedTableId1\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.TrackedTableId1Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LocationsId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTracking.LocationsIdColumn]);
                        //return ((string)(this[this.tableTracking.LocationsIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationsId\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.LocationsIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeesId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTracking.EmployeesIdColumn]);
                        //return ((string)(this[this.tableTracking.EmployeesIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeesId\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.EmployeesIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BoxesId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTracking.BoxesIdColumn]);
                        //return ((string)(this[this.tableTracking.BoxesIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoxesId\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.BoxesIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TransactionDateTime
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableTracking.TransactionDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionDateTime\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.TransactionDateTimeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ProcessedDateTime
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableTracking.ProcessedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProcessedDateTime\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.ProcessedDateTimeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Out
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTracking.OutColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Out\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.OutColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTracking.UserNameColumn]);
                        //return ((string)(this[this.tableTracking.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.UserNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateDue
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableTracking.DateDueColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateDue\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.DateDueColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingAdditionalField1
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTracking.TrackingAdditionalField1Column]);
                        //return ((string)(this[this.tableTracking.TrackingAdditionalField1Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingAdditionalField1\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.TrackingAdditionalField1Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingAdditionalField2
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTracking.TrackingAdditionalField2Column]);
                        //return ((string)(this[this.tableTracking.TrackingAdditionalField2Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingAdditionalField2\' in table \'Tracking\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTracking.TrackingAdditionalField2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackedTableNull()
            {
                return this.IsNull(this.tableTracking.TrackedTableColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackedTableNull()
            {
                this[this.tableTracking.TrackedTableColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackedTableIdNull()
            {
                return this.IsNull(this.tableTracking.TrackedTableIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackedTableIdNull()
            {
                this[this.tableTracking.TrackedTableIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackedTableId1Null()
            {
                return this.IsNull(this.tableTracking.TrackedTableId1Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackedTableId1Null()
            {
                this[this.tableTracking.TrackedTableId1Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationsIdNull()
            {
                return this.IsNull(this.tableTracking.LocationsIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocationsIdNull()
            {
                this[this.tableTracking.LocationsIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeesIdNull()
            {
                return this.IsNull(this.tableTracking.EmployeesIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeesIdNull()
            {
                this[this.tableTracking.EmployeesIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoxesIdNull()
            {
                return this.IsNull(this.tableTracking.BoxesIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoxesIdNull()
            {
                this[this.tableTracking.BoxesIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransactionDateTimeNull()
            {
                return this.IsNull(this.tableTracking.TransactionDateTimeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransactionDateTimeNull()
            {
                this[this.tableTracking.TransactionDateTimeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcessedDateTimeNull()
            {
                return this.IsNull(this.tableTracking.ProcessedDateTimeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProcessedDateTimeNull()
            {
                this[this.tableTracking.ProcessedDateTimeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutNull()
            {
                return this.IsNull(this.tableTracking.OutColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutNull()
            {
                this[this.tableTracking.OutColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserNameNull()
            {
                return this.IsNull(this.tableTracking.UserNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserNameNull()
            {
                this[this.tableTracking.UserNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateDueNull()
            {
                return this.IsNull(this.tableTracking.DateDueColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateDueNull()
            {
                this[this.tableTracking.DateDueColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingAdditionalField1Null()
            {
                return this.IsNull(this.tableTracking.TrackingAdditionalField1Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingAdditionalField1Null()
            {
                this[this.tableTracking.TrackingAdditionalField1Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingAdditionalField2Null()
            {
                return this.IsNull(this.tableTracking.TrackingAdditionalField2Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingAdditionalField2Null()
            {
                this[this.tableTracking.TrackingAdditionalField2Column] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TablesRow : global::System.Data.DataRow
        {

            private TablesDataTable tableTables;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TablesRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableTables = ((TablesDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TableName
            {
                get
                {
                    return RecordsManage.HandleDBNull(this[this.tableTables.TableNameColumn]);
                    //return ((string)(this[this.tableTables.TableNameColumn]));
                }
                set
                {
                    this[this.tableTables.TableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.UserNameColumn]);
                        //return ((string)(this[this.tableTables.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.UserNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DBName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DBNameColumn]);
                        //return ((string)(this[this.tableTables.DBNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DBName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DBNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DatabaseAccessType
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTables.DatabaseAccessTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DatabaseAccessType\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DatabaseAccessTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Attachments
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.AttachmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Attachments\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.AttachmentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AliasImagingTableName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.AliasImagingTableNameColumn]);
                        //return ((string)(this[this.tableTables.AliasImagingTableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AliasImagingTableName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.AliasImagingTableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TrackingTable
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTables.TrackingTableColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingTable\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackingTableColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Trackable
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.TrackableColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Trackable\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackableColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingStatusFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.TrackingStatusFieldNameColumn]);
                        //return ((string)(this[this.tableTables.TrackingStatusFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingStatusFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackingStatusFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CounterFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.CounterFieldNameColumn]);
                        //return ((string)(this[this.tableTables.CounterFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CounterFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.CounterFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ViewGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.ViewGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewGroup\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.ViewGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AddGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.AddGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddGroup\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.AddGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EditGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.EditGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EditGroup\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.EditGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DelGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.DelGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DelGroup\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DelGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MgrGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.MgrGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MgrGroup\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.MgrGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeleteAttachedGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.DeleteAttachedGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeleteAttachedGroup\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DeleteAttachedGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AttributesID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.AttributesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttributesID\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.AttributesIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Picture
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.PictureColumn]);
                        //return ((string)(this[this.tableTables.PictureColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Picture\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.PictureColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IdFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.IdFieldNameColumn]);
                        //return ((string)(this[this.tableTables.IdFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.IdFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IdFieldName2
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.IdFieldName2Column]);
                        //return ((string)(this[this.tableTables.IdFieldName2Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdFieldName2\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.IdFieldName2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IdStripChars
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.IdStripCharsColumn]);
                        //return ((string)(this[this.tableTables.IdStripCharsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdStripChars\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.IdStripCharsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IdMask
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.IdMaskColumn]);
                        //return ((string)(this[this.tableTables.IdMaskColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdMask\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.IdMaskColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BarCodePrefix
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.BarCodePrefixColumn]);
                        //return ((string)(this[this.tableTables.BarCodePrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarCodePrefix\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.BarCodePrefixColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescFieldPrefixOne
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DescFieldPrefixOneColumn]);
                        //return ((string)(this[this.tableTables.DescFieldPrefixOneColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescFieldPrefixOne\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescFieldPrefixOneColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescFieldNameOne
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DescFieldNameOneColumn]);
                        //return ((string)(this[this.tableTables.DescFieldNameOneColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescFieldNameOne\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescFieldNameOneColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescFieldPrefixTwo
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DescFieldPrefixTwoColumn]);
                        //return ((string)(this[this.tableTables.DescFieldPrefixTwoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescFieldPrefixTwo\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescFieldPrefixTwoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescFieldNameTwo
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DescFieldNameTwoColumn]);
                        //return ((string)(this[this.tableTables.DescFieldNameTwoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescFieldNameTwo\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescFieldNameTwoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxRecsOnDropDown
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.MaxRecsOnDropDownColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxRecsOnDropDown\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.MaxRecsOnDropDownColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ADOServerCursor
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.ADOServerCursorColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADOServerCursor\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.ADOServerCursorColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ADOQueryTimeout
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.ADOQueryTimeoutColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADOQueryTimeout\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.ADOQueryTimeoutColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ADOCacheSize
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.ADOCacheSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADOCacheSize\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.ADOCacheSizeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSBeforeAddRecord
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.LSBeforeAddRecordColumn]);
                        //return ((string)(this[this.tableTables.LSBeforeAddRecordColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSBeforeAddRecord\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.LSBeforeAddRecordColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSAfterAddRecord
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.LSAfterAddRecordColumn]);
                        //return ((string)(this[this.tableTables.LSAfterAddRecordColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSAfterAddRecord\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.LSAfterAddRecordColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSBeforeEditRecord
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.LSBeforeEditRecordColumn]);
                        //return ((string)(this[this.tableTables.LSBeforeEditRecordColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSBeforeEditRecord\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.LSBeforeEditRecordColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSAfterEditRecord
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.LSAfterEditRecordColumn]);
                        //return ((string)(this[this.tableTables.LSAfterEditRecordColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSAfterEditRecord\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.LSAfterEditRecordColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSBeforeDeleteRecord
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.LSBeforeDeleteRecordColumn]);
                        //return ((string)(this[this.tableTables.LSBeforeDeleteRecordColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSBeforeDeleteRecord\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.LSBeforeDeleteRecordColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSAfterDeleteRecord
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.LSAfterDeleteRecordColumn]);
                        //return ((string)(this[this.tableTables.LSAfterDeleteRecordColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSAfterDeleteRecord\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.LSAfterDeleteRecordColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefaultTrackingTable
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DefaultTrackingTableColumn]);
                        //return ((string)(this[this.tableTables.DefaultTrackingTableColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultTrackingTable\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DefaultTrackingTableColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefaultTrackingId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DefaultTrackingIdColumn]);
                        //return ((string)(this[this.tableTables.DefaultTrackingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultTrackingId\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DefaultTrackingIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RetentionPeriodActive
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.RetentionPeriodActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionPeriodActive\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RetentionPeriodActiveColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RetentionInactivityActive
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.RetentionInactivityActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionInactivityActive\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RetentionInactivityActiveColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RetentionDateOpenedField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.RetentionDateOpenedFieldColumn]);
                        //return ((string)(this[this.tableTables.RetentionDateOpenedFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionDateOpenedField\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RetentionDateOpenedFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RetentionDateCreateField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.RetentionDateCreateFieldColumn]);
                        //return ((string)(this[this.tableTables.RetentionDateCreateFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionDateCreateField\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RetentionDateCreateFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RetentionDateClosedField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.RetentionDateClosedFieldColumn]);
                        //return ((string)(this[this.tableTables.RetentionDateClosedFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionDateClosedField\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RetentionDateClosedFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RetentionDateOtherField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.RetentionDateOtherFieldColumn]);
                        //return ((string)(this[this.tableTables.RetentionDateOtherFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionDateOtherField\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RetentionDateOtherFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RetentionFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.RetentionFieldNameColumn]);
                        //return ((string)(this[this.tableTables.RetentionFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RetentionFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingPhoneFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.TrackingPhoneFieldNameColumn]);
                        //return ((string)(this[this.tableTables.TrackingPhoneFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingPhoneFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackingPhoneFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingMailStopFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.TrackingMailStopFieldNameColumn]);
                        //return ((string)(this[this.tableTables.TrackingMailStopFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingMailStopFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackingMailStopFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingRequestableFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.TrackingRequestableFieldNameColumn]);
                        //return ((string)(this[this.tableTables.TrackingRequestableFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingRequestableFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackingRequestableFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OperatorsIdField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.OperatorsIdFieldColumn]);
                        //return ((string)(this[this.tableTables.OperatorsIdFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OperatorsIdField\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.OperatorsIdFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InactiveLocationField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.InactiveLocationFieldColumn]);
                        //return ((string)(this[this.tableTables.InactiveLocationFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'InactiveLocationField\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.InactiveLocationFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefaultDescriptionField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DefaultDescriptionFieldColumn]);
                        //return ((string)(this[this.tableTables.DefaultDescriptionFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultDescriptionField\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DefaultDescriptionFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefaultDescriptionText
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DefaultDescriptionTextColumn]);
                        //return ((string)(this[this.tableTables.DefaultDescriptionTextColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultDescriptionText\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DefaultDescriptionTextColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefaultRetentionId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DefaultRetentionIdColumn]);
                        //return ((string)(this[this.tableTables.DefaultRetentionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultRetentionId\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DefaultRetentionIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescFieldPrefixOneTable
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DescFieldPrefixOneTableColumn]);
                        //return ((string)(this[this.tableTables.DescFieldPrefixOneTableColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescFieldPrefixOneTable\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescFieldPrefixOneTableColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DescFieldPrefixOneWidth
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTables.DescFieldPrefixOneWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescFieldPrefixOneWidth\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescFieldPrefixOneWidthColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescRelateTable1
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DescRelateTable1Column]);
                        //return ((string)(this[this.tableTables.DescRelateTable1Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescRelateTable1\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescRelateTable1Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescFieldPrefixTwoTable
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DescFieldPrefixTwoTableColumn]);
                        //return ((string)(this[this.tableTables.DescFieldPrefixTwoTableColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescFieldPrefixTwoTable\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescFieldPrefixTwoTableColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DescFieldPrefixTwoWidth
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTables.DescFieldPrefixTwoWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescFieldPrefixTwoWidth\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescFieldPrefixTwoWidthColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescRelateTable2
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DescRelateTable2Column]);
                        //return ((string)(this[this.tableTables.DescRelateTable2Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescRelateTable2\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescRelateTable2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short MaxRecordsAllowed
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTables.MaxRecordsAllowedColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxRecordsAllowed\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.MaxRecordsAllowedColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OutTable
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTables.OutTableColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutTable\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.OutTableColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PCFilesEditGrp
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.PCFilesEditGrpColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCFilesEditGrp\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.PCFilesEditGrpColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PCFilesNVerGrp
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.PCFilesNVerGrpColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCFilesNVerGrp\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.PCFilesNVerGrpColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short RestrictAddToTable
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTables.RestrictAddToTableColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestrictAddToTable\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RestrictAddToTableColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleDateField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.RuleDateFieldColumn]);
                        //return ((string)(this[this.tableTables.RuleDateFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleDateField\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RuleDateFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingACTIVEFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.TrackingACTIVEFieldNameColumn]);
                        //return ((string)(this[this.tableTables.TrackingACTIVEFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingACTIVEFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackingACTIVEFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingOUTFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.TrackingOUTFieldNameColumn]);
                        //return ((string)(this[this.tableTables.TrackingOUTFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingOUTFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackingOUTFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TrackingType
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableTables.TrackingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingType\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackingTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AuditConfidentialData
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.AuditConfidentialDataColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuditConfidentialData\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.AuditConfidentialDataColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AuditUpdate
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.AuditUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuditUpdate\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.AuditUpdateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AllowBatchRequesting
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.AllowBatchRequestingColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllowBatchRequesting\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.AllowBatchRequestingColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentFolderTableName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.ParentFolderTableNameColumn]);
                        //return ((string)(this[this.tableTables.ParentFolderTableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentFolderTableName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.ParentFolderTableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentDocTypeTableName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.ParentDocTypeTableNameColumn]);
                        //return ((string)(this[this.tableTables.ParentDocTypeTableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentDocTypeTableName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.ParentDocTypeTableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RecordManageMgmtType
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.RecordManageMgmtTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordManageMgmtType\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RecordManageMgmtTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingEmailFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.TrackingEmailFieldNameColumn]);
                        //return ((string)(this[this.tableTables.TrackingEmailFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingEmailFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackingEmailFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AutoAddNotification
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.AutoAddNotificationColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AutoAddNotification\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.AutoAddNotificationColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingDueBackDaysFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.TrackingDueBackDaysFieldNameColumn]);
                        //return ((string)(this[this.tableTables.TrackingDueBackDaysFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingDueBackDaysFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.TrackingDueBackDaysFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImageCaptureFlagFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.ImageCaptureFlagFieldNameColumn]);
                        //return ((string)(this[this.tableTables.ImageCaptureFlagFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageCaptureFlagFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.ImageCaptureFlagFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SignatureRequiredFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.SignatureRequiredFieldNameColumn]);
                        //return ((string)(this[this.tableTables.SignatureRequiredFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SignatureRequiredFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.SignatureRequiredFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AuditAttachments
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.AuditAttachmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuditAttachments\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.AuditAttachmentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RetentionFinalDisposition
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.RetentionFinalDispositionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionFinalDisposition\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RetentionFinalDispositionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RetentionAssignmentMethod
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTables.RetentionAssignmentMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionAssignmentMethod\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RetentionAssignmentMethodColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RetentionRelatedTable
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.RetentionRelatedTableColumn]);
                        //return ((string)(this[this.tableTables.RetentionRelatedTableColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionRelatedTable\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.RetentionRelatedTableColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArchiveLocationField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.ArchiveLocationFieldColumn]);
                        //return ((string)(this[this.tableTables.ArchiveLocationFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArchiveLocationField\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.ArchiveLocationFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OfficialRecordHandling
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTables.OfficialRecordHandlingColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfficialRecordHandling\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.OfficialRecordHandlingColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescriptionFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTables.DescriptionFieldNameColumn]);
                        //return ((string)(this[this.tableTables.DescriptionFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescriptionFieldName\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTables.DescriptionFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserNameNull()
            {
                return this.IsNull(this.tableTables.UserNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserNameNull()
            {
                this[this.tableTables.UserNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDBNameNull()
            {
                return this.IsNull(this.tableTables.DBNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDBNameNull()
            {
                this[this.tableTables.DBNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDatabaseAccessTypeNull()
            {
                return this.IsNull(this.tableTables.DatabaseAccessTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDatabaseAccessTypeNull()
            {
                this[this.tableTables.DatabaseAccessTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttachmentsNull()
            {
                return this.IsNull(this.tableTables.AttachmentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttachmentsNull()
            {
                this[this.tableTables.AttachmentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAliasImagingTableNameNull()
            {
                return this.IsNull(this.tableTables.AliasImagingTableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAliasImagingTableNameNull()
            {
                this[this.tableTables.AliasImagingTableNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingTableNull()
            {
                return this.IsNull(this.tableTables.TrackingTableColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingTableNull()
            {
                this[this.tableTables.TrackingTableColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackableNull()
            {
                return this.IsNull(this.tableTables.TrackableColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackableNull()
            {
                this[this.tableTables.TrackableColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingStatusFieldNameNull()
            {
                return this.IsNull(this.tableTables.TrackingStatusFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingStatusFieldNameNull()
            {
                this[this.tableTables.TrackingStatusFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCounterFieldNameNull()
            {
                return this.IsNull(this.tableTables.CounterFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCounterFieldNameNull()
            {
                this[this.tableTables.CounterFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsViewGroupNull()
            {
                return this.IsNull(this.tableTables.ViewGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetViewGroupNull()
            {
                this[this.tableTables.ViewGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddGroupNull()
            {
                return this.IsNull(this.tableTables.AddGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddGroupNull()
            {
                this[this.tableTables.AddGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEditGroupNull()
            {
                return this.IsNull(this.tableTables.EditGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEditGroupNull()
            {
                this[this.tableTables.EditGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelGroupNull()
            {
                return this.IsNull(this.tableTables.DelGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelGroupNull()
            {
                this[this.tableTables.DelGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMgrGroupNull()
            {
                return this.IsNull(this.tableTables.MgrGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMgrGroupNull()
            {
                this[this.tableTables.MgrGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeleteAttachedGroupNull()
            {
                return this.IsNull(this.tableTables.DeleteAttachedGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeleteAttachedGroupNull()
            {
                this[this.tableTables.DeleteAttachedGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttributesIDNull()
            {
                return this.IsNull(this.tableTables.AttributesIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttributesIDNull()
            {
                this[this.tableTables.AttributesIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPictureNull()
            {
                return this.IsNull(this.tableTables.PictureColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPictureNull()
            {
                this[this.tableTables.PictureColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdFieldNameNull()
            {
                return this.IsNull(this.tableTables.IdFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdFieldNameNull()
            {
                this[this.tableTables.IdFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdFieldName2Null()
            {
                return this.IsNull(this.tableTables.IdFieldName2Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdFieldName2Null()
            {
                this[this.tableTables.IdFieldName2Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdStripCharsNull()
            {
                return this.IsNull(this.tableTables.IdStripCharsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdStripCharsNull()
            {
                this[this.tableTables.IdStripCharsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdMaskNull()
            {
                return this.IsNull(this.tableTables.IdMaskColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdMaskNull()
            {
                this[this.tableTables.IdMaskColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBarCodePrefixNull()
            {
                return this.IsNull(this.tableTables.BarCodePrefixColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBarCodePrefixNull()
            {
                this[this.tableTables.BarCodePrefixColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescFieldPrefixOneNull()
            {
                return this.IsNull(this.tableTables.DescFieldPrefixOneColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescFieldPrefixOneNull()
            {
                this[this.tableTables.DescFieldPrefixOneColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescFieldNameOneNull()
            {
                return this.IsNull(this.tableTables.DescFieldNameOneColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescFieldNameOneNull()
            {
                this[this.tableTables.DescFieldNameOneColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescFieldPrefixTwoNull()
            {
                return this.IsNull(this.tableTables.DescFieldPrefixTwoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescFieldPrefixTwoNull()
            {
                this[this.tableTables.DescFieldPrefixTwoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescFieldNameTwoNull()
            {
                return this.IsNull(this.tableTables.DescFieldNameTwoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescFieldNameTwoNull()
            {
                this[this.tableTables.DescFieldNameTwoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxRecsOnDropDownNull()
            {
                return this.IsNull(this.tableTables.MaxRecsOnDropDownColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxRecsOnDropDownNull()
            {
                this[this.tableTables.MaxRecsOnDropDownColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsADOServerCursorNull()
            {
                return this.IsNull(this.tableTables.ADOServerCursorColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetADOServerCursorNull()
            {
                this[this.tableTables.ADOServerCursorColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsADOQueryTimeoutNull()
            {
                return this.IsNull(this.tableTables.ADOQueryTimeoutColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetADOQueryTimeoutNull()
            {
                this[this.tableTables.ADOQueryTimeoutColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsADOCacheSizeNull()
            {
                return this.IsNull(this.tableTables.ADOCacheSizeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetADOCacheSizeNull()
            {
                this[this.tableTables.ADOCacheSizeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSBeforeAddRecordNull()
            {
                return this.IsNull(this.tableTables.LSBeforeAddRecordColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSBeforeAddRecordNull()
            {
                this[this.tableTables.LSBeforeAddRecordColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSAfterAddRecordNull()
            {
                return this.IsNull(this.tableTables.LSAfterAddRecordColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSAfterAddRecordNull()
            {
                this[this.tableTables.LSAfterAddRecordColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSBeforeEditRecordNull()
            {
                return this.IsNull(this.tableTables.LSBeforeEditRecordColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSBeforeEditRecordNull()
            {
                this[this.tableTables.LSBeforeEditRecordColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSAfterEditRecordNull()
            {
                return this.IsNull(this.tableTables.LSAfterEditRecordColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSAfterEditRecordNull()
            {
                this[this.tableTables.LSAfterEditRecordColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSBeforeDeleteRecordNull()
            {
                return this.IsNull(this.tableTables.LSBeforeDeleteRecordColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSBeforeDeleteRecordNull()
            {
                this[this.tableTables.LSBeforeDeleteRecordColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSAfterDeleteRecordNull()
            {
                return this.IsNull(this.tableTables.LSAfterDeleteRecordColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSAfterDeleteRecordNull()
            {
                this[this.tableTables.LSAfterDeleteRecordColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultTrackingTableNull()
            {
                return this.IsNull(this.tableTables.DefaultTrackingTableColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultTrackingTableNull()
            {
                this[this.tableTables.DefaultTrackingTableColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultTrackingIdNull()
            {
                return this.IsNull(this.tableTables.DefaultTrackingIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultTrackingIdNull()
            {
                this[this.tableTables.DefaultTrackingIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionPeriodActiveNull()
            {
                return this.IsNull(this.tableTables.RetentionPeriodActiveColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionPeriodActiveNull()
            {
                this[this.tableTables.RetentionPeriodActiveColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionInactivityActiveNull()
            {
                return this.IsNull(this.tableTables.RetentionInactivityActiveColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionInactivityActiveNull()
            {
                this[this.tableTables.RetentionInactivityActiveColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionDateOpenedFieldNull()
            {
                return this.IsNull(this.tableTables.RetentionDateOpenedFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionDateOpenedFieldNull()
            {
                this[this.tableTables.RetentionDateOpenedFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionDateCreateFieldNull()
            {
                return this.IsNull(this.tableTables.RetentionDateCreateFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionDateCreateFieldNull()
            {
                this[this.tableTables.RetentionDateCreateFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionDateClosedFieldNull()
            {
                return this.IsNull(this.tableTables.RetentionDateClosedFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionDateClosedFieldNull()
            {
                this[this.tableTables.RetentionDateClosedFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionDateOtherFieldNull()
            {
                return this.IsNull(this.tableTables.RetentionDateOtherFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionDateOtherFieldNull()
            {
                this[this.tableTables.RetentionDateOtherFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionFieldNameNull()
            {
                return this.IsNull(this.tableTables.RetentionFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionFieldNameNull()
            {
                this[this.tableTables.RetentionFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingPhoneFieldNameNull()
            {
                return this.IsNull(this.tableTables.TrackingPhoneFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingPhoneFieldNameNull()
            {
                this[this.tableTables.TrackingPhoneFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingMailStopFieldNameNull()
            {
                return this.IsNull(this.tableTables.TrackingMailStopFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingMailStopFieldNameNull()
            {
                this[this.tableTables.TrackingMailStopFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingRequestableFieldNameNull()
            {
                return this.IsNull(this.tableTables.TrackingRequestableFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingRequestableFieldNameNull()
            {
                this[this.tableTables.TrackingRequestableFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOperatorsIdFieldNull()
            {
                return this.IsNull(this.tableTables.OperatorsIdFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOperatorsIdFieldNull()
            {
                this[this.tableTables.OperatorsIdFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInactiveLocationFieldNull()
            {
                return this.IsNull(this.tableTables.InactiveLocationFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInactiveLocationFieldNull()
            {
                this[this.tableTables.InactiveLocationFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultDescriptionFieldNull()
            {
                return this.IsNull(this.tableTables.DefaultDescriptionFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultDescriptionFieldNull()
            {
                this[this.tableTables.DefaultDescriptionFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultDescriptionTextNull()
            {
                return this.IsNull(this.tableTables.DefaultDescriptionTextColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultDescriptionTextNull()
            {
                this[this.tableTables.DefaultDescriptionTextColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultRetentionIdNull()
            {
                return this.IsNull(this.tableTables.DefaultRetentionIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultRetentionIdNull()
            {
                this[this.tableTables.DefaultRetentionIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescFieldPrefixOneTableNull()
            {
                return this.IsNull(this.tableTables.DescFieldPrefixOneTableColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescFieldPrefixOneTableNull()
            {
                this[this.tableTables.DescFieldPrefixOneTableColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescFieldPrefixOneWidthNull()
            {
                return this.IsNull(this.tableTables.DescFieldPrefixOneWidthColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescFieldPrefixOneWidthNull()
            {
                this[this.tableTables.DescFieldPrefixOneWidthColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescRelateTable1Null()
            {
                return this.IsNull(this.tableTables.DescRelateTable1Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescRelateTable1Null()
            {
                this[this.tableTables.DescRelateTable1Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescFieldPrefixTwoTableNull()
            {
                return this.IsNull(this.tableTables.DescFieldPrefixTwoTableColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescFieldPrefixTwoTableNull()
            {
                this[this.tableTables.DescFieldPrefixTwoTableColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescFieldPrefixTwoWidthNull()
            {
                return this.IsNull(this.tableTables.DescFieldPrefixTwoWidthColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescFieldPrefixTwoWidthNull()
            {
                this[this.tableTables.DescFieldPrefixTwoWidthColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescRelateTable2Null()
            {
                return this.IsNull(this.tableTables.DescRelateTable2Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescRelateTable2Null()
            {
                this[this.tableTables.DescRelateTable2Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxRecordsAllowedNull()
            {
                return this.IsNull(this.tableTables.MaxRecordsAllowedColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxRecordsAllowedNull()
            {
                this[this.tableTables.MaxRecordsAllowedColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutTableNull()
            {
                return this.IsNull(this.tableTables.OutTableColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutTableNull()
            {
                this[this.tableTables.OutTableColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCFilesEditGrpNull()
            {
                return this.IsNull(this.tableTables.PCFilesEditGrpColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCFilesEditGrpNull()
            {
                this[this.tableTables.PCFilesEditGrpColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCFilesNVerGrpNull()
            {
                return this.IsNull(this.tableTables.PCFilesNVerGrpColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCFilesNVerGrpNull()
            {
                this[this.tableTables.PCFilesNVerGrpColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRestrictAddToTableNull()
            {
                return this.IsNull(this.tableTables.RestrictAddToTableColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRestrictAddToTableNull()
            {
                this[this.tableTables.RestrictAddToTableColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRuleDateFieldNull()
            {
                return this.IsNull(this.tableTables.RuleDateFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRuleDateFieldNull()
            {
                this[this.tableTables.RuleDateFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingACTIVEFieldNameNull()
            {
                return this.IsNull(this.tableTables.TrackingACTIVEFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingACTIVEFieldNameNull()
            {
                this[this.tableTables.TrackingACTIVEFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingOUTFieldNameNull()
            {
                return this.IsNull(this.tableTables.TrackingOUTFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingOUTFieldNameNull()
            {
                this[this.tableTables.TrackingOUTFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingTypeNull()
            {
                return this.IsNull(this.tableTables.TrackingTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingTypeNull()
            {
                this[this.tableTables.TrackingTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAuditConfidentialDataNull()
            {
                return this.IsNull(this.tableTables.AuditConfidentialDataColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAuditConfidentialDataNull()
            {
                this[this.tableTables.AuditConfidentialDataColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAuditUpdateNull()
            {
                return this.IsNull(this.tableTables.AuditUpdateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAuditUpdateNull()
            {
                this[this.tableTables.AuditUpdateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAllowBatchRequestingNull()
            {
                return this.IsNull(this.tableTables.AllowBatchRequestingColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAllowBatchRequestingNull()
            {
                this[this.tableTables.AllowBatchRequestingColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentFolderTableNameNull()
            {
                return this.IsNull(this.tableTables.ParentFolderTableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentFolderTableNameNull()
            {
                this[this.tableTables.ParentFolderTableNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentDocTypeTableNameNull()
            {
                return this.IsNull(this.tableTables.ParentDocTypeTableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentDocTypeTableNameNull()
            {
                this[this.tableTables.ParentDocTypeTableNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecordManageMgmtTypeNull()
            {
                return this.IsNull(this.tableTables.RecordManageMgmtTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecordManageMgmtTypeNull()
            {
                this[this.tableTables.RecordManageMgmtTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingEmailFieldNameNull()
            {
                return this.IsNull(this.tableTables.TrackingEmailFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingEmailFieldNameNull()
            {
                this[this.tableTables.TrackingEmailFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAutoAddNotificationNull()
            {
                return this.IsNull(this.tableTables.AutoAddNotificationColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAutoAddNotificationNull()
            {
                this[this.tableTables.AutoAddNotificationColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingDueBackDaysFieldNameNull()
            {
                return this.IsNull(this.tableTables.TrackingDueBackDaysFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingDueBackDaysFieldNameNull()
            {
                this[this.tableTables.TrackingDueBackDaysFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageCaptureFlagFieldNameNull()
            {
                return this.IsNull(this.tableTables.ImageCaptureFlagFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageCaptureFlagFieldNameNull()
            {
                this[this.tableTables.ImageCaptureFlagFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSignatureRequiredFieldNameNull()
            {
                return this.IsNull(this.tableTables.SignatureRequiredFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSignatureRequiredFieldNameNull()
            {
                this[this.tableTables.SignatureRequiredFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAuditAttachmentsNull()
            {
                return this.IsNull(this.tableTables.AuditAttachmentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAuditAttachmentsNull()
            {
                this[this.tableTables.AuditAttachmentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionFinalDispositionNull()
            {
                return this.IsNull(this.tableTables.RetentionFinalDispositionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionFinalDispositionNull()
            {
                this[this.tableTables.RetentionFinalDispositionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionAssignmentMethodNull()
            {
                return this.IsNull(this.tableTables.RetentionAssignmentMethodColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionAssignmentMethodNull()
            {
                this[this.tableTables.RetentionAssignmentMethodColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionRelatedTableNull()
            {
                return this.IsNull(this.tableTables.RetentionRelatedTableColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionRelatedTableNull()
            {
                this[this.tableTables.RetentionRelatedTableColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchiveLocationFieldNull()
            {
                return this.IsNull(this.tableTables.ArchiveLocationFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchiveLocationFieldNull()
            {
                this[this.tableTables.ArchiveLocationFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfficialRecordHandlingNull()
            {
                return this.IsNull(this.tableTables.OfficialRecordHandlingColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfficialRecordHandlingNull()
            {
                this[this.tableTables.OfficialRecordHandlingColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionFieldNameNull()
            {
                return this.IsNull(this.tableTables.DescriptionFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionFieldNameNull()
            {
                this[this.tableTables.DescriptionFieldNameColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TabletabsRow : global::System.Data.DataRow
        {

            private TabletabsDataTable tableTabletabs;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TabletabsRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableTabletabs = ((TabletabsDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableTabletabs.IdColumn]));
                }
                set
                {
                    this[this.tableTabletabs.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TableName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableTabletabs.TableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TableName\' in table \'Tabletabs\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTabletabs.TableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTableNameNull()
            {
                return this.IsNull(this.tableTabletabs.TableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTableNameNull()
            {
                this[this.tableTabletabs.TableNameColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ViewColumnsRow : global::System.Data.DataRow
        {

            private ViewColumnsDataTable tableViewColumns;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ViewColumnsRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableViewColumns = ((ViewColumnsDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableViewColumns.IdColumn]));
                }
                set
                {
                    this[this.tableViewColumns.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ViewsId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableViewColumns.ViewsIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewsId\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.ViewsIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ColumnNum
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableViewColumns.ColumnNumColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnNum\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.ColumnNumColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.FieldNameColumn]);
                        //return ((string)(this[this.tableViewColumns.FieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldName\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.FieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Heading
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.HeadingColumn]);
                        //return ((string)(this[this.tableViewColumns.HeadingColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Heading\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.HeadingColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LookupType
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableViewColumns.LookupTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LookupType\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.LookupTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ColumnWidth
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableViewColumns.ColumnWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnWidth\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.ColumnWidthColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ColumnVisible
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.ColumnVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnVisible\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.ColumnVisibleColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ColumnOrder
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableViewColumns.ColumnOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnOrder\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.ColumnOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ColumnStyle
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableViewColumns.ColumnStyleColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnStyle\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.ColumnStyleColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EditMask
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.EditMaskColumn]);
                        //return ((string)(this[this.tableViewColumns.EditMaskColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EditMask\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.EditMaskColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Picture
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.PictureColumn]);
                        //return ((string)(this[this.tableViewColumns.PictureColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Picture\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.PictureColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LookupIdCol
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableViewColumns.LookupIdColColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LookupIdCol\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.LookupIdColColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SortField
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableViewColumns.SortFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortField\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.SortFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SortableField
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.SortableFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortableField\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.SortableFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FilterField
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.FilterFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilterField\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.FilterFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CountColumn
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.CountColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountColumn\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.CountColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SubtotalColumn
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.SubtotalColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubtotalColumn\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.SubtotalColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PrintColumnAsSubheader
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.PrintColumnAsSubheaderColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintColumnAsSubheader\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.PrintColumnAsSubheaderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RestartPageNumber
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.RestartPageNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestartPageNumber\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.RestartPageNumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseAsPrintId
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.UseAsPrintIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseAsPrintId\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.UseAsPrintIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DropDownSuggestionOnly
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.DropDownSuggestionOnlyColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropDownSuggestionOnly\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.DropDownSuggestionOnlyColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SuppressPrinting
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.SuppressPrintingColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppressPrinting\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.SuppressPrintingColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ValueCount
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.ValueCountColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCount\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.ValueCountColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternateFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.AlternateFieldNameColumn]);
                        //return ((string)(this[this.tableViewColumns.AlternateFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternateFieldName\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.AlternateFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefaultLookupValue
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.DefaultLookupValueColumn]);
                        //return ((string)(this[this.tableViewColumns.DefaultLookupValueColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultLookupValue\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.DefaultLookupValueColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DropDownFilterIdField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.DropDownFilterIdFieldColumn]);
                        //return ((string)(this[this.tableViewColumns.DropDownFilterIdFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropDownFilterIdField\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.DropDownFilterIdFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DropDownFilterMatchField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.DropDownFilterMatchFieldColumn]);
                        //return ((string)(this[this.tableViewColumns.DropDownFilterMatchFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropDownFilterMatchField\' in table \'ViewColumns\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.DropDownFilterMatchFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DropDownFlag
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableViewColumns.DropDownFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropDownFlag\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.DropDownFlagColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DropDownReferenceColNum
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableViewColumns.DropDownReferenceColNumColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropDownReferenceColNum\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.DropDownReferenceColNumColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DropDownReferenceValue
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.DropDownReferenceValueColumn]);
                        //return ((string)(this[this.tableViewColumns.DropDownReferenceValueColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropDownReferenceValue\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.DropDownReferenceValueColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DropDownTargetField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.DropDownTargetFieldColumn]);
                        //return ((string)(this[this.tableViewColumns.DropDownTargetFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropDownTargetField\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.DropDownTargetFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EditAllowed
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.EditAllowedColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EditAllowed\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.EditAllowedColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FormColWidth
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableViewColumns.FormColWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormColWidth\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.FormColWidthColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreezeOrder
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableViewColumns.FreezeOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreezeOrder\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.FreezeOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputMask
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.InputMaskColumn]);
                        //return ((string)(this[this.tableViewColumns.InputMaskColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputMask\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.InputMaskColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MaskClipMode
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.MaskClipModeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaskClipMode\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.MaskClipModeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MaskInclude
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.MaskIncludeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaskInclude\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.MaskIncludeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaskPromptChar
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViewColumns.MaskPromptCharColumn]);
                        //return ((string)(this[this.tableViewColumns.MaskPromptCharColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaskPromptChar\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.MaskPromptCharColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxPrintLines
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableViewColumns.MaxPrintLinesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxPrintLines\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.MaxPrintLinesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PageBreakField
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.PageBreakFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PageBreakField\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.PageBreakFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PrinterColWidth
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableViewColumns.PrinterColWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrinterColWidth\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.PrinterColWidthColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SortOrder
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableViewColumns.SortOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortOrder\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.SortOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SortOrderDesc
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.SortOrderDescColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortOrderDesc\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.SortOrderDescColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SuppressDuplicates
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.SuppressDuplicatesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppressDuplicates\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.SuppressDuplicatesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VisibleOnForm
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.VisibleOnFormColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisibleOnForm\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.VisibleOnFormColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VisibleOnPrint
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableViewColumns.VisibleOnPrintColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisibleOnPrint\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.VisibleOnPrintColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AlternateSortColumn
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableViewColumns.AlternateSortColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternateSortColumn\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViewColumns.AlternateSortColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsViewsIdNull()
            {
                return this.IsNull(this.tableViewColumns.ViewsIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetViewsIdNull()
            {
                this[this.tableViewColumns.ViewsIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumnNumNull()
            {
                return this.IsNull(this.tableViewColumns.ColumnNumColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumnNumNull()
            {
                this[this.tableViewColumns.ColumnNumColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFieldNameNull()
            {
                return this.IsNull(this.tableViewColumns.FieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFieldNameNull()
            {
                this[this.tableViewColumns.FieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeadingNull()
            {
                return this.IsNull(this.tableViewColumns.HeadingColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeadingNull()
            {
                this[this.tableViewColumns.HeadingColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLookupTypeNull()
            {
                return this.IsNull(this.tableViewColumns.LookupTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLookupTypeNull()
            {
                this[this.tableViewColumns.LookupTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumnWidthNull()
            {
                return this.IsNull(this.tableViewColumns.ColumnWidthColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumnWidthNull()
            {
                this[this.tableViewColumns.ColumnWidthColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumnVisibleNull()
            {
                return this.IsNull(this.tableViewColumns.ColumnVisibleColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumnVisibleNull()
            {
                this[this.tableViewColumns.ColumnVisibleColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumnOrderNull()
            {
                return this.IsNull(this.tableViewColumns.ColumnOrderColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumnOrderNull()
            {
                this[this.tableViewColumns.ColumnOrderColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumnStyleNull()
            {
                return this.IsNull(this.tableViewColumns.ColumnStyleColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumnStyleNull()
            {
                this[this.tableViewColumns.ColumnStyleColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEditMaskNull()
            {
                return this.IsNull(this.tableViewColumns.EditMaskColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEditMaskNull()
            {
                this[this.tableViewColumns.EditMaskColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPictureNull()
            {
                return this.IsNull(this.tableViewColumns.PictureColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPictureNull()
            {
                this[this.tableViewColumns.PictureColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLookupIdColNull()
            {
                return this.IsNull(this.tableViewColumns.LookupIdColColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLookupIdColNull()
            {
                this[this.tableViewColumns.LookupIdColColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSortFieldNull()
            {
                return this.IsNull(this.tableViewColumns.SortFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSortFieldNull()
            {
                this[this.tableViewColumns.SortFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSortableFieldNull()
            {
                return this.IsNull(this.tableViewColumns.SortableFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSortableFieldNull()
            {
                this[this.tableViewColumns.SortableFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFilterFieldNull()
            {
                return this.IsNull(this.tableViewColumns.FilterFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFilterFieldNull()
            {
                this[this.tableViewColumns.FilterFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountColumnNull()
            {
                return this.IsNull(this.tableViewColumns.CountColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountColumnNull()
            {
                this[this.tableViewColumns.CountColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubtotalColumnNull()
            {
                return this.IsNull(this.tableViewColumns.SubtotalColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubtotalColumnNull()
            {
                this[this.tableViewColumns.SubtotalColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrintColumnAsSubheaderNull()
            {
                return this.IsNull(this.tableViewColumns.PrintColumnAsSubheaderColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrintColumnAsSubheaderNull()
            {
                this[this.tableViewColumns.PrintColumnAsSubheaderColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRestartPageNumberNull()
            {
                return this.IsNull(this.tableViewColumns.RestartPageNumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRestartPageNumberNull()
            {
                this[this.tableViewColumns.RestartPageNumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUseAsPrintIdNull()
            {
                return this.IsNull(this.tableViewColumns.UseAsPrintIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUseAsPrintIdNull()
            {
                this[this.tableViewColumns.UseAsPrintIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDropDownSuggestionOnlyNull()
            {
                return this.IsNull(this.tableViewColumns.DropDownSuggestionOnlyColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDropDownSuggestionOnlyNull()
            {
                this[this.tableViewColumns.DropDownSuggestionOnlyColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuppressPrintingNull()
            {
                return this.IsNull(this.tableViewColumns.SuppressPrintingColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuppressPrintingNull()
            {
                this[this.tableViewColumns.SuppressPrintingColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValueCountNull()
            {
                return this.IsNull(this.tableViewColumns.ValueCountColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValueCountNull()
            {
                this[this.tableViewColumns.ValueCountColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternateFieldNameNull()
            {
                return this.IsNull(this.tableViewColumns.AlternateFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternateFieldNameNull()
            {
                this[this.tableViewColumns.AlternateFieldNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultLookupValueNull()
            {
                return this.IsNull(this.tableViewColumns.DefaultLookupValueColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultLookupValueNull()
            {
                this[this.tableViewColumns.DefaultLookupValueColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDropDownFilterIdFieldNull()
            {
                return this.IsNull(this.tableViewColumns.DropDownFilterIdFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDropDownFilterIdFieldNull()
            {
                this[this.tableViewColumns.DropDownFilterIdFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDropDownFilterMatchFieldNull()
            {
                return this.IsNull(this.tableViewColumns.DropDownFilterMatchFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDropDownFilterMatchFieldNull()
            {
                this[this.tableViewColumns.DropDownFilterMatchFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDropDownFlagNull()
            {
                return this.IsNull(this.tableViewColumns.DropDownFlagColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDropDownFlagNull()
            {
                this[this.tableViewColumns.DropDownFlagColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDropDownReferenceColNumNull()
            {
                return this.IsNull(this.tableViewColumns.DropDownReferenceColNumColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDropDownReferenceColNumNull()
            {
                this[this.tableViewColumns.DropDownReferenceColNumColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDropDownReferenceValueNull()
            {
                return this.IsNull(this.tableViewColumns.DropDownReferenceValueColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDropDownReferenceValueNull()
            {
                this[this.tableViewColumns.DropDownReferenceValueColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDropDownTargetFieldNull()
            {
                return this.IsNull(this.tableViewColumns.DropDownTargetFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDropDownTargetFieldNull()
            {
                this[this.tableViewColumns.DropDownTargetFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEditAllowedNull()
            {
                return this.IsNull(this.tableViewColumns.EditAllowedColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEditAllowedNull()
            {
                this[this.tableViewColumns.EditAllowedColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFormColWidthNull()
            {
                return this.IsNull(this.tableViewColumns.FormColWidthColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFormColWidthNull()
            {
                this[this.tableViewColumns.FormColWidthColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreezeOrderNull()
            {
                return this.IsNull(this.tableViewColumns.FreezeOrderColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreezeOrderNull()
            {
                this[this.tableViewColumns.FreezeOrderColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputMaskNull()
            {
                return this.IsNull(this.tableViewColumns.InputMaskColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputMaskNull()
            {
                this[this.tableViewColumns.InputMaskColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaskClipModeNull()
            {
                return this.IsNull(this.tableViewColumns.MaskClipModeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaskClipModeNull()
            {
                this[this.tableViewColumns.MaskClipModeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaskIncludeNull()
            {
                return this.IsNull(this.tableViewColumns.MaskIncludeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaskIncludeNull()
            {
                this[this.tableViewColumns.MaskIncludeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaskPromptCharNull()
            {
                return this.IsNull(this.tableViewColumns.MaskPromptCharColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaskPromptCharNull()
            {
                this[this.tableViewColumns.MaskPromptCharColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxPrintLinesNull()
            {
                return this.IsNull(this.tableViewColumns.MaxPrintLinesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxPrintLinesNull()
            {
                this[this.tableViewColumns.MaxPrintLinesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPageBreakFieldNull()
            {
                return this.IsNull(this.tableViewColumns.PageBreakFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPageBreakFieldNull()
            {
                this[this.tableViewColumns.PageBreakFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrinterColWidthNull()
            {
                return this.IsNull(this.tableViewColumns.PrinterColWidthColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrinterColWidthNull()
            {
                this[this.tableViewColumns.PrinterColWidthColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSortOrderNull()
            {
                return this.IsNull(this.tableViewColumns.SortOrderColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSortOrderNull()
            {
                this[this.tableViewColumns.SortOrderColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSortOrderDescNull()
            {
                return this.IsNull(this.tableViewColumns.SortOrderDescColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSortOrderDescNull()
            {
                this[this.tableViewColumns.SortOrderDescColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuppressDuplicatesNull()
            {
                return this.IsNull(this.tableViewColumns.SuppressDuplicatesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuppressDuplicatesNull()
            {
                this[this.tableViewColumns.SuppressDuplicatesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisibleOnFormNull()
            {
                return this.IsNull(this.tableViewColumns.VisibleOnFormColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisibleOnFormNull()
            {
                this[this.tableViewColumns.VisibleOnFormColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisibleOnPrintNull()
            {
                return this.IsNull(this.tableViewColumns.VisibleOnPrintColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisibleOnPrintNull()
            {
                this[this.tableViewColumns.VisibleOnPrintColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternateSortColumnNull()
            {
                return this.IsNull(this.tableViewColumns.AlternateSortColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternateSortColumnNull()
            {
                this[this.tableViewColumns.AlternateSortColumnColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StatusHistoryRow : global::System.Data.DataRow
        {

            private StatusHistoryDataTable tableStatusHistory;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StatusHistoryRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableStatusHistory = ((StatusHistoryDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableStatusHistory.IdColumn]));
                }
                set
                {
                    this[this.tableStatusHistory.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FoldersId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableStatusHistory.FoldersIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FoldersId\' in table \'StatusHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStatusHistory.FoldersIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Operator
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableStatusHistory.OperatorColumn]);
                        //return ((string)(this[this.tableStatusHistory.OperatorColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operator\' in table \'StatusHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStatusHistory.OperatorColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime StatusChangeDateTime
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableStatusHistory.StatusChangeDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusChangeDateTime\' in table \'StatusHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStatusHistory.StatusChangeDateTimeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NewStatus
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableStatusHistory.NewStatusColumn]);
                        //return ((string)(this[this.tableStatusHistory.NewStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewStatus\' in table \'StatusHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStatusHistory.NewStatusColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFoldersIdNull()
            {
                return this.IsNull(this.tableStatusHistory.FoldersIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFoldersIdNull()
            {
                this[this.tableStatusHistory.FoldersIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOperatorNull()
            {
                return this.IsNull(this.tableStatusHistory.OperatorColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOperatorNull()
            {
                this[this.tableStatusHistory.OperatorColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatusChangeDateTimeNull()
            {
                return this.IsNull(this.tableStatusHistory.StatusChangeDateTimeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusChangeDateTimeNull()
            {
                this[this.tableStatusHistory.StatusChangeDateTimeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNewStatusNull()
            {
                return this.IsNull(this.tableStatusHistory.NewStatusColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNewStatusNull()
            {
                this[this.tableStatusHistory.NewStatusColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LinkScriptHeaderRow : global::System.Data.DataRow
        {

            private LinkScriptHeaderDataTable tableLinkScriptHeader;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LinkScriptHeaderRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableLinkScriptHeader = ((LinkScriptHeaderDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Id
            {
                //moti mashiah here. 
                get
                {
                    return RecordsManage.HandleDBNull(this[this.tableLinkScriptHeader.IdColumn]);
                    //return ((string)(this[this.tableLinkScriptHeader.IdColumn]));
                }
                set
                {
                    this[this.tableLinkScriptHeader.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FormPageAction
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableLinkScriptHeader.FormPageActionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormPageAction\' in table \'LinkScriptHeader\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScriptHeader.FormPageActionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DirectoryName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableLinkScriptHeader.DirectoryNameColumn]);
                        //return ((string)(this[this.tableLinkScriptHeader.DirectoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectoryName\' in table \'LinkScriptHeader\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScriptHeader.DirectoryNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutputSettingsId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableLinkScriptHeader.OutputSettingsIdColumn]);
                        //return ((string)(this[this.tableLinkScriptHeader.OutputSettingsIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutputSettingsId\' in table \'LinkScriptHeader\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScriptHeader.OutputSettingsIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CallingType
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableLinkScriptHeader.CallingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallingType\' in table \'LinkScriptHeader\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScriptHeader.CallingTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PCFilesDeleteAfterCopy
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableLinkScriptHeader.PCFilesDeleteAfterCopyColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCFilesDeleteAfterCopy\' in table \'LinkScriptHeader\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScriptHeader.PCFilesDeleteAfterCopyColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ViewGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableLinkScriptHeader.ViewGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewGroup\' in table \'LinkScriptHeader\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScriptHeader.ViewGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UIType
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableLinkScriptHeader.UITypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UIType\' in table \'LinkScriptHeader\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScriptHeader.UITypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFormPageActionNull()
            {
                return this.IsNull(this.tableLinkScriptHeader.FormPageActionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFormPageActionNull()
            {
                this[this.tableLinkScriptHeader.FormPageActionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectoryNameNull()
            {
                return this.IsNull(this.tableLinkScriptHeader.DirectoryNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectoryNameNull()
            {
                this[this.tableLinkScriptHeader.DirectoryNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutputSettingsIdNull()
            {
                return this.IsNull(this.tableLinkScriptHeader.OutputSettingsIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutputSettingsIdNull()
            {
                this[this.tableLinkScriptHeader.OutputSettingsIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallingTypeNull()
            {
                return this.IsNull(this.tableLinkScriptHeader.CallingTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallingTypeNull()
            {
                this[this.tableLinkScriptHeader.CallingTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCFilesDeleteAfterCopyNull()
            {
                return this.IsNull(this.tableLinkScriptHeader.PCFilesDeleteAfterCopyColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCFilesDeleteAfterCopyNull()
            {
                this[this.tableLinkScriptHeader.PCFilesDeleteAfterCopyColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsViewGroupNull()
            {
                return this.IsNull(this.tableLinkScriptHeader.ViewGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetViewGroupNull()
            {
                this[this.tableLinkScriptHeader.ViewGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUITypeNull()
            {
                return this.IsNull(this.tableLinkScriptHeader.UITypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUITypeNull()
            {
                this[this.tableLinkScriptHeader.UITypeColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LinkScriptRow : global::System.Data.DataRow
        {

            private LinkScriptDataTable tableLinkScript;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LinkScriptRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableLinkScript = ((LinkScriptDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScriptName
            {
                get
                {
                    return RecordsManage.HandleDBNull(this[this.tableLinkScript.ScriptNameColumn]);
                    //return ((string)(this[this.tableLinkScript.ScriptNameColumn]));
                }
                set
                {
                    this[this.tableLinkScript.ScriptNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ScriptSequence
            {
                get
                {
                    return ((double)(this[this.tableLinkScript.ScriptSequenceColumn]));
                }
                set
                {
                    this[this.tableLinkScript.ScriptSequenceColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Command
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableLinkScript.CommandColumn]);
                        //return ((string)(this[this.tableLinkScript.CommandColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Command\' in table \'LinkScript\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScript.CommandColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArgOne
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableLinkScript.ArgOneColumn]);
                        //return ((string)(this[this.tableLinkScript.ArgOneColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArgOne\' in table \'LinkScript\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScript.ArgOneColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArgTwo
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableLinkScript.ArgTwoColumn]);
                        //return ((string)(this[this.tableLinkScript.ArgTwoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArgTwo\' in table \'LinkScript\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScript.ArgTwoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArgThree
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableLinkScript.ArgThreeColumn]);
                        //return ((string)(this[this.tableLinkScript.ArgThreeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArgThree\' in table \'LinkScript\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScript.ArgThreeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Result
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableLinkScript.ResultColumn]);
                        //return ((string)(this[this.tableLinkScript.ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Result\' in table \'LinkScript\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScript.ResultColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableLinkScript.CommentColumn]);
                        //return ((string)(this[this.tableLinkScript.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'LinkScript\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLinkScript.CommentColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommandNull()
            {
                return this.IsNull(this.tableLinkScript.CommandColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommandNull()
            {
                this[this.tableLinkScript.CommandColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArgOneNull()
            {
                return this.IsNull(this.tableLinkScript.ArgOneColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArgOneNull()
            {
                this[this.tableLinkScript.ArgOneColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArgTwoNull()
            {
                return this.IsNull(this.tableLinkScript.ArgTwoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArgTwoNull()
            {
                this[this.tableLinkScript.ArgTwoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArgThreeNull()
            {
                return this.IsNull(this.tableLinkScript.ArgThreeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArgThreeNull()
            {
                this[this.tableLinkScript.ArgThreeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultNull()
            {
                return this.IsNull(this.tableLinkScript.ResultColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultNull()
            {
                this[this.tableLinkScript.ResultColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull()
            {
                return this.IsNull(this.tableLinkScript.CommentColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentNull()
            {
                this[this.tableLinkScript.CommentColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TrackingHistoryRow : global::System.Data.DataRow
        {

            private TrackingHistoryDataTable tableTrackingHistory;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TrackingHistoryRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableTrackingHistory = ((TrackingHistoryDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableTrackingHistory.IdColumn]));
                }
                set
                {
                    this[this.tableTrackingHistory.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackedTableId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTrackingHistory.TrackedTableIdColumn]);
                        //return ((string)(this[this.tableTrackingHistory.TrackedTableIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackedTableId\' in table \'TrackingHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.TrackedTableIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackedTable
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTrackingHistory.TrackedTableColumn]);
                        //return ((string)(this[this.tableTrackingHistory.TrackedTableColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackedTable\' in table \'TrackingHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.TrackedTableColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LocationsId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTrackingHistory.LocationsIdColumn]);
                        //return ((string)(this[this.tableTrackingHistory.LocationsIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationsId\' in table \'TrackingHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.LocationsIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeesId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTrackingHistory.EmployeesIdColumn]);
                        //return ((string)(this[this.tableTrackingHistory.EmployeesIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeesId\' in table \'TrackingHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.EmployeesIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BoxesId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTrackingHistory.BoxesIdColumn]);
                        //return ((string)(this[this.tableTrackingHistory.BoxesIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoxesId\' in table \'TrackingHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.BoxesIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TransactionDateTime
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableTrackingHistory.TransactionDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionDateTime\' in table \'TrackingHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.TransactionDateTimeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualScan
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTrackingHistory.IsActualScanColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActualScan\' in table \'TrackingHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.IsActualScanColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BatchId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTrackingHistory.BatchIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchId\' in table \'TrackingHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.BatchIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTrackingHistory.UserNameColumn]);
                        //return ((string)(this[this.tableTrackingHistory.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'TrackingHistory\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.UserNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingAdditionalField1
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTrackingHistory.TrackingAdditionalField1Column]);
                        //return ((string)(this[this.tableTrackingHistory.TrackingAdditionalField1Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingAdditionalField1\' in table \'TrackingHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.TrackingAdditionalField1Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingAdditionalField2
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableTrackingHistory.TrackingAdditionalField2Column]);
                        //return ((string)(this[this.tableTrackingHistory.TrackingAdditionalField2Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingAdditionalField2\' in table \'TrackingHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tableTrackingHistory.TrackingAdditionalField2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackedTableIdNull()
            {
                return this.IsNull(this.tableTrackingHistory.TrackedTableIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackedTableIdNull()
            {
                this[this.tableTrackingHistory.TrackedTableIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackedTableNull()
            {
                return this.IsNull(this.tableTrackingHistory.TrackedTableColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackedTableNull()
            {
                this[this.tableTrackingHistory.TrackedTableColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationsIdNull()
            {
                return this.IsNull(this.tableTrackingHistory.LocationsIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocationsIdNull()
            {
                this[this.tableTrackingHistory.LocationsIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeesIdNull()
            {
                return this.IsNull(this.tableTrackingHistory.EmployeesIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeesIdNull()
            {
                this[this.tableTrackingHistory.EmployeesIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoxesIdNull()
            {
                return this.IsNull(this.tableTrackingHistory.BoxesIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoxesIdNull()
            {
                this[this.tableTrackingHistory.BoxesIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransactionDateTimeNull()
            {
                return this.IsNull(this.tableTrackingHistory.TransactionDateTimeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransactionDateTimeNull()
            {
                this[this.tableTrackingHistory.TransactionDateTimeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsActualScanNull()
            {
                return this.IsNull(this.tableTrackingHistory.IsActualScanColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsActualScanNull()
            {
                this[this.tableTrackingHistory.IsActualScanColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBatchIdNull()
            {
                return this.IsNull(this.tableTrackingHistory.BatchIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBatchIdNull()
            {
                this[this.tableTrackingHistory.BatchIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserNameNull()
            {
                return this.IsNull(this.tableTrackingHistory.UserNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserNameNull()
            {
                this[this.tableTrackingHistory.UserNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingAdditionalField1Null()
            {
                return this.IsNull(this.tableTrackingHistory.TrackingAdditionalField1Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingAdditionalField1Null()
            {
                this[this.tableTrackingHistory.TrackingAdditionalField1Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingAdditionalField2Null()
            {
                return this.IsNull(this.tableTrackingHistory.TrackingAdditionalField2Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingAdditionalField2Null()
            {
                this[this.tableTrackingHistory.TrackingAdditionalField2Column] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ViewsRow : global::System.Data.DataRow
        {

            private ViewsDataTable tableViews;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ViewsRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableViews = ((ViewsDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableViews.IdColumn]));
                }
                set
                {
                    this[this.tableViews.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TableName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViews.TableNameColumn]);
                        //return ((string)(this[this.tableViews.TableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TableName\' in table \'Views\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViews.TableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ViewName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViews.ViewNameColumn]);
                        //return ((string)(this[this.tableViews.ViewNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewName\' in table \'Views\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViews.ViewNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SQLStatement
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViews.SQLStatementColumn]);
                        //return ((string)(this[this.tableViews.SQLStatementColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SQLStatement\' in table \'Views\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViews.SQLStatementColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaskListDisplayString
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableViews.TaskListDisplayStringColumn]);
                        //return ((string)(this[this.tableViews.TaskListDisplayStringColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaskListDisplayString\' in table \'Views\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViews.TaskListDisplayStringColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxRecsPerFetch
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableViews.MaxRecsPerFetchColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxRecsPerFetch\' in table \'Views\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableViews.MaxRecsPerFetchColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTableNameNull()
            {
                return this.IsNull(this.tableViews.TableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTableNameNull()
            {
                this[this.tableViews.TableNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsViewNameNull()
            {
                return this.IsNull(this.tableViews.ViewNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetViewNameNull()
            {
                this[this.tableViews.ViewNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSQLStatementNull()
            {
                return this.IsNull(this.tableViews.SQLStatementColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSQLStatementNull()
            {
                this[this.tableViews.SQLStatementColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaskListDisplayStringNull()
            {
                return this.IsNull(this.tableViews.TaskListDisplayStringColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaskListDisplayStringNull()
            {
                this[this.tableViews.TaskListDisplayStringColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxRecsPerFetchNull()
            {
                return this.IsNull(this.tableViews.MaxRecsPerFetchColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxRecsPerFetchNull()
            {
                this[this.tableViews.MaxRecsPerFetchColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SLTextSearchItemsRow : global::System.Data.DataRow
        {

            private SLTextSearchItemsDataTable tableSLTextSearchItems;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SLTextSearchItemsRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableSLTextSearchItems = ((SLTextSearchItemsDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IndexTableName
            {
                get
                {
                    return RecordsManage.HandleDBNull(this[this.tableSLTextSearchItems.IndexTableNameColumn]);
                    //return ((string)(this[this.tableSLTextSearchItems.IndexTableNameColumn]));
                }
                set
                {
                    this[this.tableSLTextSearchItems.IndexTableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IndexFieldName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSLTextSearchItems.IndexFieldNameColumn]);
                        //return ((string)(this[this.tableSLTextSearchItems.IndexFieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'IndexFieldName\' in table \'SLTextSearchItems\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSLTextSearchItems.IndexFieldNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIndexFieldNameNull()
            {
                return this.IsNull(this.tableSLTextSearchItems.IndexFieldNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIndexFieldNameNull()
            {
                this[this.tableSLTextSearchItems.IndexFieldNameColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PrimaryKeyRow : global::System.Data.DataRow
        {

            private PrimaryKeyDataTable tablePrimaryKey;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PrimaryKeyRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tablePrimaryKey = ((PrimaryKeyDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tablePrimaryKey.nameColumn]);
                        //return ((string)(this[this.tablePrimaryKey.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'PrimaryKey\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tablePrimaryKey.nameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameNull()
            {
                return this.IsNull(this.tablePrimaryKey.nameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnameNull()
            {
                this[this.tablePrimaryKey.nameColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SystemRow : global::System.Data.DataRow
        {

            private SystemDataTable tableSystem;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SystemRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableSystem = ((SystemDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableSystem.IdColumn]));
                }
                set
                {
                    this[this.tableSystem.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.UserNameColumn]);
                        //return ((string)(this[this.tableSystem.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.UserNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float HeadingHeight
            {
                get
                {
                    try
                    {
                        return ((float)(this[this.tableSystem.HeadingHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeadingHeight\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.HeadingHeightColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short RowHeight
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.RowHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowHeight\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RowHeightColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GridFontName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.GridFontNameColumn]);
                        //return ((string)(this[this.tableSystem.GridFontNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridFontName\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.GridFontNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float GridFontSize
            {
                get
                {
                    try
                    {
                        return ((float)(this[this.tableSystem.GridFontSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridFontSize\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.GridFontSizeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GridFontBold
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.GridFontBoldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridFontBold\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.GridFontBoldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short GridHdrAttributes
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.GridHdrAttributesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridHdrAttributes\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.GridHdrAttributesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TabFontName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.TabFontNameColumn]);
                        //return ((string)(this[this.tableSystem.TabFontNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabFontName\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TabFontNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float TabFontSize
            {
                get
                {
                    try
                    {
                        return ((float)(this[this.tableSystem.TabFontSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabFontSize\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TabFontSizeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TabFontBold
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.TabFontBoldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabFontBold\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TabFontBoldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BaseFontName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.BaseFontNameColumn]);
                        //return ((string)(this[this.tableSystem.BaseFontNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseFontName\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.BaseFontNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float BaseFontSize
            {
                get
                {
                    try
                    {
                        return ((float)(this[this.tableSystem.BaseFontSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseFontSize\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.BaseFontSizeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BaseFontBold
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.BaseFontBoldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseFontBold\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.BaseFontBoldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short GridOffsetX
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.GridOffsetXColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridOffsetX\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.GridOffsetXColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short GridOffsetY
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.GridOffsetYColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridOffsetY\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.GridOffsetYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabMaxWidth
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.TabMaxWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabMaxWidth\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TabMaxWidthColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabCutSize
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.TabCutSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabCutSize\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TabCutSizeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabHeight
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.TabHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabHeight\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TabHeightColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabRowOffset
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.TabRowOffsetColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabRowOffset\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TabRowOffsetColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabSelectType
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.TabSelectTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabSelectType\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TabSelectTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabsPerRow
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.TabsPerRowColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabsPerRow\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TabsPerRowColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short FrameWidth
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.FrameWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrameWidth\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.FrameWidthColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RMAGgroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.RMAGgroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RMAGgroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RMAGgroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MgrGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.MgrGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MgrGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.MgrGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LibrarianMDIPercent
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.LibrarianMDIPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LibrarianMDIPercent\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.LibrarianMDIPercentColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImageBackColor1
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ImageBackColor1Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageBackColor1\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ImageBackColor1Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImageBackColor2
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ImageBackColor2Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageBackColor2\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ImageBackColor2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImageBackColor3
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ImageBackColor3Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageBackColor3\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ImageBackColor3Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImageGridBackColor1
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ImageGridBackColor1Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageGridBackColor1\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ImageGridBackColor1Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImageGridBackColor2
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ImageGridBackColor2Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageGridBackColor2\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ImageGridBackColor2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImageGridBackColor3
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ImageGridBackColor3Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageGridBackColor3\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ImageGridBackColor3Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AnnotationAdd
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.AnnotationAddColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnnotationAdd\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.AnnotationAddColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AnnotationEdit
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.AnnotationEditColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnnotationEdit\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.AnnotationEditColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AnnotationDelete
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.AnnotationDeleteColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnnotationDelete\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.AnnotationDeleteColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AnnotationView
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.AnnotationViewColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnnotationView\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.AnnotationViewColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NoGridURL
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.NoGridURLColumn]);
                        //return ((string)(this[this.tableSystem.NoGridURLColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoGridURL\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.NoGridURLColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ADOConnectionTimeout
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ADOConnectionTimeoutColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADOConnectionTimeout\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ADOConnectionTimeoutColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefaultOutputSettingsId
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.DefaultOutputSettingsIdColumn]);
                        //return ((string)(this[this.tableSystem.DefaultOutputSettingsIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultOutputSettingsId\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.DefaultOutputSettingsIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSAfterDestinationScanned
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.LSAfterDestinationScannedColumn]);
                        //return ((string)(this[this.tableSystem.LSAfterDestinationScannedColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSAfterDestinationScanned\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.LSAfterDestinationScannedColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSAfterObjectScanned
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.LSAfterObjectScannedColumn]);
                        //return ((string)(this[this.tableSystem.LSAfterObjectScannedColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSAfterObjectScanned\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.LSAfterObjectScannedColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSAfterDestinationAccepted
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.LSAfterDestinationAcceptedColumn]);
                        //return ((string)(this[this.tableSystem.LSAfterDestinationAcceptedColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSAfterDestinationAccepted\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.LSAfterDestinationAcceptedColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSAfterObjectAccepted
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.LSAfterObjectAcceptedColumn]);
                        //return ((string)(this[this.tableSystem.LSAfterObjectAcceptedColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSAfterObjectAccepted\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.LSAfterObjectAcceptedColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LSAfterTrackingComplete
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.LSAfterTrackingCompleteColumn]);
                        //return ((string)(this[this.tableSystem.LSAfterTrackingCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSAfterTrackingComplete\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.LSAfterTrackingCompleteColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseViewDisplayMode
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.UseViewDisplayModeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseViewDisplayMode\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.UseViewDisplayModeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FormViewMinLines
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.FormViewMinLinesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormViewMinLines\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.FormViewMinLinesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImportRunGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ImportRunGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportRunGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ImportRunGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExpressSetupGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ExpressSetupGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpressSetupGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ExpressSetupGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ManualTrackingGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ManualTrackingGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManualTrackingGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ManualTrackingGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxHistoryDays
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.MaxHistoryDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxHistoryDays\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.MaxHistoryDaysColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxHistoryItems
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.MaxHistoryItemsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxHistoryItems\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.MaxHistoryItemsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingAdditionalField1Desc
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.TrackingAdditionalField1DescColumn]);
                        //return ((string)(this[this.tableSystem.TrackingAdditionalField1DescColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingAdditionalField1Desc\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TrackingAdditionalField1DescColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TrackingAdditionalField1Type
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.TrackingAdditionalField1TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingAdditionalField1Type\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TrackingAdditionalField1TypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingAdditionalField2Desc
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.TrackingAdditionalField2DescColumn]);
                        //return ((string)(this[this.tableSystem.TrackingAdditionalField2DescColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingAdditionalField2Desc\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TrackingAdditionalField2DescColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AllowRequests
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.AllowRequestsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllowRequests\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.AllowRequestsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AllowWaitList
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.AllowWaitListColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllowWaitList\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.AllowWaitListColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PopupWaitList
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.PopupWaitListColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PopupWaitList\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.PopupWaitListColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RequestorOperatorGrp
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.RequestorOperatorGrpColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestorOperatorGrp\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RequestorOperatorGrpColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RequestorHighPGrp
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.RequestorHighPGrpColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestorHighPGrp\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RequestorHighPGrpColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RetentionTurnOffCitations
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.RetentionTurnOffCitationsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionTurnOffCitations\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RetentionTurnOffCitationsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RetentionYearEnd
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.RetentionYearEndColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionYearEnd\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RetentionYearEndColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RetentionAttachDelGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.RetentionAttachDelGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionAttachDelGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RetentionAttachDelGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RetentionOperatorGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.RetentionOperatorGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionOperatorGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RetentionOperatorGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GridBackColorEven
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.GridBackColorEvenColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridBackColorEven\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.GridBackColorEvenColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GridBackColorOdd
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.GridBackColorOddColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridBackColorOdd\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.GridBackColorOddColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GridForeColorEven
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.GridForeColorEvenColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridForeColorEven\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.GridForeColorEvenColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GridForeColorOdd
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.GridForeColorOddColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridForeColorOdd\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.GridForeColorOddColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReportGridColor
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ReportGridColorColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportGridColor\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ReportGridColorColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AlternateRowColors
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.AlternateRowColorsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternateRowColors\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.AlternateRowColorsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ArchGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ArchGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArchGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ArchGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int COLDGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.COLDGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLDGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.COLDGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DateDueOn
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.DateDueOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateDueOn\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.DateDueOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FaxmGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.FaxmGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FaxmGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.FaxmGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImportGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ImportGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ImportGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LabelGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.LabelGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.LabelGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LitigationOn
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.LitigationOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LitigationOn\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.LitigationOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NetworkSecurityOn
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.NetworkSecurityOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetworkSecurityOn\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.NetworkSecurityOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OtherGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.OtherGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.OtherGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PCFilesEditGrp
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.PCFilesEditGrpColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCFilesEditGrp\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.PCFilesEditGrpColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PCFilesNVerGrp
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.PCFilesNVerGrpColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCFilesNVerGrp\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.PCFilesNVerGrpColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Picture
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.PictureColumn]);
                        //return ((string)(this[this.tableSystem.PictureColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Picture\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.PictureColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PrintFast
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.PrintFastColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintFast\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.PrintFastColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ReconciliationOn
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.ReconciliationOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReconciliationOn\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ReconciliationOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RedactViewGrp
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.RedactViewGrpColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RedactViewGrp\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RedactViewGrpColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RetentionOn
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.RetentionOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetentionOn\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RetentionOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ScanGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ScanGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ScanGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SecurityGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.SecurityGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecurityGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.SecurityGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SQLGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.SQLGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SQLGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.SQLGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TrackingGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.TrackingGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TrackingGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TrackingOutOn
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.TrackingOutOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingOutOn\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.TrackingOutOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReqAutoPrintMethod
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ReqAutoPrintMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqAutoPrintMethod\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ReqAutoPrintMethodColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReqAutoPrintCopies
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ReqAutoPrintCopiesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqAutoPrintCopies\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ReqAutoPrintCopiesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReqAutoPrintInterval
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ReqAutoPrintIntervalColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqAutoPrintInterval\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ReqAutoPrintIntervalColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReqAutoPrintIDType
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ReqAutoPrintIDTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqAutoPrintIDType\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ReqAutoPrintIDTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BatchRequestGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.BatchRequestGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchRequestGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.BatchRequestGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AuditingSecurityManagerGrp
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.AuditingSecurityManagerGrpColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuditingSecurityManagerGrp\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.AuditingSecurityManagerGrpColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RequestConfirmation
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.RequestConfirmationColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestConfirmation\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RequestConfirmationColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EMailDeliveryEnabled
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.EMailDeliveryEnabledColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMailDeliveryEnabled\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.EMailDeliveryEnabledColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EMailWaitListEnabled
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.EMailWaitListEnabledColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMailWaitListEnabled\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.EMailWaitListEnabledColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EMailSendMethod
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.EMailSendMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMailSendMethod\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.EMailSendMethodColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EMailConfirmationType
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.EMailConfirmationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMailConfirmationType\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.EMailConfirmationTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SMTPAuthentication
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.SMTPAuthenticationColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTPAuthentication\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.SMTPAuthenticationColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SMTPPort
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.SMTPPortColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTPPort\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.SMTPPortColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SMTPServer
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.SMTPServerColumn]);
                        //return ((string)(this[this.tableSystem.SMTPServerColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTPServer\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.SMTPServerColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SMTPUserAddress
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.SMTPUserAddressColumn]);
                        //return ((string)(this[this.tableSystem.SMTPUserAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTPUserAddress\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.SMTPUserAddressColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SMTPUserPassword
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.SMTPUserPasswordColumn]);
                        //return ((string)(this[this.tableSystem.SMTPUserPasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTPUserPassword\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.SMTPUserPasswordColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastPastDueEmailTime
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableSystem.LastPastDueEmailTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPastDueEmailTime\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.LastPastDueEmailTimeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastPastDueEmailUser
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableSystem.LastPastDueEmailUserColumn]);
                        //return ((string)(this[this.tableSystem.LastPastDueEmailUserColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPastDueEmailUser\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.LastPastDueEmailUserColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EMailExceptionEnabled
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.EMailExceptionEnabledColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMailExceptionEnabled\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.EMailExceptionEnabledColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DefaultDueBackDays
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableSystem.DefaultDueBackDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultDueBackDays\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.DefaultDueBackDaysColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImageCaptureGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ImageCaptureGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageCaptureGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ImageCaptureGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExportGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.ExportGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExportGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.ExportGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NotificationEnabled
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.NotificationEnabledColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotificationEnabled\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.NotificationEnabledColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AttachmentVersionGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.AttachmentVersionGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttachmentVersionGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.AttachmentVersionGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RedactEditGrp
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.RedactEditGrpColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RedactEditGrp\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.RedactEditGrpColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseTableIcons
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.UseTableIconsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseTableIcons\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.UseTableIconsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SignatureCaptureOn
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.SignatureCaptureOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SignatureCaptureOn\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.SignatureCaptureOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InactiveRecordGroup
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSystem.InactiveRecordGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'InactiveRecordGroup\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.InactiveRecordGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PrintImageFooter
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableSystem.PrintImageFooterColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintImageFooter\' in table \'System\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSystem.PrintImageFooterColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserNameNull()
            {
                return this.IsNull(this.tableSystem.UserNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserNameNull()
            {
                this[this.tableSystem.UserNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeadingHeightNull()
            {
                return this.IsNull(this.tableSystem.HeadingHeightColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeadingHeightNull()
            {
                this[this.tableSystem.HeadingHeightColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowHeightNull()
            {
                return this.IsNull(this.tableSystem.RowHeightColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowHeightNull()
            {
                this[this.tableSystem.RowHeightColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGridFontNameNull()
            {
                return this.IsNull(this.tableSystem.GridFontNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGridFontNameNull()
            {
                this[this.tableSystem.GridFontNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGridFontSizeNull()
            {
                return this.IsNull(this.tableSystem.GridFontSizeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGridFontSizeNull()
            {
                this[this.tableSystem.GridFontSizeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGridFontBoldNull()
            {
                return this.IsNull(this.tableSystem.GridFontBoldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGridFontBoldNull()
            {
                this[this.tableSystem.GridFontBoldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGridHdrAttributesNull()
            {
                return this.IsNull(this.tableSystem.GridHdrAttributesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGridHdrAttributesNull()
            {
                this[this.tableSystem.GridHdrAttributesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabFontNameNull()
            {
                return this.IsNull(this.tableSystem.TabFontNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabFontNameNull()
            {
                this[this.tableSystem.TabFontNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabFontSizeNull()
            {
                return this.IsNull(this.tableSystem.TabFontSizeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabFontSizeNull()
            {
                this[this.tableSystem.TabFontSizeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabFontBoldNull()
            {
                return this.IsNull(this.tableSystem.TabFontBoldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabFontBoldNull()
            {
                this[this.tableSystem.TabFontBoldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseFontNameNull()
            {
                return this.IsNull(this.tableSystem.BaseFontNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseFontNameNull()
            {
                this[this.tableSystem.BaseFontNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseFontSizeNull()
            {
                return this.IsNull(this.tableSystem.BaseFontSizeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseFontSizeNull()
            {
                this[this.tableSystem.BaseFontSizeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseFontBoldNull()
            {
                return this.IsNull(this.tableSystem.BaseFontBoldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseFontBoldNull()
            {
                this[this.tableSystem.BaseFontBoldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGridOffsetXNull()
            {
                return this.IsNull(this.tableSystem.GridOffsetXColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGridOffsetXNull()
            {
                this[this.tableSystem.GridOffsetXColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGridOffsetYNull()
            {
                return this.IsNull(this.tableSystem.GridOffsetYColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGridOffsetYNull()
            {
                this[this.tableSystem.GridOffsetYColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabMaxWidthNull()
            {
                return this.IsNull(this.tableSystem.TabMaxWidthColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabMaxWidthNull()
            {
                this[this.tableSystem.TabMaxWidthColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabCutSizeNull()
            {
                return this.IsNull(this.tableSystem.TabCutSizeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabCutSizeNull()
            {
                this[this.tableSystem.TabCutSizeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabHeightNull()
            {
                return this.IsNull(this.tableSystem.TabHeightColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabHeightNull()
            {
                this[this.tableSystem.TabHeightColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabRowOffsetNull()
            {
                return this.IsNull(this.tableSystem.TabRowOffsetColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabRowOffsetNull()
            {
                this[this.tableSystem.TabRowOffsetColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabSelectTypeNull()
            {
                return this.IsNull(this.tableSystem.TabSelectTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabSelectTypeNull()
            {
                this[this.tableSystem.TabSelectTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabsPerRowNull()
            {
                return this.IsNull(this.tableSystem.TabsPerRowColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabsPerRowNull()
            {
                this[this.tableSystem.TabsPerRowColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFrameWidthNull()
            {
                return this.IsNull(this.tableSystem.FrameWidthColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFrameWidthNull()
            {
                this[this.tableSystem.FrameWidthColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRMAGgroupNull()
            {
                return this.IsNull(this.tableSystem.RMAGgroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRMAGgroupNull()
            {
                this[this.tableSystem.RMAGgroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMgrGroupNull()
            {
                return this.IsNull(this.tableSystem.MgrGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMgrGroupNull()
            {
                this[this.tableSystem.MgrGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibrarianMDIPercentNull()
            {
                return this.IsNull(this.tableSystem.LibrarianMDIPercentColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibrarianMDIPercentNull()
            {
                this[this.tableSystem.LibrarianMDIPercentColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageBackColor1Null()
            {
                return this.IsNull(this.tableSystem.ImageBackColor1Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageBackColor1Null()
            {
                this[this.tableSystem.ImageBackColor1Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageBackColor2Null()
            {
                return this.IsNull(this.tableSystem.ImageBackColor2Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageBackColor2Null()
            {
                this[this.tableSystem.ImageBackColor2Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageBackColor3Null()
            {
                return this.IsNull(this.tableSystem.ImageBackColor3Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageBackColor3Null()
            {
                this[this.tableSystem.ImageBackColor3Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageGridBackColor1Null()
            {
                return this.IsNull(this.tableSystem.ImageGridBackColor1Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageGridBackColor1Null()
            {
                this[this.tableSystem.ImageGridBackColor1Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageGridBackColor2Null()
            {
                return this.IsNull(this.tableSystem.ImageGridBackColor2Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageGridBackColor2Null()
            {
                this[this.tableSystem.ImageGridBackColor2Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageGridBackColor3Null()
            {
                return this.IsNull(this.tableSystem.ImageGridBackColor3Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageGridBackColor3Null()
            {
                this[this.tableSystem.ImageGridBackColor3Column] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnnotationAddNull()
            {
                return this.IsNull(this.tableSystem.AnnotationAddColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnnotationAddNull()
            {
                this[this.tableSystem.AnnotationAddColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnnotationEditNull()
            {
                return this.IsNull(this.tableSystem.AnnotationEditColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnnotationEditNull()
            {
                this[this.tableSystem.AnnotationEditColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnnotationDeleteNull()
            {
                return this.IsNull(this.tableSystem.AnnotationDeleteColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnnotationDeleteNull()
            {
                this[this.tableSystem.AnnotationDeleteColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnnotationViewNull()
            {
                return this.IsNull(this.tableSystem.AnnotationViewColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnnotationViewNull()
            {
                this[this.tableSystem.AnnotationViewColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoGridURLNull()
            {
                return this.IsNull(this.tableSystem.NoGridURLColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoGridURLNull()
            {
                this[this.tableSystem.NoGridURLColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsADOConnectionTimeoutNull()
            {
                return this.IsNull(this.tableSystem.ADOConnectionTimeoutColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetADOConnectionTimeoutNull()
            {
                this[this.tableSystem.ADOConnectionTimeoutColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultOutputSettingsIdNull()
            {
                return this.IsNull(this.tableSystem.DefaultOutputSettingsIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultOutputSettingsIdNull()
            {
                this[this.tableSystem.DefaultOutputSettingsIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSAfterDestinationScannedNull()
            {
                return this.IsNull(this.tableSystem.LSAfterDestinationScannedColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSAfterDestinationScannedNull()
            {
                this[this.tableSystem.LSAfterDestinationScannedColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSAfterObjectScannedNull()
            {
                return this.IsNull(this.tableSystem.LSAfterObjectScannedColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSAfterObjectScannedNull()
            {
                this[this.tableSystem.LSAfterObjectScannedColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSAfterDestinationAcceptedNull()
            {
                return this.IsNull(this.tableSystem.LSAfterDestinationAcceptedColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSAfterDestinationAcceptedNull()
            {
                this[this.tableSystem.LSAfterDestinationAcceptedColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSAfterObjectAcceptedNull()
            {
                return this.IsNull(this.tableSystem.LSAfterObjectAcceptedColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSAfterObjectAcceptedNull()
            {
                this[this.tableSystem.LSAfterObjectAcceptedColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLSAfterTrackingCompleteNull()
            {
                return this.IsNull(this.tableSystem.LSAfterTrackingCompleteColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLSAfterTrackingCompleteNull()
            {
                this[this.tableSystem.LSAfterTrackingCompleteColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUseViewDisplayModeNull()
            {
                return this.IsNull(this.tableSystem.UseViewDisplayModeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUseViewDisplayModeNull()
            {
                this[this.tableSystem.UseViewDisplayModeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFormViewMinLinesNull()
            {
                return this.IsNull(this.tableSystem.FormViewMinLinesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFormViewMinLinesNull()
            {
                this[this.tableSystem.FormViewMinLinesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImportRunGroupNull()
            {
                return this.IsNull(this.tableSystem.ImportRunGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImportRunGroupNull()
            {
                this[this.tableSystem.ImportRunGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpressSetupGroupNull()
            {
                return this.IsNull(this.tableSystem.ExpressSetupGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpressSetupGroupNull()
            {
                this[this.tableSystem.ExpressSetupGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManualTrackingGroupNull()
            {
                return this.IsNull(this.tableSystem.ManualTrackingGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManualTrackingGroupNull()
            {
                this[this.tableSystem.ManualTrackingGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxHistoryDaysNull()
            {
                return this.IsNull(this.tableSystem.MaxHistoryDaysColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxHistoryDaysNull()
            {
                this[this.tableSystem.MaxHistoryDaysColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxHistoryItemsNull()
            {
                return this.IsNull(this.tableSystem.MaxHistoryItemsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxHistoryItemsNull()
            {
                this[this.tableSystem.MaxHistoryItemsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingAdditionalField1DescNull()
            {
                return this.IsNull(this.tableSystem.TrackingAdditionalField1DescColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingAdditionalField1DescNull()
            {
                this[this.tableSystem.TrackingAdditionalField1DescColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingAdditionalField1TypeNull()
            {
                return this.IsNull(this.tableSystem.TrackingAdditionalField1TypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingAdditionalField1TypeNull()
            {
                this[this.tableSystem.TrackingAdditionalField1TypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingAdditionalField2DescNull()
            {
                return this.IsNull(this.tableSystem.TrackingAdditionalField2DescColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingAdditionalField2DescNull()
            {
                this[this.tableSystem.TrackingAdditionalField2DescColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAllowRequestsNull()
            {
                return this.IsNull(this.tableSystem.AllowRequestsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAllowRequestsNull()
            {
                this[this.tableSystem.AllowRequestsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAllowWaitListNull()
            {
                return this.IsNull(this.tableSystem.AllowWaitListColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAllowWaitListNull()
            {
                this[this.tableSystem.AllowWaitListColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPopupWaitListNull()
            {
                return this.IsNull(this.tableSystem.PopupWaitListColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPopupWaitListNull()
            {
                this[this.tableSystem.PopupWaitListColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequestorOperatorGrpNull()
            {
                return this.IsNull(this.tableSystem.RequestorOperatorGrpColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequestorOperatorGrpNull()
            {
                this[this.tableSystem.RequestorOperatorGrpColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequestorHighPGrpNull()
            {
                return this.IsNull(this.tableSystem.RequestorHighPGrpColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequestorHighPGrpNull()
            {
                this[this.tableSystem.RequestorHighPGrpColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionTurnOffCitationsNull()
            {
                return this.IsNull(this.tableSystem.RetentionTurnOffCitationsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionTurnOffCitationsNull()
            {
                this[this.tableSystem.RetentionTurnOffCitationsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionYearEndNull()
            {
                return this.IsNull(this.tableSystem.RetentionYearEndColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionYearEndNull()
            {
                this[this.tableSystem.RetentionYearEndColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionAttachDelGroupNull()
            {
                return this.IsNull(this.tableSystem.RetentionAttachDelGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionAttachDelGroupNull()
            {
                this[this.tableSystem.RetentionAttachDelGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionOperatorGroupNull()
            {
                return this.IsNull(this.tableSystem.RetentionOperatorGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionOperatorGroupNull()
            {
                this[this.tableSystem.RetentionOperatorGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGridBackColorEvenNull()
            {
                return this.IsNull(this.tableSystem.GridBackColorEvenColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGridBackColorEvenNull()
            {
                this[this.tableSystem.GridBackColorEvenColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGridBackColorOddNull()
            {
                return this.IsNull(this.tableSystem.GridBackColorOddColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGridBackColorOddNull()
            {
                this[this.tableSystem.GridBackColorOddColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGridForeColorEvenNull()
            {
                return this.IsNull(this.tableSystem.GridForeColorEvenColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGridForeColorEvenNull()
            {
                this[this.tableSystem.GridForeColorEvenColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGridForeColorOddNull()
            {
                return this.IsNull(this.tableSystem.GridForeColorOddColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGridForeColorOddNull()
            {
                this[this.tableSystem.GridForeColorOddColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReportGridColorNull()
            {
                return this.IsNull(this.tableSystem.ReportGridColorColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReportGridColorNull()
            {
                this[this.tableSystem.ReportGridColorColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternateRowColorsNull()
            {
                return this.IsNull(this.tableSystem.AlternateRowColorsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternateRowColorsNull()
            {
                this[this.tableSystem.AlternateRowColorsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchGroupNull()
            {
                return this.IsNull(this.tableSystem.ArchGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchGroupNull()
            {
                this[this.tableSystem.ArchGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLDGroupNull()
            {
                return this.IsNull(this.tableSystem.COLDGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLDGroupNull()
            {
                this[this.tableSystem.COLDGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateDueOnNull()
            {
                return this.IsNull(this.tableSystem.DateDueOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateDueOnNull()
            {
                this[this.tableSystem.DateDueOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaxmGroupNull()
            {
                return this.IsNull(this.tableSystem.FaxmGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaxmGroupNull()
            {
                this[this.tableSystem.FaxmGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImportGroupNull()
            {
                return this.IsNull(this.tableSystem.ImportGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImportGroupNull()
            {
                this[this.tableSystem.ImportGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLabelGroupNull()
            {
                return this.IsNull(this.tableSystem.LabelGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLabelGroupNull()
            {
                this[this.tableSystem.LabelGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLitigationOnNull()
            {
                return this.IsNull(this.tableSystem.LitigationOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLitigationOnNull()
            {
                this[this.tableSystem.LitigationOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetworkSecurityOnNull()
            {
                return this.IsNull(this.tableSystem.NetworkSecurityOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetworkSecurityOnNull()
            {
                this[this.tableSystem.NetworkSecurityOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherGroupNull()
            {
                return this.IsNull(this.tableSystem.OtherGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherGroupNull()
            {
                this[this.tableSystem.OtherGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCFilesEditGrpNull()
            {
                return this.IsNull(this.tableSystem.PCFilesEditGrpColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCFilesEditGrpNull()
            {
                this[this.tableSystem.PCFilesEditGrpColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCFilesNVerGrpNull()
            {
                return this.IsNull(this.tableSystem.PCFilesNVerGrpColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCFilesNVerGrpNull()
            {
                this[this.tableSystem.PCFilesNVerGrpColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPictureNull()
            {
                return this.IsNull(this.tableSystem.PictureColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPictureNull()
            {
                this[this.tableSystem.PictureColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrintFastNull()
            {
                return this.IsNull(this.tableSystem.PrintFastColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrintFastNull()
            {
                this[this.tableSystem.PrintFastColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReconciliationOnNull()
            {
                return this.IsNull(this.tableSystem.ReconciliationOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReconciliationOnNull()
            {
                this[this.tableSystem.ReconciliationOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRedactViewGrpNull()
            {
                return this.IsNull(this.tableSystem.RedactViewGrpColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRedactViewGrpNull()
            {
                this[this.tableSystem.RedactViewGrpColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetentionOnNull()
            {
                return this.IsNull(this.tableSystem.RetentionOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetentionOnNull()
            {
                this[this.tableSystem.RetentionOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScanGroupNull()
            {
                return this.IsNull(this.tableSystem.ScanGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScanGroupNull()
            {
                this[this.tableSystem.ScanGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecurityGroupNull()
            {
                return this.IsNull(this.tableSystem.SecurityGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecurityGroupNull()
            {
                this[this.tableSystem.SecurityGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSQLGroupNull()
            {
                return this.IsNull(this.tableSystem.SQLGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSQLGroupNull()
            {
                this[this.tableSystem.SQLGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingGroupNull()
            {
                return this.IsNull(this.tableSystem.TrackingGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingGroupNull()
            {
                this[this.tableSystem.TrackingGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingOutOnNull()
            {
                return this.IsNull(this.tableSystem.TrackingOutOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingOutOnNull()
            {
                this[this.tableSystem.TrackingOutOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqAutoPrintMethodNull()
            {
                return this.IsNull(this.tableSystem.ReqAutoPrintMethodColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqAutoPrintMethodNull()
            {
                this[this.tableSystem.ReqAutoPrintMethodColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqAutoPrintCopiesNull()
            {
                return this.IsNull(this.tableSystem.ReqAutoPrintCopiesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqAutoPrintCopiesNull()
            {
                this[this.tableSystem.ReqAutoPrintCopiesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqAutoPrintIntervalNull()
            {
                return this.IsNull(this.tableSystem.ReqAutoPrintIntervalColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqAutoPrintIntervalNull()
            {
                this[this.tableSystem.ReqAutoPrintIntervalColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqAutoPrintIDTypeNull()
            {
                return this.IsNull(this.tableSystem.ReqAutoPrintIDTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqAutoPrintIDTypeNull()
            {
                this[this.tableSystem.ReqAutoPrintIDTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBatchRequestGroupNull()
            {
                return this.IsNull(this.tableSystem.BatchRequestGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBatchRequestGroupNull()
            {
                this[this.tableSystem.BatchRequestGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAuditingSecurityManagerGrpNull()
            {
                return this.IsNull(this.tableSystem.AuditingSecurityManagerGrpColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAuditingSecurityManagerGrpNull()
            {
                this[this.tableSystem.AuditingSecurityManagerGrpColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequestConfirmationNull()
            {
                return this.IsNull(this.tableSystem.RequestConfirmationColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequestConfirmationNull()
            {
                this[this.tableSystem.RequestConfirmationColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEMailDeliveryEnabledNull()
            {
                return this.IsNull(this.tableSystem.EMailDeliveryEnabledColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEMailDeliveryEnabledNull()
            {
                this[this.tableSystem.EMailDeliveryEnabledColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEMailWaitListEnabledNull()
            {
                return this.IsNull(this.tableSystem.EMailWaitListEnabledColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEMailWaitListEnabledNull()
            {
                this[this.tableSystem.EMailWaitListEnabledColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEMailSendMethodNull()
            {
                return this.IsNull(this.tableSystem.EMailSendMethodColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEMailSendMethodNull()
            {
                this[this.tableSystem.EMailSendMethodColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEMailConfirmationTypeNull()
            {
                return this.IsNull(this.tableSystem.EMailConfirmationTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEMailConfirmationTypeNull()
            {
                this[this.tableSystem.EMailConfirmationTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSMTPAuthenticationNull()
            {
                return this.IsNull(this.tableSystem.SMTPAuthenticationColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSMTPAuthenticationNull()
            {
                this[this.tableSystem.SMTPAuthenticationColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSMTPPortNull()
            {
                return this.IsNull(this.tableSystem.SMTPPortColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSMTPPortNull()
            {
                this[this.tableSystem.SMTPPortColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSMTPServerNull()
            {
                return this.IsNull(this.tableSystem.SMTPServerColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSMTPServerNull()
            {
                this[this.tableSystem.SMTPServerColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSMTPUserAddressNull()
            {
                return this.IsNull(this.tableSystem.SMTPUserAddressColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSMTPUserAddressNull()
            {
                this[this.tableSystem.SMTPUserAddressColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSMTPUserPasswordNull()
            {
                return this.IsNull(this.tableSystem.SMTPUserPasswordColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSMTPUserPasswordNull()
            {
                this[this.tableSystem.SMTPUserPasswordColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastPastDueEmailTimeNull()
            {
                return this.IsNull(this.tableSystem.LastPastDueEmailTimeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastPastDueEmailTimeNull()
            {
                this[this.tableSystem.LastPastDueEmailTimeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastPastDueEmailUserNull()
            {
                return this.IsNull(this.tableSystem.LastPastDueEmailUserColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastPastDueEmailUserNull()
            {
                this[this.tableSystem.LastPastDueEmailUserColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEMailExceptionEnabledNull()
            {
                return this.IsNull(this.tableSystem.EMailExceptionEnabledColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEMailExceptionEnabledNull()
            {
                this[this.tableSystem.EMailExceptionEnabledColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultDueBackDaysNull()
            {
                return this.IsNull(this.tableSystem.DefaultDueBackDaysColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultDueBackDaysNull()
            {
                this[this.tableSystem.DefaultDueBackDaysColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageCaptureGroupNull()
            {
                return this.IsNull(this.tableSystem.ImageCaptureGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageCaptureGroupNull()
            {
                this[this.tableSystem.ImageCaptureGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExportGroupNull()
            {
                return this.IsNull(this.tableSystem.ExportGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExportGroupNull()
            {
                this[this.tableSystem.ExportGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotificationEnabledNull()
            {
                return this.IsNull(this.tableSystem.NotificationEnabledColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotificationEnabledNull()
            {
                this[this.tableSystem.NotificationEnabledColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttachmentVersionGroupNull()
            {
                return this.IsNull(this.tableSystem.AttachmentVersionGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttachmentVersionGroupNull()
            {
                this[this.tableSystem.AttachmentVersionGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRedactEditGrpNull()
            {
                return this.IsNull(this.tableSystem.RedactEditGrpColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRedactEditGrpNull()
            {
                this[this.tableSystem.RedactEditGrpColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUseTableIconsNull()
            {
                return this.IsNull(this.tableSystem.UseTableIconsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUseTableIconsNull()
            {
                this[this.tableSystem.UseTableIconsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSignatureCaptureOnNull()
            {
                return this.IsNull(this.tableSystem.SignatureCaptureOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSignatureCaptureOnNull()
            {
                this[this.tableSystem.SignatureCaptureOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInactiveRecordGroupNull()
            {
                return this.IsNull(this.tableSystem.InactiveRecordGroupColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInactiveRecordGroupNull()
            {
                this[this.tableSystem.InactiveRecordGroupColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrintImageFooterNull()
            {
                return this.IsNull(this.tableSystem.PrintImageFooterColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrintImageFooterNull()
            {
                this[this.tableSystem.PrintImageFooterColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable1Row : global::System.Data.DataRow
        {

            private DataTable1DataTable tableDataTable1;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ParentViewID
            {
                get
                {
                    return ((int)(this[this.tableDataTable1.ParentViewIDColumn]));
                }
                set
                {
                    this[this.tableDataTable1.ParentViewIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChildViewID
            {
                get
                {
                    return ((int)(this[this.tableDataTable1.ChildViewIDColumn]));
                }
                set
                {
                    this[this.tableDataTable1.ChildViewIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChildViewName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableDataTable1.ChildViewNameColumn]);
                        //return ((string)(this[this.tableDataTable1.ChildViewNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChildViewName\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDataTable1.ChildViewNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChildKeyField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableDataTable1.ChildKeyFieldColumn]);
                        //return ((string)(this[this.tableDataTable1.ChildKeyFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChildKeyField\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDataTable1.ChildKeyFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabOrder
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableDataTable1.TabOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabOrder\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDataTable1.TabOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChildTableName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableDataTable1.ChildTableNameColumn]);
                        //return ((string)(this[this.tableDataTable1.ChildTableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChildTableName\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDataTable1.ChildTableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChildUserName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableDataTable1.ChildUserNameColumn]);
                        //return ((string)(this[this.tableDataTable1.ChildUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChildUserName\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDataTable1.ChildUserNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ViewOrder
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableDataTable1.ViewOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewOrder\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDataTable1.ViewOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChildViewNameNull()
            {
                return this.IsNull(this.tableDataTable1.ChildViewNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChildViewNameNull()
            {
                this[this.tableDataTable1.ChildViewNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChildKeyFieldNull()
            {
                return this.IsNull(this.tableDataTable1.ChildKeyFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChildKeyFieldNull()
            {
                this[this.tableDataTable1.ChildKeyFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabOrderNull()
            {
                return this.IsNull(this.tableDataTable1.TabOrderColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabOrderNull()
            {
                this[this.tableDataTable1.TabOrderColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChildTableNameNull()
            {
                return this.IsNull(this.tableDataTable1.ChildTableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChildTableNameNull()
            {
                this[this.tableDataTable1.ChildTableNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChildUserNameNull()
            {
                return this.IsNull(this.tableDataTable1.ChildUserNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChildUserNameNull()
            {
                this[this.tableDataTable1.ChildUserNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsViewOrderNull()
            {
                return this.IsNull(this.tableDataTable1.ViewOrderColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetViewOrderNull()
            {
                this[this.tableDataTable1.ViewOrderColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EmployeesRow : global::System.Data.DataRow
        {

            private EmployeesDataTable tableEmployees;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmployeesRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableEmployees = ((EmployeesDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableEmployees.IdColumn]));
                }
                set
                {
                    this[this.tableEmployees.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Phone
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableEmployees.PhoneColumn]);
                        //return ((string)(this[this.tableEmployees.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableEmployees.PhoneColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active
            {
                get
                {
                    return ((bool)(this[this.tableEmployees.ActiveColumn]));
                }
                set
                {
                    this[this.tableEmployees.ActiveColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Out
            {
                get
                {
                    return ((bool)(this[this.tableEmployees.OutColumn]));
                }
                set
                {
                    this[this.tableEmployees.OutColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableEmployees.UserNameColumn]);
                        //return ((string)(this[this.tableEmployees.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableEmployees.UserNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeEmail
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableEmployees.EmployeeEmailColumn]);
                        //return ((string)(this[this.tableEmployees.EmployeeEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeEmail\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableEmployees.EmployeeEmailColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DueBackDays
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableEmployees.DueBackDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueBackDays\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableEmployees.DueBackDaysColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirstName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableEmployees.FirstNameColumn]);
                        //return ((string)(this[this.tableEmployees.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableEmployees.FirstNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableEmployees.LastNameColumn]);
                        //return ((string)(this[this.tableEmployees.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableEmployees.LastNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhoneNull()
            {
                return this.IsNull(this.tableEmployees.PhoneColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhoneNull()
            {
                this[this.tableEmployees.PhoneColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserNameNull()
            {
                return this.IsNull(this.tableEmployees.UserNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserNameNull()
            {
                this[this.tableEmployees.UserNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeEmailNull()
            {
                return this.IsNull(this.tableEmployees.EmployeeEmailColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeEmailNull()
            {
                this[this.tableEmployees.EmployeeEmailColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDueBackDaysNull()
            {
                return this.IsNull(this.tableEmployees.DueBackDaysColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDueBackDaysNull()
            {
                this[this.tableEmployees.DueBackDaysColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirstNameNull()
            {
                return this.IsNull(this.tableEmployees.FirstNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirstNameNull()
            {
                this[this.tableEmployees.FirstNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastNameNull()
            {
                return this.IsNull(this.tableEmployees.LastNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastNameNull()
            {
                this[this.tableEmployees.LastNameColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ChildViewsRow : global::System.Data.DataRow
        {

            private ChildViewsDataTable tableChildViews;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChildViewsRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableChildViews = ((ChildViewsDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ParentViewID
            {
                get
                {
                    return ((int)(this[this.tableChildViews.ParentViewIDColumn]));
                }
                set
                {
                    this[this.tableChildViews.ParentViewIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChildViewID
            {
                get
                {
                    return ((int)(this[this.tableChildViews.ChildViewIDColumn]));
                }
                set
                {
                    this[this.tableChildViews.ChildViewIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChildViewName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableChildViews.ChildViewNameColumn]);
                        //return ((string)(this[this.tableChildViews.ChildViewNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChildViewName\' in table \'ChildViews\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableChildViews.ChildViewNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChildKeyField
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableChildViews.ChildKeyFieldColumn]);
                        //return ((string)(this[this.tableChildViews.ChildKeyFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChildKeyField\' in table \'ChildViews\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableChildViews.ChildKeyFieldColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TabOrder
            {
                get
                {
                    try
                    {
                        return ((short)(this[this.tableChildViews.TabOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabOrder\' in table \'ChildViews\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableChildViews.TabOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChildTableName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableChildViews.ChildTableNameColumn]);
                        //return ((string)(this[this.tableChildViews.ChildTableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChildTableName\' in table \'ChildViews\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableChildViews.ChildTableNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChildUserName
            {
                get
                {
                    try
                    {
                        return RecordsManage.HandleDBNull(this[this.tableChildViews.ChildUserNameColumn]);
                        //return ((string)(this[this.tableChildViews.ChildUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChildUserName\' in table \'ChildViews\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableChildViews.ChildUserNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ViewOrder
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableChildViews.ViewOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewOrder\' in table \'ChildViews\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableChildViews.ViewOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChildViewNameNull()
            {
                return this.IsNull(this.tableChildViews.ChildViewNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChildViewNameNull()
            {
                this[this.tableChildViews.ChildViewNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChildKeyFieldNull()
            {
                return this.IsNull(this.tableChildViews.ChildKeyFieldColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChildKeyFieldNull()
            {
                this[this.tableChildViews.ChildKeyFieldColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTabOrderNull()
            {
                return this.IsNull(this.tableChildViews.TabOrderColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTabOrderNull()
            {
                this[this.tableChildViews.TabOrderColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChildTableNameNull()
            {
                return this.IsNull(this.tableChildViews.ChildTableNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChildTableNameNull()
            {
                this[this.tableChildViews.ChildTableNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChildUserNameNull()
            {
                return this.IsNull(this.tableChildViews.ChildUserNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChildUserNameNull()
            {
                this[this.tableChildViews.ChildUserNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsViewOrderNull()
            {
                return this.IsNull(this.tableChildViews.ViewOrderColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetViewOrderNull()
            {
                this[this.tableChildViews.ViewOrderColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SLTableFileRoomOrderRowChangeEvent : global::System.EventArgs
        {

            private SLTableFileRoomOrderRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTableFileRoomOrderRowChangeEvent(SLTableFileRoomOrderRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTableFileRoomOrderRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RelationShipsRowChangeEvent : global::System.EventArgs
        {

            private RelationShipsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationShipsRowChangeEvent(RelationShipsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationShipsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TabsetsRowChangeEvent : global::System.EventArgs
        {

            private TabsetsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabsetsRowChangeEvent(TabsetsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabsetsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ScanListRowChangeEvent : global::System.EventArgs
        {

            private ScanListRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScanListRowChangeEvent(ScanListRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScanListRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SLRequestorRowChangeEvent : global::System.EventArgs
        {

            private SLRequestorRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLRequestorRowChangeEvent(SLRequestorRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLRequestorRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FolderStatusRowChangeEvent : global::System.EventArgs
        {

            private FolderStatusRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderStatusRowChangeEvent(FolderStatusRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderStatusRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TrackingRowChangeEvent : global::System.EventArgs
        {

            private TrackingRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingRowChangeEvent(TrackingRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TablesRowChangeEvent : global::System.EventArgs
        {

            private TablesRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRowChangeEvent(TablesRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TabletabsRowChangeEvent : global::System.EventArgs
        {

            private TabletabsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabletabsRowChangeEvent(TabletabsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabletabsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ViewColumnsRowChangeEvent : global::System.EventArgs
        {

            private ViewColumnsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRowChangeEvent(ViewColumnsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StatusHistoryRowChangeEvent : global::System.EventArgs
        {

            private StatusHistoryRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusHistoryRowChangeEvent(StatusHistoryRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusHistoryRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LinkScriptHeaderRowChangeEvent : global::System.EventArgs
        {

            private LinkScriptHeaderRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptHeaderRowChangeEvent(LinkScriptHeaderRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptHeaderRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LinkScriptRowChangeEvent : global::System.EventArgs
        {

            private LinkScriptRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptRowChangeEvent(LinkScriptRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TrackingHistoryRowChangeEvent : global::System.EventArgs
        {

            private TrackingHistoryRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingHistoryRowChangeEvent(TrackingHistoryRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingHistoryRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ViewsRowChangeEvent : global::System.EventArgs
        {

            private ViewsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRowChangeEvent(ViewsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SLTextSearchItemsRowChangeEvent : global::System.EventArgs
        {

            private SLTextSearchItemsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTextSearchItemsRowChangeEvent(SLTextSearchItemsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTextSearchItemsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PrimaryKeyRowChangeEvent : global::System.EventArgs
        {

            private PrimaryKeyRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrimaryKeyRowChangeEvent(PrimaryKeyRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrimaryKeyRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SystemRowChangeEvent : global::System.EventArgs
        {

            private SystemRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemRowChangeEvent(SystemRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs
        {

            private DataTable1Row eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EmployeesRowChangeEvent : global::System.EventArgs
        {

            private EmployeesRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeesRowChangeEvent(EmployeesRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ChildViewsRowChangeEvent : global::System.EventArgs
        {

            private ChildViewsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChildViewsRowChangeEvent(ChildViewsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChildViewsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
    namespace RecordsManageTableAdapters
    {


        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class SLTableFileRoomOrderTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTableFileRoomOrderTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "SLTableFileRoomOrder";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("TableName", "TableName");
                tableMapping.ColumnMappings.Add("FieldName", "FieldName");
                tableMapping.ColumnMappings.Add("StartFromFront", "StartFromFront");
                tableMapping.ColumnMappings.Add("StartingPosition", "StartingPosition");
                tableMapping.ColumnMappings.Add("NumberofCharacters", "NumberofCharacters");
                tableMapping.ColumnMappings.Add("FieldFormat", "FieldFormat");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SLTableFileRoomOrder] WHERE (([Id] = @Original_Id) AND ((@IsNull_TableName = 1 AND [TableName] IS NULL) OR ([TableName] = @Original_TableName)) AND ((@IsNull_FieldName = 1 AND [FieldName] IS NULL) OR ([FieldName] = @Original_FieldName)) AND ((@IsNull_StartFromFront = 1 AND [StartFromFront] IS NULL) OR ([StartFromFront] = @Original_StartFromFront)) AND ((@IsNull_StartingPosition = 1 AND [StartingPosition] IS NULL) OR ([StartingPosition] = @Original_StartingPosition)) AND ((@IsNull_NumberofCharacters = 1 AND [NumberofCharacters] IS NULL) OR ([NumberofCharacters] = @Original_NumberofCharacters)) AND ((@IsNull_FieldFormat = 1 AND [FieldFormat] IS NULL) OR ([FieldFormat] = @Original_FieldFormat)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FieldName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StartFromFront", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartFromFront", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartFromFront", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartFromFront", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StartingPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartingPosition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartingPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartingPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumberofCharacters", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberofCharacters", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberofCharacters", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberofCharacters", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FieldFormat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldFormat", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FieldFormat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldFormat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = @"UPDATE [SLTableFileRoomOrder] SET [TableName] = @TableName, [FieldName] = @FieldName, [StartFromFront] = @StartFromFront, [StartingPosition] = @StartingPosition, [NumberofCharacters] = @NumberofCharacters, [FieldFormat] = @FieldFormat WHERE (([Id] = @Original_Id) AND ((@IsNull_TableName = 1 AND [TableName] IS NULL) OR ([TableName] = @Original_TableName)) AND ((@IsNull_FieldName = 1 AND [FieldName] IS NULL) OR ([FieldName] = @Original_FieldName)) AND ((@IsNull_StartFromFront = 1 AND [StartFromFront] IS NULL) OR ([StartFromFront] = @Original_StartFromFront)) AND ((@IsNull_StartingPosition = 1 AND [StartingPosition] IS NULL) OR ([StartingPosition] = @Original_StartingPosition)) AND ((@IsNull_NumberofCharacters = 1 AND [NumberofCharacters] IS NULL) OR ([NumberofCharacters] = @Original_NumberofCharacters)) AND ((@IsNull_FieldFormat = 1 AND [FieldFormat] IS NULL) OR ([FieldFormat] = @Original_FieldFormat)));
SELECT Id, TableName, FieldName, StartFromFront, StartingPosition, NumberofCharacters, FieldFormat FROM SLTableFileRoomOrder WHERE (Id = @Id)";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartFromFront", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartFromFront", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartingPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartingPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberofCharacters", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberofCharacters", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FieldFormat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldFormat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FieldName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StartFromFront", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartFromFront", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartFromFront", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartFromFront", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StartingPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartingPosition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartingPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartingPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumberofCharacters", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberofCharacters", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberofCharacters", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberofCharacters", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FieldFormat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldFormat", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FieldFormat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldFormat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT        Id, TableName, FieldName, StartFromFront, StartingPosition, Numbero" +
                    "fCharacters, FieldFormat\r\nFROM            SLTableFileRoomOrder\r\nWHERE        (Ta" +
                    "bleName = @tableName)";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tableName", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
            public virtual int Fill(RecordsManage.SLTableFileRoomOrderDataTable dataTable, string tableName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((tableName == null))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(tableName));
                }
                if ((this.ClearBeforeFill == true))
                {
                    dataTable.Clear();
                }
                int returnValue = this.Adapter.Fill(dataTable);
                return returnValue;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.SLTableFileRoomOrderDataTable GetData(string tableName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((tableName == null))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(tableName));
                }
                RecordsManage.SLTableFileRoomOrderDataTable dataTable = new RecordsManage.SLTableFileRoomOrderDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.SLTableFileRoomOrderDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "SLTableFileRoomOrder");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(int Original_Id, string Original_TableName, string Original_FieldName, global::System.Nullable<bool> Original_StartFromFront, global::System.Nullable<int> Original_StartingPosition, global::System.Nullable<int> Original_NumberofCharacters, string Original_FieldFormat)
            {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
                if ((Original_TableName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TableName));
                }
                if ((Original_FieldName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_FieldName));
                }
                if ((Original_StartFromFront.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_StartFromFront.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((Original_StartingPosition.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_StartingPosition.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                if ((Original_NumberofCharacters.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_NumberofCharacters.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                if ((Original_FieldFormat == null))
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_FieldFormat));
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string TableName, string FieldName, global::System.Nullable<bool> StartFromFront, global::System.Nullable<int> StartingPosition, global::System.Nullable<int> NumberofCharacters, string FieldFormat, int Original_Id, string Original_TableName, string Original_FieldName, global::System.Nullable<bool> Original_StartFromFront, global::System.Nullable<int> Original_StartingPosition, global::System.Nullable<int> Original_NumberofCharacters, string Original_FieldFormat, int Id)
            {
                if ((TableName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TableName));
                }
                if ((FieldName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FieldName));
                }
                if ((StartFromFront.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(StartFromFront.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                if ((StartingPosition.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(StartingPosition.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                if ((NumberofCharacters.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(NumberofCharacters.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                if ((FieldFormat == null))
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FieldFormat));
                }
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Id));
                if ((Original_TableName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_TableName));
                }
                if ((Original_FieldName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_FieldName));
                }
                if ((Original_StartFromFront.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Original_StartFromFront.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                if ((Original_StartingPosition.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_StartingPosition.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                if ((Original_NumberofCharacters.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_NumberofCharacters.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
                }
                if ((Original_FieldFormat == null))
                {
                    this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_FieldFormat));
                }
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Id));
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string TableName, string FieldName, global::System.Nullable<bool> StartFromFront, global::System.Nullable<int> StartingPosition, global::System.Nullable<int> NumberofCharacters, string FieldFormat, int Original_Id, string Original_TableName, string Original_FieldName, global::System.Nullable<bool> Original_StartFromFront, global::System.Nullable<int> Original_StartingPosition, global::System.Nullable<int> Original_NumberofCharacters, string Original_FieldFormat)
            {
                return this.Update(TableName, FieldName, StartFromFront, StartingPosition, NumberofCharacters, FieldFormat, Original_Id, Original_TableName, Original_FieldName, Original_StartFromFront, Original_StartingPosition, Original_NumberofCharacters, Original_FieldFormat, Original_Id);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class RelationShipsTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationShipsTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "RelationShips";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("UpperTableName", "UpperTableName");
                tableMapping.ColumnMappings.Add("UpperTableFieldName", "UpperTableFieldName");
                tableMapping.ColumnMappings.Add("LowerTableName", "LowerTableName");
                tableMapping.ColumnMappings.Add("LowerTableFieldName", "LowerTableFieldName");
                tableMapping.ColumnMappings.Add("TabOrder", "TabOrder");
                tableMapping.ColumnMappings.Add("IdTypes", "IdTypes");
                tableMapping.ColumnMappings.Add("DrillDownViewGroup", "DrillDownViewGroup");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[RelationShips] WHERE (([Id] = @Original_Id) AND ((@IsNull_UpperTableName = 1 AND [UpperTableName] IS NULL) OR ([UpperTableName] = @Original_UpperTableName)) AND ((@IsNull_UpperTableFieldName = 1 AND [UpperTableFieldName] IS NULL) OR ([UpperTableFieldName] = @Original_UpperTableFieldName)) AND ((@IsNull_LowerTableName = 1 AND [LowerTableName] IS NULL) OR ([LowerTableName] = @Original_LowerTableName)) AND ((@IsNull_LowerTableFieldName = 1 AND [LowerTableFieldName] IS NULL) OR ([LowerTableFieldName] = @Original_LowerTableFieldName)) AND ((@IsNull_TabOrder = 1 AND [TabOrder] IS NULL) OR ([TabOrder] = @Original_TabOrder)) AND ((@IsNull_IdTypes = 1 AND [IdTypes] IS NULL) OR ([IdTypes] = @Original_IdTypes)) AND ((@IsNull_DrillDownViewGroup = 1 AND [DrillDownViewGroup] IS NULL) OR ([DrillDownViewGroup] = @Original_DrillDownViewGroup)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpperTableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpperTableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpperTableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpperTableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpperTableFieldName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpperTableFieldName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpperTableFieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpperTableFieldName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LowerTableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LowerTableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LowerTableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LowerTableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LowerTableFieldName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LowerTableFieldName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LowerTableFieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LowerTableFieldName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabOrder", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IdTypes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdTypes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdTypes", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdTypes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DrillDownViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrillDownViewGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DrillDownViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrillDownViewGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[RelationShips] SET [UpperTableName] = @UpperTableName, [UpperTableFieldName] = @UpperTableFieldName, [LowerTableName] = @LowerTableName, [LowerTableFieldName] = @LowerTableFieldName, [TabOrder] = @TabOrder, [IdTypes] = @IdTypes, [DrillDownViewGroup] = @DrillDownViewGroup WHERE (([Id] = @Original_Id) AND ((@IsNull_UpperTableName = 1 AND [UpperTableName] IS NULL) OR ([UpperTableName] = @Original_UpperTableName)) AND ((@IsNull_UpperTableFieldName = 1 AND [UpperTableFieldName] IS NULL) OR ([UpperTableFieldName] = @Original_UpperTableFieldName)) AND ((@IsNull_LowerTableName = 1 AND [LowerTableName] IS NULL) OR ([LowerTableName] = @Original_LowerTableName)) AND ((@IsNull_LowerTableFieldName = 1 AND [LowerTableFieldName] IS NULL) OR ([LowerTableFieldName] = @Original_LowerTableFieldName)) AND ((@IsNull_TabOrder = 1 AND [TabOrder] IS NULL) OR ([TabOrder] = @Original_TabOrder)) AND ((@IsNull_IdTypes = 1 AND [IdTypes] IS NULL) OR ([IdTypes] = @Original_IdTypes)) AND ((@IsNull_DrillDownViewGroup = 1 AND [DrillDownViewGroup] IS NULL) OR ([DrillDownViewGroup] = @Original_DrillDownViewGroup)));
SELECT Id, UpperTableName, UpperTableFieldName, LowerTableName, LowerTableFieldName, TabOrder, IdTypes, DrillDownViewGroup FROM RelationShips WHERE (Id = @Id)";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpperTableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpperTableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpperTableFieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpperTableFieldName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LowerTableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LowerTableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LowerTableFieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LowerTableFieldName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabOrder", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdTypes", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdTypes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrillDownViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrillDownViewGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpperTableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpperTableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpperTableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpperTableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpperTableFieldName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpperTableFieldName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpperTableFieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpperTableFieldName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LowerTableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LowerTableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LowerTableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LowerTableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LowerTableFieldName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LowerTableFieldName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LowerTableFieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LowerTableFieldName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabOrder", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IdTypes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdTypes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdTypes", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdTypes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DrillDownViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrillDownViewGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DrillDownViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrillDownViewGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT Id, UpperTableName, UpperTableFieldName, LowerTableName, LowerTableFieldNa" +
                    "me, TabOrder, IdTypes, DrillDownViewGroup FROM dbo.RelationShips";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
            public virtual int Fill(RecordsManage.RelationShipsDataTable dataTable)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((this.ClearBeforeFill == true))
                {
                    dataTable.Clear();
                }
                int returnValue = this.Adapter.Fill(dataTable);
                return returnValue;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.RelationShipsDataTable GetData()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.RelationShipsDataTable dataTable = new RecordsManage.RelationShipsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.RelationShipsDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "RelationShips");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(int Original_Id, string Original_UpperTableName, string Original_UpperTableFieldName, string Original_LowerTableName, string Original_LowerTableFieldName, global::System.Nullable<short> Original_TabOrder, global::System.Nullable<short> Original_IdTypes, global::System.Nullable<int> Original_DrillDownViewGroup)
            {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
                if ((Original_UpperTableName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_UpperTableName));
                }
                if ((Original_UpperTableFieldName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_UpperTableFieldName));
                }
                if ((Original_LowerTableName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_LowerTableName));
                }
                if ((Original_LowerTableFieldName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_LowerTableFieldName));
                }
                if ((Original_TabOrder.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[10].Value = ((short)(Original_TabOrder.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                if ((Original_IdTypes.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[12].Value = ((short)(Original_IdTypes.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                if ((Original_DrillDownViewGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_DrillDownViewGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(
                        string UpperTableName,
                        string UpperTableFieldName,
                        string LowerTableName,
                        string LowerTableFieldName,
                        global::System.Nullable<short> TabOrder,
                        global::System.Nullable<short> IdTypes,
                        global::System.Nullable<int> DrillDownViewGroup,
                        int Original_Id,
                        string Original_UpperTableName,
                        string Original_UpperTableFieldName,
                        string Original_LowerTableName,
                        string Original_LowerTableFieldName,
                        global::System.Nullable<short> Original_TabOrder,
                        global::System.Nullable<short> Original_IdTypes,
                        global::System.Nullable<int> Original_DrillDownViewGroup,
                        int Id)
            {
                if ((UpperTableName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(UpperTableName));
                }
                if ((UpperTableFieldName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(UpperTableFieldName));
                }
                if ((LowerTableName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LowerTableName));
                }
                if ((LowerTableFieldName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LowerTableFieldName));
                }
                if ((TabOrder.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(TabOrder.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                if ((IdTypes.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(IdTypes.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
                }
                if ((DrillDownViewGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(DrillDownViewGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Id));
                if ((Original_UpperTableName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_UpperTableName));
                }
                if ((Original_UpperTableFieldName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_UpperTableFieldName));
                }
                if ((Original_LowerTableName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_LowerTableName));
                }
                if ((Original_LowerTableFieldName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_LowerTableFieldName));
                }
                if ((Original_TabOrder.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[17].Value = ((short)(Original_TabOrder.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
                }
                if ((Original_IdTypes.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[19].Value = ((short)(Original_IdTypes.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
                }
                if ((Original_DrillDownViewGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_DrillDownViewGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
                }
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Id));
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string UpperTableName, string UpperTableFieldName, string LowerTableName, string LowerTableFieldName, global::System.Nullable<short> TabOrder, global::System.Nullable<short> IdTypes, global::System.Nullable<int> DrillDownViewGroup, int Original_Id, string Original_UpperTableName, string Original_UpperTableFieldName, string Original_LowerTableName, string Original_LowerTableFieldName, global::System.Nullable<short> Original_TabOrder, global::System.Nullable<short> Original_IdTypes, global::System.Nullable<int> Original_DrillDownViewGroup)
            {
                return this.Update(UpperTableName, UpperTableFieldName, LowerTableName, LowerTableFieldName, TabOrder, IdTypes, DrillDownViewGroup, Original_Id, Original_UpperTableName, Original_UpperTableFieldName, Original_LowerTableName, Original_LowerTableFieldName, Original_TabOrder, Original_IdTypes, Original_DrillDownViewGroup, Original_Id);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class TabsetsTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabsetsTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "Tabsets";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("UserName", "UserName");
                tableMapping.ColumnMappings.Add("TabFontName", "TabFontName");
                tableMapping.ColumnMappings.Add("TabFontSize", "TabFontSize");
                tableMapping.ColumnMappings.Add("TabFontBold", "TabFontBold");
                tableMapping.ColumnMappings.Add("TabMaxWidth", "TabMaxWidth");
                tableMapping.ColumnMappings.Add("TabCutSize", "TabCutSize");
                tableMapping.ColumnMappings.Add("TabHeight", "TabHeight");
                tableMapping.ColumnMappings.Add("TabRowOffset", "TabRowOffset");
                tableMapping.ColumnMappings.Add("TabShape", "TabShape");
                tableMapping.ColumnMappings.Add("ViewGroup", "ViewGroup");
                tableMapping.ColumnMappings.Add("StartupTabset", "StartupTabset");
                tableMapping.ColumnMappings.Add("Picture", "Picture");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Tabsets] WHERE (([Id] = @Original_Id) AND ((@IsNull_UserName = 1 AND [UserName] IS NULL) OR ([UserName] = @Original_UserName)) AND ((@IsNull_TabFontName = 1 AND [TabFontName] IS NULL) OR ([TabFontName] = @Original_TabFontName)) AND ((@IsNull_TabFontSize = 1 AND [TabFontSize] IS NULL) OR ([TabFontSize] = @Original_TabFontSize)) AND ((@IsNull_TabFontBold = 1 AND [TabFontBold] IS NULL) OR ([TabFontBold] = @Original_TabFontBold)) AND ((@IsNull_TabMaxWidth = 1 AND [TabMaxWidth] IS NULL) OR ([TabMaxWidth] = @Original_TabMaxWidth)) AND ((@IsNull_TabCutSize = 1 AND [TabCutSize] IS NULL) OR ([TabCutSize] = @Original_TabCutSize)) AND ((@IsNull_TabHeight = 1 AND [TabHeight] IS NULL) OR ([TabHeight] = @Original_TabHeight)) AND ((@IsNull_TabRowOffset = 1 AND [TabRowOffset] IS NULL) OR ([TabRowOffset] = @Original_TabRowOffset)) AND ((@IsNull_TabShape = 1 AND [TabShape] IS NULL) OR ([TabShape] = @Original_TabShape)) AND ((@IsNull_ViewGroup = 1 AND [ViewGroup] IS NULL) OR ([ViewGroup] = @Original_ViewGroup)) AND ((@IsNull_StartupTabset = 1 AND [StartupTabset] IS NULL) OR ([StartupTabset] = @Original_StartupTabset)) AND ((@IsNull_Picture = 1 AND [Picture] IS NULL) OR ([Picture] = @Original_Picture)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontBold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontBold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontBold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabMaxWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabMaxWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabMaxWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabMaxWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabCutSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabCutSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabCutSize", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabCutSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabHeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabHeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabHeight", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabRowOffset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabRowOffset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabRowOffset", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabRowOffset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabShape", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabShape", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabShape", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabShape", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StartupTabset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartupTabset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartupTabset", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartupTabset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Picture", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Picture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Tabsets] SET [Id] = @Id, [UserName] = @UserName, [TabFontName] = @T" +
                    "abFontName, [TabFontSize] = @TabFontSize, [TabFontBold] = @TabFontBold, [TabMaxW" +
                    "idth] = @TabMaxWidth, [TabCutSize] = @TabCutSize, [TabHeight] = @TabHeight, [Tab" +
                    "RowOffset] = @TabRowOffset, [TabShape] = @TabShape, [ViewGroup] = @ViewGroup, [S" +
                    "tartupTabset] = @StartupTabset, [Picture] = @Picture WHERE (([Id] = @Original_Id" +
                    ") AND ((@IsNull_UserName = 1 AND [UserName] IS NULL) OR ([UserName] = @Original_" +
                    "UserName)) AND ((@IsNull_TabFontName = 1 AND [TabFontName] IS NULL) OR ([TabFont" +
                    "Name] = @Original_TabFontName)) AND ((@IsNull_TabFontSize = 1 AND [TabFontSize] " +
                    "IS NULL) OR ([TabFontSize] = @Original_TabFontSize)) AND ((@IsNull_TabFontBold =" +
                    " 1 AND [TabFontBold] IS NULL) OR ([TabFontBold] = @Original_TabFontBold)) AND ((" +
                    "@IsNull_TabMaxWidth = 1 AND [TabMaxWidth] IS NULL) OR ([TabMaxWidth] = @Original" +
                    "_TabMaxWidth)) AND ((@IsNull_TabCutSize = 1 AND [TabCutSize] IS NULL) OR ([TabCu" +
                    "tSize] = @Original_TabCutSize)) AND ((@IsNull_TabHeight = 1 AND [TabHeight] IS N" +
                    "ULL) OR ([TabHeight] = @Original_TabHeight)) AND ((@IsNull_TabRowOffset = 1 AND " +
                    "[TabRowOffset] IS NULL) OR ([TabRowOffset] = @Original_TabRowOffset)) AND ((@IsN" +
                    "ull_TabShape = 1 AND [TabShape] IS NULL) OR ([TabShape] = @Original_TabShape)) A" +
                    "ND ((@IsNull_ViewGroup = 1 AND [ViewGroup] IS NULL) OR ([ViewGroup] = @Original_" +
                    "ViewGroup)) AND ((@IsNull_StartupTabset = 1 AND [StartupTabset] IS NULL) OR ([St" +
                    "artupTabset] = @Original_StartupTabset)) AND ((@IsNull_Picture = 1 AND [Picture]" +
                    " IS NULL) OR ([Picture] = @Original_Picture)));\r\nSELECT Id, UserName, TabFontNam" +
                    "e, TabFontSize, TabFontBold, TabMaxWidth, TabCutSize, TabHeight, TabRowOffset, T" +
                    "abShape, ViewGroup, StartupTabset, Picture FROM TabSets WHERE (Id = @Id)";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontBold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabMaxWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabMaxWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabCutSize", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabCutSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabHeight", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabRowOffset", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabRowOffset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabShape", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabShape", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartupTabset", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartupTabset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Picture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontBold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontBold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontBold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabMaxWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabMaxWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabMaxWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabMaxWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabCutSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabCutSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabCutSize", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabCutSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabHeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabHeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabHeight", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabRowOffset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabRowOffset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabRowOffset", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabRowOffset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabShape", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabShape", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabShape", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabShape", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StartupTabset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartupTabset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartupTabset", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartupTabset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Picture", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Picture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT Id, UserName, TabFontName, TabFontSize, TabFontBold, TabMaxWidth, TabCutSi" +
                    "ze, TabHeight, TabRowOffset, TabShape, ViewGroup, StartupTabset, Picture FROM db" +
                    "o.Tabsets";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = "SELECT Id, Picture, StartupTabset, TabCutSize, TabFontBold, TabFontName, TabFontS" +
                    "ize, TabHeight, TabMaxWidth, TabRowOffset, TabShape, UserName, ViewGroup FROM Ta" +
                    "bsets ORDER BY Id";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
            public virtual int Fill(RecordsManage.TabsetsDataTable dataTable)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((this.ClearBeforeFill == true))
                {
                    dataTable.Clear();
                }
                int returnValue = this.Adapter.Fill(dataTable);
                return returnValue;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.TabsetsDataTable GetData()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.TabsetsDataTable dataTable = new RecordsManage.TabsetsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.TabsetsDataTable GetWorkGroups()
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                RecordsManage.TabsetsDataTable dataTable = new RecordsManage.TabsetsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.TabsetsDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "Tabsets");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(short Original_Id, string Original_UserName, string Original_TabFontName, global::System.Nullable<float> Original_TabFontSize, global::System.Nullable<bool> Original_TabFontBold, global::System.Nullable<short> Original_TabMaxWidth, global::System.Nullable<short> Original_TabCutSize, global::System.Nullable<short> Original_TabHeight, global::System.Nullable<short> Original_TabRowOffset, global::System.Nullable<short> Original_TabShape, global::System.Nullable<int> Original_ViewGroup, global::System.Nullable<bool> Original_StartupTabset, string Original_Picture)
            {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_Id));
                if ((Original_UserName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_UserName));
                }
                if ((Original_TabFontName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TabFontName));
                }
                if ((Original_TabFontSize.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((float)(Original_TabFontSize.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((Original_TabFontBold.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_TabFontBold.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                if ((Original_TabMaxWidth.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[10].Value = ((short)(Original_TabMaxWidth.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                if ((Original_TabCutSize.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[12].Value = ((short)(Original_TabCutSize.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                if ((Original_TabHeight.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[14].Value = ((short)(Original_TabHeight.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                if ((Original_TabRowOffset.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[16].Value = ((short)(Original_TabRowOffset.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
                }
                if ((Original_TabShape.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[18].Value = ((short)(Original_TabShape.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
                }
                if ((Original_ViewGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_ViewGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
                }
                if ((Original_StartupTabset.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_StartupTabset.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
                }
                if ((Original_Picture == null))
                {
                    this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Picture));
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(
                        short Id,
                        string UserName,
                        string TabFontName,
                        global::System.Nullable<float> TabFontSize,
                        global::System.Nullable<bool> TabFontBold,
                        global::System.Nullable<short> TabMaxWidth,
                        global::System.Nullable<short> TabCutSize,
                        global::System.Nullable<short> TabHeight,
                        global::System.Nullable<short> TabRowOffset,
                        global::System.Nullable<short> TabShape,
                        global::System.Nullable<int> ViewGroup,
                        global::System.Nullable<bool> StartupTabset,
                        string Picture,
                        short Original_Id,
                        string Original_UserName,
                        string Original_TabFontName,
                        global::System.Nullable<float> Original_TabFontSize,
                        global::System.Nullable<bool> Original_TabFontBold,
                        global::System.Nullable<short> Original_TabMaxWidth,
                        global::System.Nullable<short> Original_TabCutSize,
                        global::System.Nullable<short> Original_TabHeight,
                        global::System.Nullable<short> Original_TabRowOffset,
                        global::System.Nullable<short> Original_TabShape,
                        global::System.Nullable<int> Original_ViewGroup,
                        global::System.Nullable<bool> Original_StartupTabset,
                        string Original_Picture)
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(Id));
                if ((UserName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(UserName));
                }
                if ((TabFontName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TabFontName));
                }
                if ((TabFontSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((float)(TabFontSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                if ((TabFontBold.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(TabFontBold.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                if ((TabMaxWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(TabMaxWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
                }
                if ((TabCutSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(TabCutSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((TabHeight.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(TabHeight.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
                }
                if ((TabRowOffset.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(TabRowOffset.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                if ((TabShape.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(TabShape.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
                }
                if ((ViewGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ViewGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                if ((StartupTabset.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(StartupTabset.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
                }
                if ((Picture == null))
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Picture));
                }
                this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(Original_Id));
                if ((Original_UserName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_UserName));
                }
                if ((Original_TabFontName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_TabFontName));
                }
                if ((Original_TabFontSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[19].Value = ((float)(Original_TabFontSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
                }
                if ((Original_TabFontBold.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(Original_TabFontBold.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
                }
                if ((Original_TabMaxWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[23].Value = ((short)(Original_TabMaxWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
                }
                if ((Original_TabCutSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[25].Value = ((short)(Original_TabCutSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
                }
                if ((Original_TabHeight.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[27].Value = ((short)(Original_TabHeight.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
                }
                if ((Original_TabRowOffset.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[29].Value = ((short)(Original_TabRowOffset.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
                }
                if ((Original_TabShape.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[31].Value = ((short)(Original_TabShape.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
                }
                if ((Original_ViewGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_ViewGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
                }
                if ((Original_StartupTabset.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Original_StartupTabset.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
                }
                if ((Original_Picture == null))
                {
                    this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Picture));
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(
                        string UserName,
                        string TabFontName,
                        global::System.Nullable<float> TabFontSize,
                        global::System.Nullable<bool> TabFontBold,
                        global::System.Nullable<short> TabMaxWidth,
                        global::System.Nullable<short> TabCutSize,
                        global::System.Nullable<short> TabHeight,
                        global::System.Nullable<short> TabRowOffset,
                        global::System.Nullable<short> TabShape,
                        global::System.Nullable<int> ViewGroup,
                        global::System.Nullable<bool> StartupTabset,
                        string Picture,
                        short Original_Id,
                        string Original_UserName,
                        string Original_TabFontName,
                        global::System.Nullable<float> Original_TabFontSize,
                        global::System.Nullable<bool> Original_TabFontBold,
                        global::System.Nullable<short> Original_TabMaxWidth,
                        global::System.Nullable<short> Original_TabCutSize,
                        global::System.Nullable<short> Original_TabHeight,
                        global::System.Nullable<short> Original_TabRowOffset,
                        global::System.Nullable<short> Original_TabShape,
                        global::System.Nullable<int> Original_ViewGroup,
                        global::System.Nullable<bool> Original_StartupTabset,
                        string Original_Picture)
            {
                return this.Update(Original_Id, UserName, TabFontName, TabFontSize, TabFontBold, TabMaxWidth, TabCutSize, TabHeight, TabRowOffset, TabShape, ViewGroup, StartupTabset, Picture, Original_Id, Original_UserName, Original_TabFontName, Original_TabFontSize, Original_TabFontBold, Original_TabMaxWidth, Original_TabCutSize, Original_TabHeight, Original_TabRowOffset, Original_TabShape, Original_ViewGroup, Original_StartupTabset, Original_Picture);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class ScanListTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScanListTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "ScanList";
                tableMapping.ColumnMappings.Add("TableName", "TableName");
                tableMapping.ColumnMappings.Add("FieldName", "FieldName");
                tableMapping.ColumnMappings.Add("FieldType", "FieldType");
                tableMapping.ColumnMappings.Add("IdStripChars", "IdStripChars");
                tableMapping.ColumnMappings.Add("IdMask", "IdMask");
                this._adapter.TableMappings.Add(tableMapping);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT     TableName, FieldName, FieldType, IdStripChars, IdMask\r\nFROM         Sc" +
                    "anList\r\nORDER BY ScanOrder";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.ScanListDataTable GetData()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.ScanListDataTable dataTable = new RecordsManage.ScanListDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class SLRequestorTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLRequestorTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "SLRequestor";
                tableMapping.ColumnMappings.Add("SLPullListsId", "SLPullListsId");
                tableMapping.ColumnMappings.Add("Priority", "Priority");
                tableMapping.ColumnMappings.Add("DateRequested", "DateRequested");
                tableMapping.ColumnMappings.Add("DateRecieved", "DateRecieved");
                tableMapping.ColumnMappings.Add("Status", "Status");
                tableMapping.ColumnMappings.Add("Comments", "Comments");
                tableMapping.ColumnMappings.Add("PriorityOrder", "PriorityOrder");
                tableMapping.ColumnMappings.Add("TableId", "TableId");
                tableMapping.ColumnMappings.Add("DateNeeded", "DateNeeded");
                tableMapping.ColumnMappings.Add("EmployeeId", "EmployeeId");
                tableMapping.ColumnMappings.Add("Instructions", "Instructions");
                tableMapping.ColumnMappings.Add("ExceptionComments", "ExceptionComments");
                tableMapping.ColumnMappings.Add("Id", "Id");
                this._adapter.TableMappings.Add(tableMapping);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = @"SELECT      SlRequestor.SLPullListsId,  SLRequestor.Priority, SLRequestor.DateRequested, ISNULL(SLRequestor.DateReceived, 0) AS DateRecieved, SLRequestor.Status,                          ISNULL(SLRequestor.ExceptionComments, '') AS Comments, SLRequestor.PriorityOrder, SLRequestor.TableId, SLRequestor.DateNeeded,                          SLRequestor.EmployeeId, SLRequestor.Instructions, SLRequestor.ExceptionComments, SLRequestor.Id FROM            SLRequestor INNER JOIN                         Views ON SLRequestor.TableName = Views.TableName WHERE        (Views.Id = @viewID) AND (SLRequestor.Status = 'New') AND (SLRequestor.TableId = @TableId) OR                         (Views.Id = @viewID) AND (SLRequestor.Status = 'In Process') AND (SLRequestor.TableId = @TableId) OR                         (Views.Id = @viewID) AND (SLRequestor.Status = 'WaitList') AND (SLRequestor.TableId = @TableId) OR                         (Views.Id = @viewID) AND (SLRequestor.Status = 'Exception') AND (SLRequestor.TableId = @TableId) OR                         (Views.Id = @viewID) AND (SLRequestor.Status = 'New Batch') AND (SLRequestor.TableId = @TableId) ORDER BY SLRequestor.Priority, SLRequestor.DateNeeded, SLRequestor.DateRequested";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@viewID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableId", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TableId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = @"INSERT INTO SLRequestor (TableName, TableId, EmployeeId, Priority, Status, Instructions, DateNeeded, PriorityOrder, RequestedBy, DateRequested, FileRoomOrder) VALUES (@tableName,@tableID,@employeeID,@Priority,@Status,@Instructions,@DateNeeded,@PriorityOrder,@RequestedBy, GETDATE(), @FileRoomOrder)";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tableName", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tableID", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TableId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@employeeID", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Priority", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "Priority", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Instructions", global::System.Data.SqlDbType.Text, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateNeeded", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DateNeeded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriorityOrder", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PriorityOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestedBy", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "RequestedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FileRoomOrder", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "FileRoomOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[2].Connection = this.Connection;
                this._commandCollection[2].CommandText = "UPDATE       SLRequestor\r\nSET                DateReceived = @DateReceived, Status" +
                    " = @Status\r\nWHERE        (TableName = @TableName) AND (EmployeeId = @EmployeeID)" +
                    " AND (TableId = @TableID)";
                this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateReceived", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DateReceived", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableName", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableID", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TableId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.SLRequestorDataTable GetActiveRequests(int viewID, string TableId)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(viewID));
                if ((TableId == null))
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = ((string)(TableId));
                }
                RecordsManage.SLRequestorDataTable dataTable = new RecordsManage.SLRequestorDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
            public virtual int InsertRequest(string tableName, string tableID, string employeeID, string Priority, string Status, string Instructions, global::System.Nullable<global::System.DateTime> DateNeeded, global::System.Nullable<int> PriorityOrder, string RequestedBy, string FileRoomOrder)
            {
                global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
                if ((tableName == null))
                {
                    command.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[0].Value = ((string)(tableName));
                }
                if ((tableID == null))
                {
                    command.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[1].Value = ((string)(tableID));
                }
                if ((employeeID == null))
                {
                    command.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[2].Value = ((string)(employeeID));
                }
                if ((Priority == null))
                {
                    command.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[3].Value = ((string)(Priority));
                }
                if ((Status == null))
                {
                    command.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[4].Value = ((string)(Status));
                }
                if ((Instructions == null))
                {
                    command.Parameters[5].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[5].Value = ((string)(Instructions));
                }
                if ((DateNeeded.HasValue == true))
                {
                    command.Parameters[6].Value = ((System.DateTime)(DateNeeded.Value));
                }
                else
                {
                    command.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((PriorityOrder.HasValue == true))
                {
                    command.Parameters[7].Value = ((int)(PriorityOrder.Value));
                }
                else
                {
                    command.Parameters[7].Value = global::System.DBNull.Value;
                }
                if ((RequestedBy == null))
                {
                    command.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[8].Value = ((string)(RequestedBy));
                }
                if ((FileRoomOrder == null))
                {
                    command.Parameters[9].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[9].Value = ((string)(FileRoomOrder));
                }
                global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
                if (((command.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    command.Connection.Open();
                }
                int returnValue;
                try
                {
                    returnValue = command.ExecuteNonQuery();
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        command.Connection.Close();
                    }
                }
                return returnValue;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
            public virtual int ProcessRequest(global::System.Nullable<global::System.DateTime> DateReceived, string Status, string TableName, string EmployeeID, string TableID)
            {
                global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
                if ((DateReceived.HasValue == true))
                {
                    command.Parameters[0].Value = ((System.DateTime)(DateReceived.Value));
                }
                else
                {
                    command.Parameters[0].Value = global::System.DBNull.Value;
                }
                if ((Status == null))
                {
                    command.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[1].Value = ((string)(Status));
                }
                if ((TableName == null))
                {
                    command.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[2].Value = ((string)(TableName));
                }
                if ((EmployeeID == null))
                {
                    command.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[3].Value = ((string)(EmployeeID));
                }
                if ((TableID == null))
                {
                    command.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[4].Value = ((string)(TableID));
                }
                global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
                if (((command.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    command.Connection.Open();
                }
                int returnValue;
                try
                {
                    returnValue = command.ExecuteNonQuery();
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        command.Connection.Close();
                    }
                }
                return returnValue;
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class FolderStatusTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderStatusTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "FolderStatus";
                tableMapping.ColumnMappings.Add("FolderStatusId", "FolderStatusId");
                tableMapping.ColumnMappings.Add("WorkflowStep", "WorkflowStep");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = "DELETE FROM [FolderStatus] WHERE (([FolderStatusId] = @Original_FolderStatusId) A" +
                    "ND ((@IsNull_WorkflowStep = 1 AND [WorkflowStep] IS NULL) OR ([WorkflowStep] = @" +
                    "Original_WorkflowStep)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FolderStatusId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FolderStatusId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WorkflowStep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkflowStep", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkflowStep", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkflowStep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = @"UPDATE [FolderStatus] SET [FolderStatusId] = @FolderStatusId, [WorkflowStep] = @WorkflowStep WHERE (([FolderStatusId] = @Original_FolderStatusId) AND ((@IsNull_WorkflowStep = 1 AND [WorkflowStep] IS NULL) OR ([WorkflowStep] = @Original_WorkflowStep)));
SELECT FolderStatusId, WorkflowStep FROM FolderStatus WHERE (FolderStatusId = @FolderStatusId) ORDER BY WorkflowStep";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FolderStatusId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FolderStatusId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkflowStep", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkflowStep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FolderStatusId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FolderStatusId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WorkflowStep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkflowStep", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkflowStep", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkflowStep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT     FolderStatusId, WorkflowStep\r\nFROM         FolderStatus\r\nORDER BY Work" +
                    "flowStep";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.FolderStatusDataTable GetFolderStatusList()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.FolderStatusDataTable dataTable = new RecordsManage.FolderStatusDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.FolderStatusDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "FolderStatus");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(string Original_FolderStatusId, global::System.Nullable<short> Original_WorkflowStep)
            {
                if ((Original_FolderStatusId == null))
                {
                    throw new global::System.ArgumentNullException("Original_FolderStatusId");
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_FolderStatusId));
                }
                if ((Original_WorkflowStep.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_WorkflowStep.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string FolderStatusId, global::System.Nullable<short> WorkflowStep, string Original_FolderStatusId, global::System.Nullable<short> Original_WorkflowStep)
            {
                if ((FolderStatusId == null))
                {
                    throw new global::System.ArgumentNullException("FolderStatusId");
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FolderStatusId));
                }
                if ((WorkflowStep.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(WorkflowStep.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                if ((Original_FolderStatusId == null))
                {
                    throw new global::System.ArgumentNullException("Original_FolderStatusId");
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_FolderStatusId));
                }
                if ((Original_WorkflowStep.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(Original_WorkflowStep.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(global::System.Nullable<short> WorkflowStep, string Original_FolderStatusId, global::System.Nullable<short> Original_WorkflowStep)
            {
                return this.Update(Original_FolderStatusId, WorkflowStep, Original_FolderStatusId, Original_WorkflowStep);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class TrackingTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "Tracking";
                tableMapping.ColumnMappings.Add("TrackedTable", "TrackedTable");
                tableMapping.ColumnMappings.Add("TrackedTableId", "TrackedTableId");
                tableMapping.ColumnMappings.Add("TrackedTableId1", "TrackedTableId1");
                tableMapping.ColumnMappings.Add("LocationsId", "LocationsId");
                tableMapping.ColumnMappings.Add("EmployeesId", "EmployeesId");
                tableMapping.ColumnMappings.Add("BoxesId", "BoxesId");
                tableMapping.ColumnMappings.Add("TransactionDateTime", "TransactionDateTime");
                tableMapping.ColumnMappings.Add("ProcessedDateTime", "ProcessedDateTime");
                tableMapping.ColumnMappings.Add("Out", "Out");
                tableMapping.ColumnMappings.Add("UserName", "UserName");
                tableMapping.ColumnMappings.Add("DateDue", "DateDue");
                tableMapping.ColumnMappings.Add("TrackingAdditionalField1", "TrackingAdditionalField1");
                tableMapping.ColumnMappings.Add("TrackingAdditionalField2", "TrackingAdditionalField2");
                this._adapter.TableMappings.Add(tableMapping);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[6];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = @"SELECT        TrackedTable, TrackedTableId, TrackedTableId, LocationsId, EmployeesId, BoxesId, TransactionDateTime, ProcessedDateTime, Out, 
                         UserName, DateDue, TrackingAdditionalField1, TrackingAdditionalField2
FROM            TrackingStatus
WHERE        (TrackedTableId = @TableID) AND (TrackedTable = @TableName)";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableID", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTableId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableName", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = @"SELECT        TrackedTable, TrackedTableId  AS TableID, TrackedTableId, LocationsId, EmployeesId, BoxesId, TransactionDateTime, UserName, 
                         TrackingAdditionalField1, TrackingAdditionalField2, 0 AS Out, '1/1/1900' AS DateDue, '1/1/1900' AS ProcessedDateTime, IsActualScan
FROM            TrackingHistory
WHERE        (TrackedTableId  = @TableID) AND (TrackedTable = @TableName)
ORDER BY TransactionDateTime DESC";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableID", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TableID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableName", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[2].Connection = this.Connection;
                this._commandCollection[2].CommandText = @"SELECT BoxesId, DateDue, EmployeesId, LocationsId, Out, ProcessedDateTime, TrackedTable, TrackedTableId, TrackingAdditionalField1, TrackingAdditionalField2, TransactionDateTime, UserName FROM TrackingStatus WHERE (Out <> 0) AND (DateDue < @FromDate) ORDER BY DateDue";
                this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DateDue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[3].Connection = this.Connection;
                this._commandCollection[3].CommandText = "INSERT INTO TrackingStatus\r\n                         (TrackedTableId, TrackedTabl" +
                    "e, TransactionDateTime )\r\nVALUES        (@TrackedTableID,@TrackedTable, GETDATE(" +
                    "));  \r\n\r\n";
                this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackedTableID", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTableId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackedTable", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[4].Connection = this.Connection;
                this._commandCollection[4].CommandText = "INSERT INTO TrackingHistory\r\n                      (TrackedTableId, TrackedTable," +
                    " TransactionDateTime, UserName)\r\nVALUES     (@TrackedTableID,@TrackedTable, GETD" +
                    "ATE(),@UserName);";
                this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackedTableID", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTableId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackedTable", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[5].Connection = this.Connection;
                this._commandCollection[5].CommandText = "SELECT COUNT(*) AS Expr1 FROM TrackingStatus WHERE (TrackedTable = @TableName) AN" +
                    "D (TrackedTableId  = @TableID)";
                this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableName", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableID", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTableId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.TrackingDataTable GetTrackingStatusObsolute(string TableID, string TableName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((TableID == null))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(TableID));
                }
                if ((TableName == null))
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = ((string)(TableName));
                }
                RecordsManage.TrackingDataTable dataTable = new RecordsManage.TrackingDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.TrackingDataTable GetTrackingHistory(string TableID, string TableName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                if ((TableID == null))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(TableID));
                }
                if ((TableName == null))
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = ((string)(TableName));
                }
                RecordsManage.TrackingDataTable dataTable = new RecordsManage.TrackingDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.TrackingDataTable GetTrackingPastDue(global::System.Nullable<global::System.DateTime> FromDate)
            {
                this.Adapter.SelectCommand = this.CommandCollection[2];
                if ((FromDate.HasValue == true))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                RecordsManage.TrackingDataTable dataTable = new RecordsManage.TrackingDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.TrackingDataTable TrackStatusExists(string TableName, string TableID)
            {
                this.Adapter.SelectCommand = this.CommandCollection[5];
                if ((TableName == null))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(TableName));
                }
                if ((TableID == null))
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = ((string)(TableID));
                }
                RecordsManage.TrackingDataTable dataTable = new RecordsManage.TrackingDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
            public virtual int InsertTrack(string TrackedTableID, string TrackedTable)
            {
                global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
                if ((TrackedTableID == null))
                {
                    command.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[0].Value = ((string)(TrackedTableID));
                }
                if ((TrackedTable == null))
                {
                    command.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[1].Value = ((string)(TrackedTable));
                }
                global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
                if (((command.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    command.Connection.Open();
                }
                int returnValue;
                try
                {
                    returnValue = command.ExecuteNonQuery();
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        command.Connection.Close();
                    }
                }
                return returnValue;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
            public virtual int InsertTrackHistory(string TrackedTableID, string TrackedTable, string UserName)
            {
                global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
                if ((TrackedTableID == null))
                {
                    command.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[0].Value = ((string)(TrackedTableID));
                }
                if ((TrackedTable == null))
                {
                    command.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[1].Value = ((string)(TrackedTable));
                }
                if ((UserName == null))
                {
                    command.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    command.Parameters[2].Value = ((string)(UserName));
                }
                global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
                if (((command.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    command.Connection.Open();
                }
                int returnValue;
                try
                {
                    returnValue = command.ExecuteNonQuery();
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        command.Connection.Close();
                    }
                }
                return returnValue;
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class TablesTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "Tables";
                tableMapping.ColumnMappings.Add("TableName", "TableName");
                tableMapping.ColumnMappings.Add("UserName", "UserName");
                tableMapping.ColumnMappings.Add("DBName", "DBName");
                tableMapping.ColumnMappings.Add("DatabaseAccessType", "DatabaseAccessType");
                tableMapping.ColumnMappings.Add("Attachments", "Attachments");
                tableMapping.ColumnMappings.Add("AliasImagingTableName", "AliasImagingTableName");
                tableMapping.ColumnMappings.Add("TrackingTable", "TrackingTable");
                tableMapping.ColumnMappings.Add("Trackable", "Trackable");
                tableMapping.ColumnMappings.Add("TrackingStatusFieldName", "TrackingStatusFieldName");
                tableMapping.ColumnMappings.Add("CounterFieldName", "CounterFieldName");
                tableMapping.ColumnMappings.Add("ViewGroup", "ViewGroup");
                tableMapping.ColumnMappings.Add("AddGroup", "AddGroup");
                tableMapping.ColumnMappings.Add("EditGroup", "EditGroup");
                tableMapping.ColumnMappings.Add("DelGroup", "DelGroup");
                tableMapping.ColumnMappings.Add("MgrGroup", "MgrGroup");
                tableMapping.ColumnMappings.Add("DeleteAttachedGroup", "DeleteAttachedGroup");
                tableMapping.ColumnMappings.Add("AttributesID", "AttributesID");
                tableMapping.ColumnMappings.Add("Picture", "Picture");
                tableMapping.ColumnMappings.Add("IdFieldName", "IdFieldName");
                tableMapping.ColumnMappings.Add("IdFieldName2", "IdFieldName2");
                tableMapping.ColumnMappings.Add("IdStripChars", "IdStripChars");
                tableMapping.ColumnMappings.Add("IdMask", "IdMask");
                tableMapping.ColumnMappings.Add("BarCodePrefix", "BarCodePrefix");
                tableMapping.ColumnMappings.Add("DescFieldPrefixOne", "DescFieldPrefixOne");
                tableMapping.ColumnMappings.Add("DescFieldNameOne", "DescFieldNameOne");
                tableMapping.ColumnMappings.Add("DescFieldPrefixTwo", "DescFieldPrefixTwo");
                tableMapping.ColumnMappings.Add("DescFieldNameTwo", "DescFieldNameTwo");
                tableMapping.ColumnMappings.Add("MaxRecsOnDropDown", "MaxRecsOnDropDown");
                tableMapping.ColumnMappings.Add("ADOServerCursor", "ADOServerCursor");
                tableMapping.ColumnMappings.Add("ADOQueryTimeout", "ADOQueryTimeout");
                tableMapping.ColumnMappings.Add("ADOCacheSize", "ADOCacheSize");
                tableMapping.ColumnMappings.Add("LSBeforeAddRecord", "LSBeforeAddRecord");
                tableMapping.ColumnMappings.Add("LSAfterAddRecord", "LSAfterAddRecord");
                tableMapping.ColumnMappings.Add("LSBeforeEditRecord", "LSBeforeEditRecord");
                tableMapping.ColumnMappings.Add("LSAfterEditRecord", "LSAfterEditRecord");
                tableMapping.ColumnMappings.Add("LSBeforeDeleteRecord", "LSBeforeDeleteRecord");
                tableMapping.ColumnMappings.Add("LSAfterDeleteRecord", "LSAfterDeleteRecord");
                tableMapping.ColumnMappings.Add("DefaultTrackingTable", "DefaultTrackingTable");
                tableMapping.ColumnMappings.Add("DefaultTrackingId", "DefaultTrackingId");
                tableMapping.ColumnMappings.Add("RetentionPeriodActive", "RetentionPeriodActive");
                tableMapping.ColumnMappings.Add("RetentionInactivityActive", "RetentionInactivityActive");
                tableMapping.ColumnMappings.Add("RetentionDateOpenedField", "RetentionDateOpenedField");
                tableMapping.ColumnMappings.Add("RetentionDateCreateField", "RetentionDateCreateField");
                tableMapping.ColumnMappings.Add("RetentionDateClosedField", "RetentionDateClosedField");
                tableMapping.ColumnMappings.Add("RetentionDateOtherField", "RetentionDateOtherField");
                tableMapping.ColumnMappings.Add("RetentionFieldName", "RetentionFieldName");
                tableMapping.ColumnMappings.Add("TrackingPhoneFieldName", "TrackingPhoneFieldName");
                tableMapping.ColumnMappings.Add("TrackingMailStopFieldName", "TrackingMailStopFieldName");
                tableMapping.ColumnMappings.Add("TrackingRequestableFieldName", "TrackingRequestableFieldName");
                tableMapping.ColumnMappings.Add("OperatorsIdField", "OperatorsIdField");
                tableMapping.ColumnMappings.Add("InactiveLocationField", "InactiveLocationField");
                tableMapping.ColumnMappings.Add("DefaultDescriptionField", "DefaultDescriptionField");
                tableMapping.ColumnMappings.Add("DefaultDescriptionText", "DefaultDescriptionText");
                tableMapping.ColumnMappings.Add("DefaultRetentionId", "DefaultRetentionId");
                tableMapping.ColumnMappings.Add("DescFieldPrefixOneTable", "DescFieldPrefixOneTable");
                tableMapping.ColumnMappings.Add("DescFieldPrefixOneWidth", "DescFieldPrefixOneWidth");
                tableMapping.ColumnMappings.Add("DescRelateTable1", "DescRelateTable1");
                tableMapping.ColumnMappings.Add("DescFieldPrefixTwoTable", "DescFieldPrefixTwoTable");
                tableMapping.ColumnMappings.Add("DescFieldPrefixTwoWidth", "DescFieldPrefixTwoWidth");
                tableMapping.ColumnMappings.Add("DescRelateTable2", "DescRelateTable2");
                tableMapping.ColumnMappings.Add("MaxRecordsAllowed", "MaxRecordsAllowed");
                tableMapping.ColumnMappings.Add("OutTable", "OutTable");
                tableMapping.ColumnMappings.Add("PCFilesEditGrp", "PCFilesEditGrp");
                tableMapping.ColumnMappings.Add("PCFilesNVerGrp", "PCFilesNVerGrp");
                tableMapping.ColumnMappings.Add("RestrictAddToTable", "RestrictAddToTable");
                tableMapping.ColumnMappings.Add("RuleDateField", "RuleDateField");
                tableMapping.ColumnMappings.Add("TrackingACTIVEFieldName", "TrackingACTIVEFieldName");
                tableMapping.ColumnMappings.Add("TrackingOUTFieldName", "TrackingOUTFieldName");
                tableMapping.ColumnMappings.Add("TrackingType", "TrackingType");
                tableMapping.ColumnMappings.Add("AuditConfidentialData", "AuditConfidentialData");
                tableMapping.ColumnMappings.Add("AuditUpdate", "AuditUpdate");
                tableMapping.ColumnMappings.Add("AllowBatchRequesting", "AllowBatchRequesting");
                tableMapping.ColumnMappings.Add("ParentFolderTableName", "ParentFolderTableName");
                tableMapping.ColumnMappings.Add("ParentDocTypeTableName", "ParentDocTypeTableName");
                tableMapping.ColumnMappings.Add("RecordManageMgmtType", "RecordManageMgmtType");
                tableMapping.ColumnMappings.Add("TrackingEmailFieldName", "TrackingEmailFieldName");
                tableMapping.ColumnMappings.Add("AutoAddNotification", "AutoAddNotification");
                tableMapping.ColumnMappings.Add("TrackingDueBackDaysFieldName", "TrackingDueBackDaysFieldName");
                tableMapping.ColumnMappings.Add("ImageCaptureFlagFieldName", "ImageCaptureFlagFieldName");
                tableMapping.ColumnMappings.Add("SignatureRequiredFieldName", "SignatureRequiredFieldName");
                tableMapping.ColumnMappings.Add("AuditAttachments", "AuditAttachments");
                tableMapping.ColumnMappings.Add("RetentionFinalDisposition", "RetentionFinalDisposition");
                tableMapping.ColumnMappings.Add("RetentionAssignmentMethod", "RetentionAssignmentMethod");
                tableMapping.ColumnMappings.Add("RetentionRelatedTable", "RetentionRelatedTable");
                tableMapping.ColumnMappings.Add("ArchiveLocationField", "ArchiveLocationField");
                tableMapping.ColumnMappings.Add("OfficialRecordHandling", "OfficialRecordHandling");
                tableMapping.ColumnMappings.Add("DescriptionFieldName", "DescriptionFieldName");
                this._adapter.TableMappings.Add(tableMapping);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT TableName, UserName, DBName, DatabaseAccessType, Attachments, AliasImaging" +
                    "TableName, TrackingTable, Trackable, TrackingStatusFieldName, CounterFieldName, " +
                    "ViewGroup, AddGroup, EditGroup, DelGroup, MgrGroup, DeleteAttachedGroup, Attribu" +
                    "tesID, Picture, IdFieldName, IdFieldName2, IdStripChars, IdMask, BarCodePrefix, " +
                    "DescFieldPrefixOne, DescFieldNameOne, DescFieldPrefixTwo, DescFieldNameTwo, MaxR" +
                    "ecsOnDropDown, ADOServerCursor, ADOQueryTimeout, ADOCacheSize, LSBeforeAddRecord" +
                    ", LSAfterAddRecord, LSBeforeEditRecord, LSAfterEditRecord, LSBeforeDeleteRecord," +
                    " LSAfterDeleteRecord, DefaultTrackingTable, DefaultTrackingId, RetentionPeriodAc" +
                    "tive, RetentionInactivityActive, RetentionDateOpenedField, RetentionDateCreateFi" +
                    "eld, RetentionDateClosedField, RetentionDateOtherField, RetentionFieldName, Trac" +
                    "kingPhoneFieldName, TrackingMailStopFieldName, TrackingRequestableFieldName, Ope" +
                    "ratorsIdField, InactiveLocationField, DefaultDescriptionField, DefaultDescriptio" +
                    "nText, DefaultRetentionId, DescFieldPrefixOneTable, DescFieldPrefixOneWidth, Des" +
                    "cRelateTable1, DescFieldPrefixTwoTable, DescFieldPrefixTwoWidth, DescRelateTable" +
                    "2, MaxRecordsAllowed, OutTable, PCFilesEditGrp, PCFilesNVerGrp, RestrictAddToTab" +
                    "le, RuleDateField, TrackingACTIVEFieldName, TrackingOUTFieldName, TrackingType, " +
                    "AuditConfidentialData, AuditUpdate, AllowBatchRequesting, ParentFolderTableName," +
                    " ParentDocTypeTableName, RecordManageMgmtType, TrackingEmailFieldName, AutoAddNo" +
                    "tification, TrackingDueBackDaysFieldName, ImageCaptureFlagFieldName, SignatureRe" +
                    "quiredFieldName, AuditAttachments, RetentionFinalDisposition, RetentionAssignmen" +
                    "tMethod, RetentionRelatedTable, ArchiveLocationField, OfficialRecordHandling, De" +
                    "scriptionFieldName FROM dbo.Tables";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = "SELECT ADOCacheSize, ADOQueryTimeout, ADOServerCursor, AddGroup, AliasImagingTabl" +
                    "eName, AllowBatchRequesting, ArchiveLocationField, Attachments, AttributesID, Au" +
                    "ditAttachments, AuditConfidentialData, AuditUpdate, AutoAddNotification, BarCode" +
                    "Prefix, CounterFieldName, DBName, DatabaseAccessType, DefaultDescriptionField, D" +
                    "efaultDescriptionText, DefaultRetentionId, DefaultTrackingId, DefaultTrackingTab" +
                    "le, DelGroup, DeleteAttachedGroup, DescFieldNameOne, DescFieldNameTwo, DescField" +
                    "PrefixOne, DescFieldPrefixOneTable, DescFieldPrefixOneWidth, DescFieldPrefixTwo," +
                    " DescFieldPrefixTwoTable, DescFieldPrefixTwoWidth, DescRelateTable1, DescRelateT" +
                    "able2, DescriptionFieldName, EditGroup, IdFieldName, IdFieldName2, IdMask, IdStr" +
                    "ipChars, ImageCaptureFlagFieldName, InactiveLocationField, LSAfterAddRecord, LSA" +
                    "fterDeleteRecord, LSAfterEditRecord, LSBeforeAddRecord, LSBeforeDeleteRecord, LS" +
                    "BeforeEditRecord, MaxRecordsAllowed, MaxRecsOnDropDown, MgrGroup, OfficialRecord" +
                    "Handling, OperatorsIdField, OutTable, PCFilesEditGrp, PCFilesNVerGrp, ParentDocT" +
                    "ypeTableName, ParentFolderTableName, Picture, RecordManageMgmtType, RestrictAddT" +
                    "oTable, RetentionAssignmentMethod, RetentionDateClosedField, RetentionDateCreate" +
                    "Field, RetentionDateOpenedField, RetentionDateOtherField, RetentionFieldName, Re" +
                    "tentionFinalDisposition, RetentionInactivityActive, RetentionPeriodActive, Reten" +
                    "tionRelatedTable, RuleDateField, SignatureRequiredFieldName, TableName, Trackabl" +
                    "e, TrackingACTIVEFieldName, TrackingDueBackDaysFieldName, TrackingEmailFieldName" +
                    ", TrackingMailStopFieldName, TrackingOUTFieldName, TrackingPhoneFieldName, Track" +
                    "ingRequestableFieldName, TrackingStatusFieldName, TrackingTable, TrackingType, U" +
                    "serName, ViewGroup FROM Tables WHERE (TableName = @tableName)";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tableName", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[2].Connection = this.Connection;
                this._commandCollection[2].CommandText = "SELECT TableName, UserName, DBName, DatabaseAccessType, Attachments, AliasImaging" +
                    "TableName, TrackingTable, Trackable, TrackingStatusFieldName, CounterFieldName,V" +
                    "iewGroup, AddGroup, EditGroup, DelGroup, MgrGroup, DeleteAttachedGroup, Attribut" +
                    "esID, Picture, IdFieldName, IdFieldName2, IdStripChars, IdMask, BarCodePrefix, D" +
                    "escFieldPrefixOne, DescFieldNameOne, DescFieldPrefixTwo, DescFieldNameTwo, MaxRe" +
                    "csOnDropDown, ADOServerCursor, ADOQueryTimeout, ADOCacheSize, LSBeforeAddRecord," +
                    " LSAfterAddRecord, LSBeforeEditRecord, LSAfterEditRecord, LSBeforeDeleteRecord, " +
                    "LSAfterDeleteRecord, DefaultTrackingTable, DefaultTrackingId, RetentionPeriodAct" +
                    "ive, RetentionInactivityActive, RetentionDateOpenedField, RetentionDateCreateFie" +
                    "ld, RetentionDateClosedField, RetentionDateOtherField, RetentionFieldName, Track" +
                    "ingPhoneFieldName, TrackingMailStopFieldName, TrackingRequestableFieldName, Oper" +
                    "atorsIdField, InactiveLocationField, DefaultDescriptionField, DefaultDescription" +
                    "Text, DefaultRetentionId, DescFieldPrefixOneTable, DescFieldPrefixOneWidth, Desc" +
                    "RelateTable1, DescFieldPrefixTwoTable, DescFieldPrefixTwoWidth, DescRelateTable2" +
                    ", MaxRecordsAllowed, OutTable, PCFilesEditGrp, PCFilesNVerGrp, RestrictAddToTabl" +
                    "e, RuleDateField, TrackingACTIVEFieldName, TrackingOUTFieldName, TrackingType, A" +
                    "uditConfidentialData, AuditUpdate, AllowBatchRequesting, ParentFolderTableName, " +
                    "ParentDocTypeTableName, RecordManageMgmtType, TrackingEmailFieldName, AutoAddNot" +
                    "ification, TrackingDueBackDaysFieldName, ImageCaptureFlagFieldName, SignatureReq" +
                    "uiredFieldName, AuditAttachments, RetentionFinalDisposition, RetentionAssignment" +
                    "Method, RetentionRelatedTable, ArchiveLocationField, OfficialRecordHandling, Des" +
                    "criptionFieldName FROM Tables WHERE (TrackingTable > 0) ORDER BY TrackingTable ";
                this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[3].Connection = this.Connection;
                this._commandCollection[3].CommandText = "SELECT     Attachments\r\nFROM         Tables\r\nWHERE     (TableName = @tableName)";
                this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tableName", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.TablesDataTable GetData()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.TablesDataTable dataTable = new RecordsManage.TablesDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.TablesDataTable GetTableInfoObsolute(string tableName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                if ((tableName == null))
                {
                    throw new global::System.ArgumentNullException("tableName");
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(tableName));
                }
                RecordsManage.TablesDataTable dataTable = new RecordsManage.TablesDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.TablesDataTable GetTrackingTables()
            {
                this.Adapter.SelectCommand = this.CommandCollection[2];
                RecordsManage.TablesDataTable dataTable = new RecordsManage.TablesDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.TablesDataTable HasAttachments(string tableName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[3];
                if ((tableName == null))
                {
                    throw new global::System.ArgumentNullException("tableName");
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(tableName));
                }
                RecordsManage.TablesDataTable dataTable = new RecordsManage.TablesDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class TabletabsTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TabletabsTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "Tabletabs";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("TableName", "TableName");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = "DELETE FROM [TableTabs] WHERE (([Id] = @Original_Id) AND ((@IsNull_TableName = 1 " +
                    "AND [TableName] IS NULL) OR ([TableName] = @Original_TableName)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = "UPDATE [TableTabs] SET [TableName] = @TableName WHERE (([Id] = @Original_Id) AND " +
                    "((@IsNull_TableName = 1 AND [TableName] IS NULL) OR ([TableName] = @Original_Tab" +
                    "leName)));\r\nSELECT Id, TableName FROM TableTabs WHERE (Id = @Id)";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT Id, TableName FROM TableTabs";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = "SELECT DISTINCT TableTabs.TableName\r\nFROM         TableTabs INNER JOIN\r\n         " +
                    "             sysobjects ON TableTabs.TableName = sysobjects.name\r\nWHERE     (sys" +
                    "objects.xtype = \'U\')\r\nORDER BY TableTabs.TableName";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[2].Connection = this.Connection;
                this._commandCollection[2].CommandText = @"SELECT DISTINCT Tabletabs.Id, Tabletabs.TableName, Tables.UserName, Tabletabs.TabOrder
FROM         Tabletabs INNER JOIN
                      sys.sysobjects ON Tabletabs.TableName = sys.sysobjects.name INNER JOIN
                      Tables ON Tabletabs.TableName = Tables.TableName
WHERE     (Tabletabs.TabSet = @tabSet) AND  
                      (sys.sysobjects.xtype = 'U' OR
                      sys.sysobjects.xtype = 'V')
ORDER BY Tabletabs.TabOrder";
                this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tabSet", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "TabSet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
            public virtual int Fill(RecordsManage.TabletabsDataTable dataTable)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((this.ClearBeforeFill == true))
                {
                    dataTable.Clear();
                }
                int returnValue = this.Adapter.Fill(dataTable);
                return returnValue;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.TabletabsDataTable GetData()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.TabletabsDataTable dataTable = new RecordsManage.TabletabsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.TabletabsDataTable GetTables()
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                RecordsManage.TabletabsDataTable dataTable = new RecordsManage.TabletabsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.TabletabsDataTable GetTablesByWorkgroup(global::System.Nullable<short> tabSet)
            {
                this.Adapter.SelectCommand = this.CommandCollection[2];
                if ((tabSet.HasValue == true))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((short)(tabSet.Value));
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                RecordsManage.TabletabsDataTable dataTable = new RecordsManage.TabletabsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.TabletabsDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "Tabletabs");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(int Original_Id, string Original_TableName)
            {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
                if ((Original_TableName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TableName));
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string TableName, int Original_Id, string Original_TableName, int Id)
            {
                if ((TableName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TableName));
                }
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Id));
                if ((Original_TableName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TableName));
                }
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Id));
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string TableName, int Original_Id, string Original_TableName)
            {
                return this.Update(TableName, Original_Id, Original_TableName, Original_Id);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class ViewColumnsTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "ViewColumns";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("ViewsId", "ViewsId");
                tableMapping.ColumnMappings.Add("ColumnNum", "ColumnNum");
                tableMapping.ColumnMappings.Add("FieldName", "FieldName");
                tableMapping.ColumnMappings.Add("Heading", "Heading");
                tableMapping.ColumnMappings.Add("LookupType", "LookupType");
                tableMapping.ColumnMappings.Add("ColumnWidth", "ColumnWidth");
                tableMapping.ColumnMappings.Add("ColumnVisible", "ColumnVisible");
                tableMapping.ColumnMappings.Add("ColumnOrder", "ColumnOrder");
                tableMapping.ColumnMappings.Add("ColumnStyle", "ColumnStyle");
                tableMapping.ColumnMappings.Add("EditMask", "EditMask");
                tableMapping.ColumnMappings.Add("Picture", "Picture");
                tableMapping.ColumnMappings.Add("LookupIdCol", "LookupIdCol");
                tableMapping.ColumnMappings.Add("SortField", "SortField");
                tableMapping.ColumnMappings.Add("SortableField", "SortableField");
                tableMapping.ColumnMappings.Add("FilterField", "FilterField");
                tableMapping.ColumnMappings.Add("CountColumn", "CountColumn");
                tableMapping.ColumnMappings.Add("SubtotalColumn", "SubtotalColumn");
                tableMapping.ColumnMappings.Add("PrintColumnAsSubheader", "PrintColumnAsSubheader");
                tableMapping.ColumnMappings.Add("RestartPageNumber", "RestartPageNumber");
                tableMapping.ColumnMappings.Add("UseAsPrintId", "UseAsPrintId");
                tableMapping.ColumnMappings.Add("DropDownSuggestionOnly", "DropDownSuggestionOnly");
                tableMapping.ColumnMappings.Add("SuppressPrinting", "SuppressPrinting");
                tableMapping.ColumnMappings.Add("ValueCount", "ValueCount");
                tableMapping.ColumnMappings.Add("AlternateFieldName", "AlternateFieldName");
                tableMapping.ColumnMappings.Add("DefaultLookupValue", "DefaultLookupValue");
                tableMapping.ColumnMappings.Add("DropDownFilterIdField", "DropDownFilterIdField");
                tableMapping.ColumnMappings.Add("DropDownFilterMatchField", "DropDownFilterMatchField");
                tableMapping.ColumnMappings.Add("DropDownFlag", "DropDownFlag");
                tableMapping.ColumnMappings.Add("DropDownReferenceColNum", "DropDownReferenceColNum");
                tableMapping.ColumnMappings.Add("DropDownReferenceValue", "DropDownReferenceValue");
                tableMapping.ColumnMappings.Add("DropDownTargetField", "DropDownTargetField");
                tableMapping.ColumnMappings.Add("EditAllowed", "EditAllowed");
                tableMapping.ColumnMappings.Add("FormColWidth", "FormColWidth");
                tableMapping.ColumnMappings.Add("FreezeOrder", "FreezeOrder");
                tableMapping.ColumnMappings.Add("InputMask", "InputMask");
                tableMapping.ColumnMappings.Add("MaskClipMode", "MaskClipMode");
                tableMapping.ColumnMappings.Add("MaskInclude", "MaskInclude");
                tableMapping.ColumnMappings.Add("MaskPromptChar", "MaskPromptChar");
                tableMapping.ColumnMappings.Add("MaxPrintLines", "MaxPrintLines");
                tableMapping.ColumnMappings.Add("PageBreakField", "PageBreakField");
                tableMapping.ColumnMappings.Add("PrinterColWidth", "PrinterColWidth");
                tableMapping.ColumnMappings.Add("SortOrder", "SortOrder");
                tableMapping.ColumnMappings.Add("SortOrderDesc", "SortOrderDesc");
                tableMapping.ColumnMappings.Add("SuppressDuplicates", "SuppressDuplicates");
                tableMapping.ColumnMappings.Add("VisibleOnForm", "VisibleOnForm");
                tableMapping.ColumnMappings.Add("VisibleOnPrint", "VisibleOnPrint");
                tableMapping.ColumnMappings.Add("AlternateSortColumn", "AlternateSortColumn");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ViewColumns] WHERE (([Id] = @Original_Id) AND ((@IsNull_ViewsI" +
                    "d = 1 AND [ViewsId] IS NULL) OR ([ViewsId] = @Original_ViewsId)) AND ((@IsNull_C" +
                    "olumnNum = 1 AND [ColumnNum] IS NULL) OR ([ColumnNum] = @Original_ColumnNum)) AN" +
                    "D ((@IsNull_FieldName = 1 AND [FieldName] IS NULL) OR ([FieldName] = @Original_F" +
                    "ieldName)) AND ((@IsNull_Heading = 1 AND [Heading] IS NULL) OR ([Heading] = @Ori" +
                    "ginal_Heading)) AND ((@IsNull_LookupType = 1 AND [LookupType] IS NULL) OR ([Look" +
                    "upType] = @Original_LookupType)) AND ((@IsNull_ColumnWidth = 1 AND [ColumnWidth]" +
                    " IS NULL) OR ([ColumnWidth] = @Original_ColumnWidth)) AND ((@IsNull_ColumnVisibl" +
                    "e = 1 AND [ColumnVisible] IS NULL) OR ([ColumnVisible] = @Original_ColumnVisible" +
                    ")) AND ((@IsNull_ColumnOrder = 1 AND [ColumnOrder] IS NULL) OR ([ColumnOrder] = " +
                    "@Original_ColumnOrder)) AND ((@IsNull_ColumnStyle = 1 AND [ColumnStyle] IS NULL)" +
                    " OR ([ColumnStyle] = @Original_ColumnStyle)) AND ((@IsNull_EditMask = 1 AND [Edi" +
                    "tMask] IS NULL) OR ([EditMask] = @Original_EditMask)) AND ((@IsNull_Picture = 1 " +
                    "AND [Picture] IS NULL) OR ([Picture] = @Original_Picture)) AND ((@IsNull_LookupI" +
                    "dCol = 1 AND [LookupIdCol] IS NULL) OR ([LookupIdCol] = @Original_LookupIdCol)) " +
                    "AND ((@IsNull_SortField = 1 AND [SortField] IS NULL) OR ([SortField] = @Original" +
                    "_SortField)) AND ((@IsNull_SortableField = 1 AND [SortableField] IS NULL) OR ([S" +
                    "ortableField] = @Original_SortableField)) AND ((@IsNull_FilterField = 1 AND [Fil" +
                    "terField] IS NULL) OR ([FilterField] = @Original_FilterField)) AND ((@IsNull_Cou" +
                    "ntColumn = 1 AND [CountColumn] IS NULL) OR ([CountColumn] = @Original_CountColum" +
                    "n)) AND ((@IsNull_SubtotalColumn = 1 AND [SubtotalColumn] IS NULL) OR ([Subtotal" +
                    "Column] = @Original_SubtotalColumn)) AND ((@IsNull_PrintColumnAsSubheader = 1 AN" +
                    "D [PrintColumnAsSubheader] IS NULL) OR ([PrintColumnAsSubheader] = @Original_Pri" +
                    "ntColumnAsSubheader)) AND ((@IsNull_RestartPageNumber = 1 AND [RestartPageNumber" +
                    "] IS NULL) OR ([RestartPageNumber] = @Original_RestartPageNumber)) AND ((@IsNull" +
                    "_UseAsPrintId = 1 AND [UseAsPrintId] IS NULL) OR ([UseAsPrintId] = @Original_Use" +
                    "AsPrintId)) AND ((@IsNull_DropDownSuggestionOnly = 1 AND [DropDownSuggestionOnly" +
                    "] IS NULL) OR ([DropDownSuggestionOnly] = @Original_DropDownSuggestionOnly)) AND" +
                    " ((@IsNull_SuppressPrinting = 1 AND [SuppressPrinting] IS NULL) OR ([SuppressPri" +
                    "nting] = @Original_SuppressPrinting)) AND ((@IsNull_ValueCount = 1 AND [ValueCou" +
                    "nt] IS NULL) OR ([ValueCount] = @Original_ValueCount)) AND ((@IsNull_DefaultLook" +
                    "upValue = 1 AND [DefaultLookupValue] IS NULL) OR ([DefaultLookupValue] = @Origin" +
                    "al_DefaultLookupValue)) AND ((@IsNull_DropDownFilterIdField = 1 AND [DropDownFil" +
                    "terIdField] IS NULL) OR ([DropDownFilterIdField] = @Original_DropDownFilterIdFie" +
                    "ld)) AND ((@IsNull_DropDownFilterMatchField = 1 AND [DropDownFilterMatchField] I" +
                    "S NULL) OR ([DropDownFilterMatchField] = @Original_DropDownFilterMatchField)) AN" +
                    "D ((@IsNull_DropDownFlag = 1 AND [DropDownFlag] IS NULL) OR ([DropDownFlag] = @O" +
                    "riginal_DropDownFlag)) AND ((@IsNull_DropDownReferenceColNum = 1 AND [DropDownRe" +
                    "ferenceColNum] IS NULL) OR ([DropDownReferenceColNum] = @Original_DropDownRefere" +
                    "nceColNum)) AND ((@IsNull_DropDownReferenceValue = 1 AND [DropDownReferenceValue" +
                    "] IS NULL) OR ([DropDownReferenceValue] = @Original_DropDownReferenceValue)) AND" +
                    " ((@IsNull_DropDownTargetField = 1 AND [DropDownTargetField] IS NULL) OR ([DropD" +
                    "ownTargetField] = @Original_DropDownTargetField)) AND ((@IsNull_EditAllowed = 1 " +
                    "AND [EditAllowed] IS NULL) OR ([EditAllowed] = @Original_EditAllowed)) AND ((@Is" +
                    "Null_FormColWidth = 1 AND [FormColWidth] IS NULL) OR ([FormColWidth] = @Original" +
                    "_FormColWidth)) AND ((@IsNull_FreezeOrder = 1 AND [FreezeOrder] IS NULL) OR ([Fr" +
                    "eezeOrder] = @Original_FreezeOrder)) AND ((@IsNull_InputMask = 1 AND [InputMask]" +
                    " IS NULL) OR ([InputMask] = @Original_InputMask)) AND ((@IsNull_MaskClipMode = 1" +
                    " AND [MaskClipMode] IS NULL) OR ([MaskClipMode] = @Original_MaskClipMode)) AND (" +
                    "(@IsNull_MaskInclude = 1 AND [MaskInclude] IS NULL) OR ([MaskInclude] = @Origina" +
                    "l_MaskInclude)) AND ((@IsNull_MaskPromptChar = 1 AND [MaskPromptChar] IS NULL) O" +
                    "R ([MaskPromptChar] = @Original_MaskPromptChar)) AND ((@IsNull_MaxPrintLines = 1" +
                    " AND [MaxPrintLines] IS NULL) OR ([MaxPrintLines] = @Original_MaxPrintLines)) AN" +
                    "D ((@IsNull_PageBreakField = 1 AND [PageBreakField] IS NULL) OR ([PageBreakField" +
                    "] = @Original_PageBreakField)) AND ((@IsNull_PrinterColWidth = 1 AND [PrinterCol" +
                    "Width] IS NULL) OR ([PrinterColWidth] = @Original_PrinterColWidth)) AND ((@IsNul" +
                    "l_SortOrder = 1 AND [SortOrder] IS NULL) OR ([SortOrder] = @Original_SortOrder))" +
                    " AND ((@IsNull_SortOrderDesc = 1 AND [SortOrderDesc] IS NULL) OR ([SortOrderDesc" +
                    "] = @Original_SortOrderDesc)) AND ((@IsNull_SuppressDuplicates = 1 AND [Suppress" +
                    "Duplicates] IS NULL) OR ([SuppressDuplicates] = @Original_SuppressDuplicates)) A" +
                    "ND ((@IsNull_VisibleOnForm = 1 AND [VisibleOnForm] IS NULL) OR ([VisibleOnForm] " +
                    "= @Original_VisibleOnForm)) AND ((@IsNull_VisibleOnPrint = 1 AND [VisibleOnPrint" +
                    "] IS NULL) OR ([VisibleOnPrint] = @Original_VisibleOnPrint)) AND ((@IsNull_Alter" +
                    "nateSortColumn = 1 AND [AlternateSortColumn] IS NULL) OR ([AlternateSortColumn] " +
                    "= @Original_AlternateSortColumn)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ViewsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewsId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ViewsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ColumnNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ColumnNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FieldName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Heading", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heading", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Heading", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heading", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LookupType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LookupType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LookupType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LookupType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ColumnWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ColumnWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ColumnVisible", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnVisible", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ColumnVisible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnVisible", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ColumnOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ColumnOrder", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ColumnStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnStyle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ColumnStyle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnStyle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EditMask", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditMask", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EditMask", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditMask", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Picture", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Picture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LookupIdCol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LookupIdCol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LookupIdCol", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LookupIdCol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SortField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SortField", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SortableField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortableField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SortableField", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortableField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FilterField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilterField", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountColumn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubtotalColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubtotalColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubtotalColumn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubtotalColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintColumnAsSubheader", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintColumnAsSubheader", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintColumnAsSubheader", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintColumnAsSubheader", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RestartPageNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestartPageNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RestartPageNumber", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestartPageNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UseAsPrintId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseAsPrintId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseAsPrintId", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseAsPrintId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownSuggestionOnly", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownSuggestionOnly", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownSuggestionOnly", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownSuggestionOnly", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SuppressPrinting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppressPrinting", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuppressPrinting", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppressPrinting", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueCount", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DefaultLookupValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultLookupValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DefaultLookupValue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultLookupValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownFilterIdField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFilterIdField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownFilterIdField", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFilterIdField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownFilterMatchField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFilterMatchField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownFilterMatchField", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFilterMatchField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownReferenceColNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownReferenceColNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownReferenceColNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownReferenceColNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownReferenceValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownReferenceValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownReferenceValue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownReferenceValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownTargetField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownTargetField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownTargetField", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownTargetField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EditAllowed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditAllowed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EditAllowed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditAllowed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FormColWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormColWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormColWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormColWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FreezeOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreezeOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreezeOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreezeOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InputMask", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InputMask", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InputMask", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InputMask", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaskClipMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskClipMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaskClipMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskClipMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaskInclude", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskInclude", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaskInclude", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskInclude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaskPromptChar", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskPromptChar", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaskPromptChar", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskPromptChar", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxPrintLines", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxPrintLines", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxPrintLines", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxPrintLines", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PageBreakField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageBreakField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PageBreakField", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageBreakField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrinterColWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrinterColWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrinterColWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrinterColWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SortOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SortOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SortOrderDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortOrderDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SortOrderDesc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortOrderDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SuppressDuplicates", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppressDuplicates", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuppressDuplicates", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppressDuplicates", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VisibleOnForm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisibleOnForm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisibleOnForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisibleOnForm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VisibleOnPrint", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisibleOnPrint", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisibleOnPrint", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisibleOnPrint", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlternateSortColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateSortColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternateSortColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateSortColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ViewColumns] SET [ViewsId] = @ViewsId, [ColumnNum] = @ColumnNum, [F" +
                    "ieldName] = @FieldName, [Heading] = @Heading, [LookupType] = @LookupType, [Colum" +
                    "nWidth] = @ColumnWidth, [ColumnVisible] = @ColumnVisible, [ColumnOrder] = @Colum" +
                    "nOrder, [ColumnStyle] = @ColumnStyle, [EditMask] = @EditMask, [Picture] = @Pictu" +
                    "re, [LookupIdCol] = @LookupIdCol, [SortField] = @SortField, [SortableField] = @S" +
                    "ortableField, [FilterField] = @FilterField, [CountColumn] = @CountColumn, [Subto" +
                    "talColumn] = @SubtotalColumn, [PrintColumnAsSubheader] = @PrintColumnAsSubheader" +
                    ", [RestartPageNumber] = @RestartPageNumber, [UseAsPrintId] = @UseAsPrintId, [Dro" +
                    "pDownSuggestionOnly] = @DropDownSuggestionOnly, [SuppressPrinting] = @SuppressPr" +
                    "inting, [ValueCount] = @ValueCount, [AlternateFieldName] = @AlternateFieldName, " +
                    "[DefaultLookupValue] = @DefaultLookupValue, [DropDownFilterIdField] = @DropDownF" +
                    "ilterIdField, [DropDownFilterMatchField] = @DropDownFilterMatchField, [DropDownF" +
                    "lag] = @DropDownFlag, [DropDownReferenceColNum] = @DropDownReferenceColNum, [Dro" +
                    "pDownReferenceValue] = @DropDownReferenceValue, [DropDownTargetField] = @DropDow" +
                    "nTargetField, [EditAllowed] = @EditAllowed, [FormColWidth] = @FormColWidth, [Fre" +
                    "ezeOrder] = @FreezeOrder, [InputMask] = @InputMask, [MaskClipMode] = @MaskClipMo" +
                    "de, [MaskInclude] = @MaskInclude, [MaskPromptChar] = @MaskPromptChar, [MaxPrintL" +
                    "ines] = @MaxPrintLines, [PageBreakField] = @PageBreakField, [PrinterColWidth] = " +
                    "@PrinterColWidth, [SortOrder] = @SortOrder, [SortOrderDesc] = @SortOrderDesc, [S" +
                    "uppressDuplicates] = @SuppressDuplicates, [VisibleOnForm] = @VisibleOnForm, [Vis" +
                    "ibleOnPrint] = @VisibleOnPrint, [AlternateSortColumn] = @AlternateSortColumn WHE" +
                    "RE (([Id] = @Original_Id) AND ((@IsNull_ViewsId = 1 AND [ViewsId] IS NULL) OR ([" +
                    "ViewsId] = @Original_ViewsId)) AND ((@IsNull_ColumnNum = 1 AND [ColumnNum] IS NU" +
                    "LL) OR ([ColumnNum] = @Original_ColumnNum)) AND ((@IsNull_FieldName = 1 AND [Fie" +
                    "ldName] IS NULL) OR ([FieldName] = @Original_FieldName)) AND ((@IsNull_Heading =" +
                    " 1 AND [Heading] IS NULL) OR ([Heading] = @Original_Heading)) AND ((@IsNull_Look" +
                    "upType = 1 AND [LookupType] IS NULL) OR ([LookupType] = @Original_LookupType)) A" +
                    "ND ((@IsNull_ColumnWidth = 1 AND [ColumnWidth] IS NULL) OR ([ColumnWidth] = @Ori" +
                    "ginal_ColumnWidth)) AND ((@IsNull_ColumnVisible = 1 AND [ColumnVisible] IS NULL)" +
                    " OR ([ColumnVisible] = @Original_ColumnVisible)) AND ((@IsNull_ColumnOrder = 1 A" +
                    "ND [ColumnOrder] IS NULL) OR ([ColumnOrder] = @Original_ColumnOrder)) AND ((@IsN" +
                    "ull_ColumnStyle = 1 AND [ColumnStyle] IS NULL) OR ([ColumnStyle] = @Original_Col" +
                    "umnStyle)) AND ((@IsNull_EditMask = 1 AND [EditMask] IS NULL) OR ([EditMask] = @" +
                    "Original_EditMask)) AND ((@IsNull_Picture = 1 AND [Picture] IS NULL) OR ([Pictur" +
                    "e] = @Original_Picture)) AND ((@IsNull_LookupIdCol = 1 AND [LookupIdCol] IS NULL" +
                    ") OR ([LookupIdCol] = @Original_LookupIdCol)) AND ((@IsNull_SortField = 1 AND [S" +
                    "ortField] IS NULL) OR ([SortField] = @Original_SortField)) AND ((@IsNull_Sortabl" +
                    "eField = 1 AND [SortableField] IS NULL) OR ([SortableField] = @Original_Sortable" +
                    "Field)) AND ((@IsNull_FilterField = 1 AND [FilterField] IS NULL) OR ([FilterFiel" +
                    "d] = @Original_FilterField)) AND ((@IsNull_CountColumn = 1 AND [CountColumn] IS " +
                    "NULL) OR ([CountColumn] = @Original_CountColumn)) AND ((@IsNull_SubtotalColumn =" +
                    " 1 AND [SubtotalColumn] IS NULL) OR ([SubtotalColumn] = @Original_SubtotalColumn" +
                    ")) AND ((@IsNull_PrintColumnAsSubheader = 1 AND [PrintColumnAsSubheader] IS NULL" +
                    ") OR ([PrintColumnAsSubheader] = @Original_PrintColumnAsSubheader)) AND ((@IsNul" +
                    "l_RestartPageNumber = 1 AND [RestartPageNumber] IS NULL) OR ([RestartPageNumber]" +
                    " = @Original_RestartPageNumber)) AND ((@IsNull_UseAsPrintId = 1 AND [UseAsPrintI" +
                    "d] IS NULL) OR ([UseAsPrintId] = @Original_UseAsPrintId)) AND ((@IsNull_DropDown" +
                    "SuggestionOnly = 1 AND [DropDownSuggestionOnly] IS NULL) OR ([DropDownSuggestion" +
                    "Only] = @Original_DropDownSuggestionOnly)) AND ((@IsNull_SuppressPrinting = 1 AN" +
                    "D [SuppressPrinting] IS NULL) OR ([SuppressPrinting] = @Original_SuppressPrintin" +
                    "g)) AND ((@IsNull_ValueCount = 1 AND [ValueCount] IS NULL) OR ([ValueCount] = @O" +
                    "riginal_ValueCount)) AND ((@IsNull_DefaultLookupValue = 1 AND [DefaultLookupValu" +
                    "e] IS NULL) OR ([DefaultLookupValue] = @Original_DefaultLookupValue)) AND ((@IsN" +
                    "ull_DropDownFilterIdField = 1 AND [DropDownFilterIdField] IS NULL) OR ([DropDown" +
                    "FilterIdField] = @Original_DropDownFilterIdField)) AND ((@IsNull_DropDownFilterM" +
                    "atchField = 1 AND [DropDownFilterMatchField] IS NULL) OR ([DropDownFilterMatchFi" +
                    "eld] = @Original_DropDownFilterMatchField)) AND ((@IsNull_DropDownFlag = 1 AND [" +
                    "DropDownFlag] IS NULL) OR ([DropDownFlag] = @Original_DropDownFlag)) AND ((@IsNu" +
                    "ll_DropDownReferenceColNum = 1 AND [DropDownReferenceColNum] IS NULL) OR ([DropD" +
                    "ownReferenceColNum] = @Original_DropDownReferenceColNum)) AND ((@IsNull_DropDown" +
                    "ReferenceValue = 1 AND [DropDownReferenceValue] IS NULL) OR ([DropDownReferenceV" +
                    "alue] = @Original_DropDownReferenceValue)) AND ((@IsNull_DropDownTargetField = 1" +
                    " AND [DropDownTargetField] IS NULL) OR ([DropDownTargetField] = @Original_DropDo" +
                    "wnTargetField)) AND ((@IsNull_EditAllowed = 1 AND [EditAllowed] IS NULL) OR ([Ed" +
                    "itAllowed] = @Original_EditAllowed)) AND ((@IsNull_FormColWidth = 1 AND [FormCol" +
                    "Width] IS NULL) OR ([FormColWidth] = @Original_FormColWidth)) AND ((@IsNull_Free" +
                    "zeOrder = 1 AND [FreezeOrder] IS NULL) OR ([FreezeOrder] = @Original_FreezeOrder" +
                    ")) AND ((@IsNull_InputMask = 1 AND [InputMask] IS NULL) OR ([InputMask] = @Origi" +
                    "nal_InputMask)) AND ((@IsNull_MaskClipMode = 1 AND [MaskClipMode] IS NULL) OR ([" +
                    "MaskClipMode] = @Original_MaskClipMode)) AND ((@IsNull_MaskInclude = 1 AND [Mask" +
                    "Include] IS NULL) OR ([MaskInclude] = @Original_MaskInclude)) AND ((@IsNull_Mask" +
                    "PromptChar = 1 AND [MaskPromptChar] IS NULL) OR ([MaskPromptChar] = @Original_Ma" +
                    "skPromptChar)) AND ((@IsNull_MaxPrintLines = 1 AND [MaxPrintLines] IS NULL) OR (" +
                    "[MaxPrintLines] = @Original_MaxPrintLines)) AND ((@IsNull_PageBreakField = 1 AND" +
                    " [PageBreakField] IS NULL) OR ([PageBreakField] = @Original_PageBreakField)) AND" +
                    " ((@IsNull_PrinterColWidth = 1 AND [PrinterColWidth] IS NULL) OR ([PrinterColWid" +
                    "th] = @Original_PrinterColWidth)) AND ((@IsNull_SortOrder = 1 AND [SortOrder] IS" +
                    " NULL) OR ([SortOrder] = @Original_SortOrder)) AND ((@IsNull_SortOrderDesc = 1 A" +
                    "ND [SortOrderDesc] IS NULL) OR ([SortOrderDesc] = @Original_SortOrderDesc)) AND " +
                    "((@IsNull_SuppressDuplicates = 1 AND [SuppressDuplicates] IS NULL) OR ([Suppress" +
                    "Duplicates] = @Original_SuppressDuplicates)) AND ((@IsNull_VisibleOnForm = 1 AND" +
                    " [VisibleOnForm] IS NULL) OR ([VisibleOnForm] = @Original_VisibleOnForm)) AND ((" +
                    "@IsNull_VisibleOnPrint = 1 AND [VisibleOnPrint] IS NULL) OR ([VisibleOnPrint] = " +
                    "@Original_VisibleOnPrint)) AND ((@IsNull_AlternateSortColumn = 1 AND [AlternateS" +
                    "ortColumn] IS NULL) OR ([AlternateSortColumn] = @Original_AlternateSortColumn)))" +
                    ";\r\nSELECT Id, ViewsId, ColumnNum, FieldName, Heading, LookupType, ColumnWidth, C" +
                    "olumnVisible, ColumnOrder, ColumnStyle, EditMask, Picture, LookupIdCol, SortFiel" +
                    "d, SortableField, FilterField, CountColumn, SubtotalColumn, PrintColumnAsSubhead" +
                    "er, RestartPageNumber, UseAsPrintId, DropDownSuggestionOnly, SuppressPrinting, V" +
                    "alueCount, AlternateFieldName, DefaultLookupValue, DropDownFilterIdField, DropDo" +
                    "wnFilterMatchField, DropDownFlag, DropDownReferenceColNum, DropDownReferenceValu" +
                    "e, DropDownTargetField, EditAllowed, FormColWidth, FreezeOrder, InputMask, MaskC" +
                    "lipMode, MaskInclude, MaskPromptChar, MaxPrintLines, PageBreakField, PrinterColW" +
                    "idth, SortOrder, SortOrderDesc, SuppressDuplicates, VisibleOnForm, VisibleOnPrin" +
                    "t, AlternateSortColumn FROM ViewColumns WHERE (Id = @Id)";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ViewsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ColumnNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Heading", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LookupType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LookupType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ColumnWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ColumnVisible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnVisible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ColumnOrder", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ColumnStyle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EditMask", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditMask", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Picture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LookupIdCol", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LookupIdCol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SortField", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortField", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SortableField", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortableField", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilterField", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterField", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountColumn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubtotalColumn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubtotalColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintColumnAsSubheader", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintColumnAsSubheader", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RestartPageNumber", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestartPageNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseAsPrintId", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseAsPrintId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DropDownSuggestionOnly", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownSuggestionOnly", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuppressPrinting", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppressPrinting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueCount", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternateFieldName", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateFieldName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultLookupValue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultLookupValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DropDownFilterIdField", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFilterIdField", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DropDownFilterMatchField", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFilterMatchField", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DropDownFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DropDownReferenceColNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownReferenceColNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DropDownReferenceValue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownReferenceValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DropDownTargetField", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownTargetField", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EditAllowed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditAllowed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormColWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormColWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreezeOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreezeOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InputMask", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InputMask", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaskClipMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskClipMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaskInclude", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskInclude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaskPromptChar", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskPromptChar", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxPrintLines", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxPrintLines", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PageBreakField", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageBreakField", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrinterColWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrinterColWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SortOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SortOrderDesc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortOrderDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuppressDuplicates", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppressDuplicates", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisibleOnForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisibleOnForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisibleOnPrint", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisibleOnPrint", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternateSortColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateSortColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ViewsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewsId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ViewsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ColumnNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ColumnNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FieldName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FieldName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Heading", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heading", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Heading", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heading", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LookupType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LookupType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LookupType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LookupType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ColumnWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ColumnWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ColumnVisible", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnVisible", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ColumnVisible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnVisible", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ColumnOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ColumnOrder", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ColumnStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnStyle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ColumnStyle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ColumnStyle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EditMask", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditMask", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EditMask", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditMask", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Picture", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Picture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LookupIdCol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LookupIdCol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LookupIdCol", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LookupIdCol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SortField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SortField", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SortableField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortableField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SortableField", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortableField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FilterField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilterField", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountColumn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubtotalColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubtotalColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubtotalColumn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubtotalColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintColumnAsSubheader", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintColumnAsSubheader", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintColumnAsSubheader", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintColumnAsSubheader", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RestartPageNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestartPageNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RestartPageNumber", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestartPageNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UseAsPrintId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseAsPrintId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseAsPrintId", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseAsPrintId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownSuggestionOnly", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownSuggestionOnly", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownSuggestionOnly", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownSuggestionOnly", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SuppressPrinting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppressPrinting", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuppressPrinting", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppressPrinting", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueCount", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DefaultLookupValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultLookupValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DefaultLookupValue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultLookupValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownFilterIdField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFilterIdField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownFilterIdField", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFilterIdField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownFilterMatchField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFilterMatchField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownFilterMatchField", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFilterMatchField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownReferenceColNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownReferenceColNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownReferenceColNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownReferenceColNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownReferenceValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownReferenceValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownReferenceValue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownReferenceValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DropDownTargetField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownTargetField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DropDownTargetField", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DropDownTargetField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EditAllowed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditAllowed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EditAllowed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditAllowed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FormColWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormColWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormColWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormColWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FreezeOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreezeOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreezeOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreezeOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InputMask", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InputMask", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InputMask", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InputMask", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaskClipMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskClipMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaskClipMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskClipMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaskInclude", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskInclude", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaskInclude", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskInclude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaskPromptChar", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskPromptChar", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaskPromptChar", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaskPromptChar", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxPrintLines", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxPrintLines", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxPrintLines", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxPrintLines", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PageBreakField", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageBreakField", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PageBreakField", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageBreakField", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrinterColWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrinterColWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrinterColWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrinterColWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SortOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SortOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SortOrderDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortOrderDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SortOrderDesc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SortOrderDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SuppressDuplicates", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppressDuplicates", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuppressDuplicates", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppressDuplicates", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VisibleOnForm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisibleOnForm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisibleOnForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisibleOnForm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VisibleOnPrint", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisibleOnPrint", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisibleOnPrint", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisibleOnPrint", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlternateSortColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateSortColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternateSortColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateSortColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = @"SELECT Id, ViewsId, ColumnNum, FieldName, Heading, LookupType, ColumnWidth, ColumnVisible, ColumnOrder, ColumnStyle, EditMask, Picture, LookupIdCol, SortField, SortableField, FilterField, CountColumn, SubtotalColumn, PrintColumnAsSubheader, RestartPageNumber, UseAsPrintId, DropDownSuggestionOnly, SuppressPrinting, ValueCount, AlternateFieldName, DefaultLookupValue, DropDownFilterIdField, DropDownFilterMatchField, DropDownFlag, DropDownReferenceColNum, DropDownReferenceValue, DropDownTargetField, EditAllowed, FormColWidth, FreezeOrder, InputMask, MaskClipMode, MaskInclude, MaskPromptChar, MaxPrintLines, PageBreakField, PrinterColWidth, SortOrder, SortOrderDesc, SuppressDuplicates, VisibleOnForm, VisibleOnPrint, AlternateSortColumn FROM dbo.ViewColumns";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = @"SELECT        Heading, LookupType, ColumnWidth, ColumnVisible, ColumnOrder, ColumnStyle, EditMask, LookupIdCol, SortField, SortableField, FilterField, DropDownFlag, 
                         EditAllowed, InputMask, ColumnNum, FieldName, ViewsId
FROM            ViewColumns
WHERE        (ViewsId = @viewID) ";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@viewID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ViewsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[2].Connection = this.Connection;
                this._commandCollection[2].CommandText = @"SELECT        Heading, LookupType, ColumnWidth, ColumnVisible, ColumnOrder, ColumnStyle, EditMask, LookupIdCol, SortField, SortableField, FilterField, DropDownFlag, 
                         EditAllowed, InputMask, ColumnNum, FieldName, ViewsId
FROM            ViewColumns
WHERE        (ViewsId = @viewID) AND (FieldName = @fieldName OR
                         FieldName LIKE '%.' + @fieldName)";
                this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@viewID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ViewsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fieldName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FieldName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[3].Connection = this.Connection;
                this._commandCollection[3].CommandText = @"SELECT        Id, ViewsId, ColumnNum, FieldName, Heading, LookupType, ColumnWidth, ColumnVisible, ColumnOrder, ColumnStyle, EditMask, Picture, LookupIdCol, 
                         SortField, SortableField, FilterField, CountColumn, SubtotalColumn, PrintColumnAsSubheader, RestartPageNumber, UseAsPrintId, DropDownSuggestionOnly, 
                         SuppressPrinting, ValueCount, AlternateFieldName, DefaultLookupValue, DropDownFilterIdField, DropDownFilterMatchField, DropDownFlag, 
                         DropDownReferenceColNum, DropDownReferenceValue, DropDownTargetField, EditAllowed, FormColWidth, FreezeOrder, InputMask, MaskClipMode, 
                         MaskInclude, MaskPromptChar, MaxPrintLines, PageBreakField, PrinterColWidth, SortOrder, SortOrderDesc, SuppressDuplicates, VisibleOnForm, 
                         VisibleOnPrint, AlternateSortColumn
FROM            ViewColumns
WHERE        (ViewsId = @viewId)
ORDER BY ColumnNum";
                this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@viewId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ViewsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[4].Connection = this.Connection;
                this._commandCollection[4].CommandText = "SELECT        RIGHT(FieldName, LEN(FieldName) - CHARINDEX(\'.\', FieldName)) AS Fie" +
                    "ldName, ColumnNum, LookupIdCol, Heading\r\nFROM            ViewColumns\r\nWHERE     " +
                    "   (ViewsId = @viewID)\r\nORDER BY ColumnNum";
                this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@viewID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ViewsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.ViewColumnsDataTable GetData()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.ViewColumnsDataTable dataTable = new RecordsManage.ViewColumnsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewColumnsDataTable GetAllFieldProperties(global::System.Nullable<int> viewID)
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                if ((viewID.HasValue == true))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((int)(viewID.Value));
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                RecordsManage.ViewColumnsDataTable dataTable = new RecordsManage.ViewColumnsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewColumnsDataTable GetFieldProperties(global::System.Nullable<int> viewID, string fieldName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[2];
                if ((viewID.HasValue == true))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((int)(viewID.Value));
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                if ((fieldName == null))
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = ((string)(fieldName));
                }
                RecordsManage.ViewColumnsDataTable dataTable = new RecordsManage.ViewColumnsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewColumnsDataTable GetViewColumnInfo(global::System.Nullable<int> viewId)
            {
                this.Adapter.SelectCommand = this.CommandCollection[3];
                if ((viewId.HasValue == true))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((int)(viewId.Value));
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                RecordsManage.ViewColumnsDataTable dataTable = new RecordsManage.ViewColumnsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewColumnsDataTable GetViewOrdinals(global::System.Nullable<int> viewID)
            {
                this.Adapter.SelectCommand = this.CommandCollection[4];
                if ((viewID.HasValue == true))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((int)(viewID.Value));
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                RecordsManage.ViewColumnsDataTable dataTable = new RecordsManage.ViewColumnsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.ViewColumnsDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "ViewColumns");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(
                        int Original_Id,
                        global::System.Nullable<int> Original_ViewsId,
                        global::System.Nullable<short> Original_ColumnNum,
                        string Original_FieldName,
                        string Original_Heading,
                        global::System.Nullable<short> Original_LookupType,
                        global::System.Nullable<short> Original_ColumnWidth,
                        global::System.Nullable<bool> Original_ColumnVisible,
                        global::System.Nullable<short> Original_ColumnOrder,
                        global::System.Nullable<short> Original_ColumnStyle,
                        string Original_EditMask,
                        string Original_Picture,
                        global::System.Nullable<short> Original_LookupIdCol,
                        global::System.Nullable<short> Original_SortField,
                        global::System.Nullable<bool> Original_SortableField,
                        global::System.Nullable<bool> Original_FilterField,
                        global::System.Nullable<bool> Original_CountColumn,
                        global::System.Nullable<bool> Original_SubtotalColumn,
                        global::System.Nullable<bool> Original_PrintColumnAsSubheader,
                        global::System.Nullable<bool> Original_RestartPageNumber,
                        global::System.Nullable<bool> Original_UseAsPrintId,
                        global::System.Nullable<bool> Original_DropDownSuggestionOnly,
                        global::System.Nullable<bool> Original_SuppressPrinting,
                        global::System.Nullable<bool> Original_ValueCount,
                        string Original_DefaultLookupValue,
                        string Original_DropDownFilterIdField,
                        string Original_DropDownFilterMatchField,
                        global::System.Nullable<short> Original_DropDownFlag,
                        global::System.Nullable<short> Original_DropDownReferenceColNum,
                        string Original_DropDownReferenceValue,
                        string Original_DropDownTargetField,
                        global::System.Nullable<bool> Original_EditAllowed,
                        global::System.Nullable<int> Original_FormColWidth,
                        global::System.Nullable<int> Original_FreezeOrder,
                        string Original_InputMask,
                        global::System.Nullable<bool> Original_MaskClipMode,
                        global::System.Nullable<bool> Original_MaskInclude,
                        string Original_MaskPromptChar,
                        global::System.Nullable<int> Original_MaxPrintLines,
                        global::System.Nullable<bool> Original_PageBreakField,
                        global::System.Nullable<int> Original_PrinterColWidth,
                        global::System.Nullable<int> Original_SortOrder,
                        global::System.Nullable<bool> Original_SortOrderDesc,
                        global::System.Nullable<bool> Original_SuppressDuplicates,
                        global::System.Nullable<bool> Original_VisibleOnForm,
                        global::System.Nullable<bool> Original_VisibleOnPrint,
                        global::System.Nullable<int> Original_AlternateSortColumn)
            {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
                if ((Original_ViewsId.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ViewsId.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                if ((Original_ColumnNum.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_ColumnNum.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                if ((Original_FieldName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_FieldName));
                }
                if ((Original_Heading == null))
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Heading));
                }
                if ((Original_LookupType.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[10].Value = ((short)(Original_LookupType.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                if ((Original_ColumnWidth.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[12].Value = ((short)(Original_ColumnWidth.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                if ((Original_ColumnVisible.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[14].Value = ((bool)(Original_ColumnVisible.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                if ((Original_ColumnOrder.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[16].Value = ((short)(Original_ColumnOrder.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
                }
                if ((Original_ColumnStyle.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[18].Value = ((short)(Original_ColumnStyle.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
                }
                if ((Original_EditMask == null))
                {
                    this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_EditMask));
                }
                if ((Original_Picture == null))
                {
                    this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Picture));
                }
                if ((Original_LookupIdCol.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[24].Value = ((short)(Original_LookupIdCol.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
                }
                if ((Original_SortField.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[26].Value = ((short)(Original_SortField.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
                }
                if ((Original_SortableField.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_SortableField.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
                }
                if ((Original_FilterField.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_FilterField.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
                }
                if ((Original_CountColumn.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_CountColumn.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
                }
                if ((Original_SubtotalColumn.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[34].Value = ((bool)(Original_SubtotalColumn.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
                }
                if ((Original_PrintColumnAsSubheader.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_PrintColumnAsSubheader.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
                }
                if ((Original_RestartPageNumber.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_RestartPageNumber.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
                }
                if ((Original_UseAsPrintId.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[40].Value = ((bool)(Original_UseAsPrintId.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
                }
                if ((Original_DropDownSuggestionOnly.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_DropDownSuggestionOnly.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
                }
                if ((Original_SuppressPrinting.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_SuppressPrinting.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
                }
                if ((Original_ValueCount.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_ValueCount.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
                }
                if ((Original_DefaultLookupValue == null))
                {
                    this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_DefaultLookupValue));
                }
                if ((Original_DropDownFilterIdField == null))
                {
                    this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_DropDownFilterIdField));
                }
                if ((Original_DropDownFilterMatchField == null))
                {
                    this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_DropDownFilterMatchField));
                }
                if ((Original_DropDownFlag.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[54].Value = ((short)(Original_DropDownFlag.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
                }
                if ((Original_DropDownReferenceColNum.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[56].Value = ((short)(Original_DropDownReferenceColNum.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
                }
                if ((Original_DropDownReferenceValue == null))
                {
                    this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_DropDownReferenceValue));
                }
                if ((Original_DropDownTargetField == null))
                {
                    this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_DropDownTargetField));
                }
                if ((Original_EditAllowed.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[62].Value = ((bool)(Original_EditAllowed.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
                }
                if ((Original_FormColWidth.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_FormColWidth.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
                }
                if ((Original_FreezeOrder.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_FreezeOrder.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
                }
                if ((Original_InputMask == null))
                {
                    this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_InputMask));
                }
                if ((Original_MaskClipMode.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[70].Value = ((bool)(Original_MaskClipMode.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
                }
                if ((Original_MaskInclude.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[72].Value = ((bool)(Original_MaskInclude.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
                }
                if ((Original_MaskPromptChar == null))
                {
                    this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_MaskPromptChar));
                }
                if ((Original_MaxPrintLines.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[76].Value = ((int)(Original_MaxPrintLines.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
                }
                if ((Original_PageBreakField.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[78].Value = ((bool)(Original_PageBreakField.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
                }
                if ((Original_PrinterColWidth.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[80].Value = ((int)(Original_PrinterColWidth.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
                }
                if ((Original_SortOrder.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[82].Value = ((int)(Original_SortOrder.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
                }
                if ((Original_SortOrderDesc.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[84].Value = ((bool)(Original_SortOrderDesc.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
                }
                if ((Original_SuppressDuplicates.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[86].Value = ((bool)(Original_SuppressDuplicates.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
                }
                if ((Original_VisibleOnForm.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[88].Value = ((bool)(Original_VisibleOnForm.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
                }
                if ((Original_VisibleOnPrint.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[90].Value = ((bool)(Original_VisibleOnPrint.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
                }
                if ((Original_AlternateSortColumn.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[92].Value = ((int)(Original_AlternateSortColumn.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(
                        global::System.Nullable<int> ViewsId,
                        global::System.Nullable<short> ColumnNum,
                        string FieldName,
                        string Heading,
                        global::System.Nullable<short> LookupType,
                        global::System.Nullable<short> ColumnWidth,
                        global::System.Nullable<bool> ColumnVisible,
                        global::System.Nullable<short> ColumnOrder,
                        global::System.Nullable<short> ColumnStyle,
                        string EditMask,
                        string Picture,
                        global::System.Nullable<short> LookupIdCol,
                        global::System.Nullable<short> SortField,
                        global::System.Nullable<bool> SortableField,
                        global::System.Nullable<bool> FilterField,
                        global::System.Nullable<bool> CountColumn,
                        global::System.Nullable<bool> SubtotalColumn,
                        global::System.Nullable<bool> PrintColumnAsSubheader,
                        global::System.Nullable<bool> RestartPageNumber,
                        global::System.Nullable<bool> UseAsPrintId,
                        global::System.Nullable<bool> DropDownSuggestionOnly,
                        global::System.Nullable<bool> SuppressPrinting,
                        global::System.Nullable<bool> ValueCount,
                        string AlternateFieldName,
                        string DefaultLookupValue,
                        string DropDownFilterIdField,
                        string DropDownFilterMatchField,
                        global::System.Nullable<short> DropDownFlag,
                        global::System.Nullable<short> DropDownReferenceColNum,
                        string DropDownReferenceValue,
                        string DropDownTargetField,
                        global::System.Nullable<bool> EditAllowed,
                        global::System.Nullable<int> FormColWidth,
                        global::System.Nullable<int> FreezeOrder,
                        string InputMask,
                        global::System.Nullable<bool> MaskClipMode,
                        global::System.Nullable<bool> MaskInclude,
                        string MaskPromptChar,
                        global::System.Nullable<int> MaxPrintLines,
                        global::System.Nullable<bool> PageBreakField,
                        global::System.Nullable<int> PrinterColWidth,
                        global::System.Nullable<int> SortOrder,
                        global::System.Nullable<bool> SortOrderDesc,
                        global::System.Nullable<bool> SuppressDuplicates,
                        global::System.Nullable<bool> VisibleOnForm,
                        global::System.Nullable<bool> VisibleOnPrint,
                        global::System.Nullable<int> AlternateSortColumn,
                        int Original_Id,
                        global::System.Nullable<int> Original_ViewsId,
                        global::System.Nullable<short> Original_ColumnNum,
                        string Original_FieldName,
                        string Original_Heading,
                        global::System.Nullable<short> Original_LookupType,
                        global::System.Nullable<short> Original_ColumnWidth,
                        global::System.Nullable<bool> Original_ColumnVisible,
                        global::System.Nullable<short> Original_ColumnOrder,
                        global::System.Nullable<short> Original_ColumnStyle,
                        string Original_EditMask,
                        string Original_Picture,
                        global::System.Nullable<short> Original_LookupIdCol,
                        global::System.Nullable<short> Original_SortField,
                        global::System.Nullable<bool> Original_SortableField,
                        global::System.Nullable<bool> Original_FilterField,
                        global::System.Nullable<bool> Original_CountColumn,
                        global::System.Nullable<bool> Original_SubtotalColumn,
                        global::System.Nullable<bool> Original_PrintColumnAsSubheader,
                        global::System.Nullable<bool> Original_RestartPageNumber,
                        global::System.Nullable<bool> Original_UseAsPrintId,
                        global::System.Nullable<bool> Original_DropDownSuggestionOnly,
                        global::System.Nullable<bool> Original_SuppressPrinting,
                        global::System.Nullable<bool> Original_ValueCount,
                        string Original_DefaultLookupValue,
                        string Original_DropDownFilterIdField,
                        string Original_DropDownFilterMatchField,
                        global::System.Nullable<short> Original_DropDownFlag,
                        global::System.Nullable<short> Original_DropDownReferenceColNum,
                        string Original_DropDownReferenceValue,
                        string Original_DropDownTargetField,
                        global::System.Nullable<bool> Original_EditAllowed,
                        global::System.Nullable<int> Original_FormColWidth,
                        global::System.Nullable<int> Original_FreezeOrder,
                        string Original_InputMask,
                        global::System.Nullable<bool> Original_MaskClipMode,
                        global::System.Nullable<bool> Original_MaskInclude,
                        string Original_MaskPromptChar,
                        global::System.Nullable<int> Original_MaxPrintLines,
                        global::System.Nullable<bool> Original_PageBreakField,
                        global::System.Nullable<int> Original_PrinterColWidth,
                        global::System.Nullable<int> Original_SortOrder,
                        global::System.Nullable<bool> Original_SortOrderDesc,
                        global::System.Nullable<bool> Original_SuppressDuplicates,
                        global::System.Nullable<bool> Original_VisibleOnForm,
                        global::System.Nullable<bool> Original_VisibleOnPrint,
                        global::System.Nullable<int> Original_AlternateSortColumn,
                        int Id)
            {
                if ((ViewsId.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ViewsId.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                if ((ColumnNum.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(ColumnNum.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                if ((FieldName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FieldName));
                }
                if ((Heading == null))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Heading));
                }
                if ((LookupType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(LookupType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                if ((ColumnWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(ColumnWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
                }
                if ((ColumnVisible.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(ColumnVisible.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((ColumnOrder.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(ColumnOrder.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
                }
                if ((ColumnStyle.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(ColumnStyle.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                if ((EditMask == null))
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(EditMask));
                }
                if ((Picture == null))
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Picture));
                }
                if ((LookupIdCol.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((short)(LookupIdCol.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
                }
                if ((SortField.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((short)(SortField.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                if ((SortableField.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(SortableField.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
                }
                if ((FilterField.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(FilterField.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                if ((CountColumn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(CountColumn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
                }
                if ((SubtotalColumn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(SubtotalColumn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
                }
                if ((PrintColumnAsSubheader.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(PrintColumnAsSubheader.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
                }
                if ((RestartPageNumber.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(RestartPageNumber.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
                }
                if ((UseAsPrintId.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(UseAsPrintId.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
                }
                if ((DropDownSuggestionOnly.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(DropDownSuggestionOnly.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
                }
                if ((SuppressPrinting.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(SuppressPrinting.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
                }
                if ((ValueCount.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(ValueCount.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
                }
                if ((AlternateFieldName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(AlternateFieldName));
                }
                if ((DefaultLookupValue == null))
                {
                    this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(DefaultLookupValue));
                }
                if ((DropDownFilterIdField == null))
                {
                    this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(DropDownFilterIdField));
                }
                if ((DropDownFilterMatchField == null))
                {
                    this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(DropDownFilterMatchField));
                }
                if ((DropDownFlag.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[27].Value = ((short)(DropDownFlag.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
                }
                if ((DropDownReferenceColNum.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[28].Value = ((short)(DropDownReferenceColNum.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
                }
                if ((DropDownReferenceValue == null))
                {
                    this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(DropDownReferenceValue));
                }
                if ((DropDownTargetField == null))
                {
                    this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(DropDownTargetField));
                }
                if ((EditAllowed.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(EditAllowed.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
                }
                if ((FormColWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(FormColWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
                }
                if ((FreezeOrder.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(FreezeOrder.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
                }
                if ((InputMask == null))
                {
                    this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(InputMask));
                }
                if ((MaskClipMode.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(MaskClipMode.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
                }
                if ((MaskInclude.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(MaskInclude.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
                }
                if ((MaskPromptChar == null))
                {
                    this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(MaskPromptChar));
                }
                if ((MaxPrintLines.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(MaxPrintLines.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
                }
                if ((PageBreakField.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(PageBreakField.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
                }
                if ((PrinterColWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(PrinterColWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
                }
                if ((SortOrder.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(SortOrder.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
                }
                if ((SortOrderDesc.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(SortOrderDesc.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
                }
                if ((SuppressDuplicates.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(SuppressDuplicates.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
                }
                if ((VisibleOnForm.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(VisibleOnForm.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
                }
                if ((VisibleOnPrint.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(VisibleOnPrint.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
                }
                if ((AlternateSortColumn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(AlternateSortColumn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
                }
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_Id));
                if ((Original_ViewsId.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_ViewsId.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
                }
                if ((Original_ColumnNum.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[51].Value = ((short)(Original_ColumnNum.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
                }
                if ((Original_FieldName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_FieldName));
                }
                if ((Original_Heading == null))
                {
                    this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Heading));
                }
                if ((Original_LookupType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[57].Value = ((short)(Original_LookupType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
                }
                if ((Original_ColumnWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[59].Value = ((short)(Original_ColumnWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
                }
                if ((Original_ColumnVisible.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_ColumnVisible.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
                }
                if ((Original_ColumnOrder.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[63].Value = ((short)(Original_ColumnOrder.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
                }
                if ((Original_ColumnStyle.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[65].Value = ((short)(Original_ColumnStyle.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
                }
                if ((Original_EditMask == null))
                {
                    this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_EditMask));
                }
                if ((Original_Picture == null))
                {
                    this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_Picture));
                }
                if ((Original_LookupIdCol.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[71].Value = ((short)(Original_LookupIdCol.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
                }
                if ((Original_SortField.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[73].Value = ((short)(Original_SortField.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
                }
                if ((Original_SortableField.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(Original_SortableField.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
                }
                if ((Original_FilterField.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(Original_FilterField.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
                }
                if ((Original_CountColumn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[79].Value = ((bool)(Original_CountColumn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
                }
                if ((Original_SubtotalColumn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(Original_SubtotalColumn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
                }
                if ((Original_PrintColumnAsSubheader.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(Original_PrintColumnAsSubheader.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
                }
                if ((Original_RestartPageNumber.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[85].Value = ((bool)(Original_RestartPageNumber.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
                }
                if ((Original_UseAsPrintId.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(Original_UseAsPrintId.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
                }
                if ((Original_DropDownSuggestionOnly.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[89].Value = ((bool)(Original_DropDownSuggestionOnly.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
                }
                if ((Original_SuppressPrinting.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[91].Value = ((bool)(Original_SuppressPrinting.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
                }
                if ((Original_ValueCount.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[93].Value = ((bool)(Original_ValueCount.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
                }
                if ((Original_DefaultLookupValue == null))
                {
                    this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_DefaultLookupValue));
                }
                if ((Original_DropDownFilterIdField == null))
                {
                    this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_DropDownFilterIdField));
                }
                if ((Original_DropDownFilterMatchField == null))
                {
                    this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_DropDownFilterMatchField));
                }
                if ((Original_DropDownFlag.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[101].Value = ((short)(Original_DropDownFlag.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
                }
                if ((Original_DropDownReferenceColNum.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[103].Value = ((short)(Original_DropDownReferenceColNum.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
                }
                if ((Original_DropDownReferenceValue == null))
                {
                    this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_DropDownReferenceValue));
                }
                if ((Original_DropDownTargetField == null))
                {
                    this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_DropDownTargetField));
                }
                if ((Original_EditAllowed.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[109].Value = ((bool)(Original_EditAllowed.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
                }
                if ((Original_FormColWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[111].Value = ((int)(Original_FormColWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
                }
                if ((Original_FreezeOrder.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(Original_FreezeOrder.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
                }
                if ((Original_InputMask == null))
                {
                    this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_InputMask));
                }
                if ((Original_MaskClipMode.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[117].Value = ((bool)(Original_MaskClipMode.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
                }
                if ((Original_MaskInclude.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[119].Value = ((bool)(Original_MaskInclude.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
                }
                if ((Original_MaskPromptChar == null))
                {
                    this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_MaskPromptChar));
                }
                if ((Original_MaxPrintLines.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[123].Value = ((int)(Original_MaxPrintLines.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
                }
                if ((Original_PageBreakField.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[125].Value = ((bool)(Original_PageBreakField.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
                }
                if ((Original_PrinterColWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[127].Value = ((int)(Original_PrinterColWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
                }
                if ((Original_SortOrder.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[129].Value = ((int)(Original_SortOrder.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
                }
                if ((Original_SortOrderDesc.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[131].Value = ((bool)(Original_SortOrderDesc.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
                }
                if ((Original_SuppressDuplicates.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[133].Value = ((bool)(Original_SuppressDuplicates.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
                }
                if ((Original_VisibleOnForm.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[135].Value = ((bool)(Original_VisibleOnForm.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
                }
                if ((Original_VisibleOnPrint.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[137].Value = ((bool)(Original_VisibleOnPrint.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
                }
                if ((Original_AlternateSortColumn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[139].Value = ((int)(Original_AlternateSortColumn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
                }
                this.Adapter.UpdateCommand.Parameters[140].Value = ((int)(Id));
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(
                        global::System.Nullable<int> ViewsId,
                        global::System.Nullable<short> ColumnNum,
                        string FieldName,
                        string Heading,
                        global::System.Nullable<short> LookupType,
                        global::System.Nullable<short> ColumnWidth,
                        global::System.Nullable<bool> ColumnVisible,
                        global::System.Nullable<short> ColumnOrder,
                        global::System.Nullable<short> ColumnStyle,
                        string EditMask,
                        string Picture,
                        global::System.Nullable<short> LookupIdCol,
                        global::System.Nullable<short> SortField,
                        global::System.Nullable<bool> SortableField,
                        global::System.Nullable<bool> FilterField,
                        global::System.Nullable<bool> CountColumn,
                        global::System.Nullable<bool> SubtotalColumn,
                        global::System.Nullable<bool> PrintColumnAsSubheader,
                        global::System.Nullable<bool> RestartPageNumber,
                        global::System.Nullable<bool> UseAsPrintId,
                        global::System.Nullable<bool> DropDownSuggestionOnly,
                        global::System.Nullable<bool> SuppressPrinting,
                        global::System.Nullable<bool> ValueCount,
                        string AlternateFieldName,
                        string DefaultLookupValue,
                        string DropDownFilterIdField,
                        string DropDownFilterMatchField,
                        global::System.Nullable<short> DropDownFlag,
                        global::System.Nullable<short> DropDownReferenceColNum,
                        string DropDownReferenceValue,
                        string DropDownTargetField,
                        global::System.Nullable<bool> EditAllowed,
                        global::System.Nullable<int> FormColWidth,
                        global::System.Nullable<int> FreezeOrder,
                        string InputMask,
                        global::System.Nullable<bool> MaskClipMode,
                        global::System.Nullable<bool> MaskInclude,
                        string MaskPromptChar,
                        global::System.Nullable<int> MaxPrintLines,
                        global::System.Nullable<bool> PageBreakField,
                        global::System.Nullable<int> PrinterColWidth,
                        global::System.Nullable<int> SortOrder,
                        global::System.Nullable<bool> SortOrderDesc,
                        global::System.Nullable<bool> SuppressDuplicates,
                        global::System.Nullable<bool> VisibleOnForm,
                        global::System.Nullable<bool> VisibleOnPrint,
                        global::System.Nullable<int> AlternateSortColumn,
                        int Original_Id,
                        global::System.Nullable<int> Original_ViewsId,
                        global::System.Nullable<short> Original_ColumnNum,
                        string Original_FieldName,
                        string Original_Heading,
                        global::System.Nullable<short> Original_LookupType,
                        global::System.Nullable<short> Original_ColumnWidth,
                        global::System.Nullable<bool> Original_ColumnVisible,
                        global::System.Nullable<short> Original_ColumnOrder,
                        global::System.Nullable<short> Original_ColumnStyle,
                        string Original_EditMask,
                        string Original_Picture,
                        global::System.Nullable<short> Original_LookupIdCol,
                        global::System.Nullable<short> Original_SortField,
                        global::System.Nullable<bool> Original_SortableField,
                        global::System.Nullable<bool> Original_FilterField,
                        global::System.Nullable<bool> Original_CountColumn,
                        global::System.Nullable<bool> Original_SubtotalColumn,
                        global::System.Nullable<bool> Original_PrintColumnAsSubheader,
                        global::System.Nullable<bool> Original_RestartPageNumber,
                        global::System.Nullable<bool> Original_UseAsPrintId,
                        global::System.Nullable<bool> Original_DropDownSuggestionOnly,
                        global::System.Nullable<bool> Original_SuppressPrinting,
                        global::System.Nullable<bool> Original_ValueCount,
                        string Original_DefaultLookupValue,
                        string Original_DropDownFilterIdField,
                        string Original_DropDownFilterMatchField,
                        global::System.Nullable<short> Original_DropDownFlag,
                        global::System.Nullable<short> Original_DropDownReferenceColNum,
                        string Original_DropDownReferenceValue,
                        string Original_DropDownTargetField,
                        global::System.Nullable<bool> Original_EditAllowed,
                        global::System.Nullable<int> Original_FormColWidth,
                        global::System.Nullable<int> Original_FreezeOrder,
                        string Original_InputMask,
                        global::System.Nullable<bool> Original_MaskClipMode,
                        global::System.Nullable<bool> Original_MaskInclude,
                        string Original_MaskPromptChar,
                        global::System.Nullable<int> Original_MaxPrintLines,
                        global::System.Nullable<bool> Original_PageBreakField,
                        global::System.Nullable<int> Original_PrinterColWidth,
                        global::System.Nullable<int> Original_SortOrder,
                        global::System.Nullable<bool> Original_SortOrderDesc,
                        global::System.Nullable<bool> Original_SuppressDuplicates,
                        global::System.Nullable<bool> Original_VisibleOnForm,
                        global::System.Nullable<bool> Original_VisibleOnPrint,
                        global::System.Nullable<int> Original_AlternateSortColumn)
            {
                return this.Update(ViewsId, ColumnNum, FieldName, Heading, LookupType, ColumnWidth, ColumnVisible, ColumnOrder, ColumnStyle, EditMask, Picture, LookupIdCol, SortField, SortableField, FilterField, CountColumn, SubtotalColumn, PrintColumnAsSubheader, RestartPageNumber, UseAsPrintId, DropDownSuggestionOnly, SuppressPrinting, ValueCount, AlternateFieldName, DefaultLookupValue, DropDownFilterIdField, DropDownFilterMatchField, DropDownFlag, DropDownReferenceColNum, DropDownReferenceValue, DropDownTargetField, EditAllowed, FormColWidth, FreezeOrder, InputMask, MaskClipMode, MaskInclude, MaskPromptChar, MaxPrintLines, PageBreakField, PrinterColWidth, SortOrder, SortOrderDesc, SuppressDuplicates, VisibleOnForm, VisibleOnPrint, AlternateSortColumn, Original_Id, Original_ViewsId, Original_ColumnNum, Original_FieldName, Original_Heading, Original_LookupType, Original_ColumnWidth, Original_ColumnVisible, Original_ColumnOrder, Original_ColumnStyle, Original_EditMask, Original_Picture, Original_LookupIdCol, Original_SortField, Original_SortableField, Original_FilterField, Original_CountColumn, Original_SubtotalColumn, Original_PrintColumnAsSubheader, Original_RestartPageNumber, Original_UseAsPrintId, Original_DropDownSuggestionOnly, Original_SuppressPrinting, Original_ValueCount, Original_DefaultLookupValue, Original_DropDownFilterIdField, Original_DropDownFilterMatchField, Original_DropDownFlag, Original_DropDownReferenceColNum, Original_DropDownReferenceValue, Original_DropDownTargetField, Original_EditAllowed, Original_FormColWidth, Original_FreezeOrder, Original_InputMask, Original_MaskClipMode, Original_MaskInclude, Original_MaskPromptChar, Original_MaxPrintLines, Original_PageBreakField, Original_PrinterColWidth, Original_SortOrder, Original_SortOrderDesc, Original_SuppressDuplicates, Original_VisibleOnForm, Original_VisibleOnPrint, Original_AlternateSortColumn, Original_Id);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class StatusHistoryTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusHistoryTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "StatusHistory";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("FoldersId", "FoldersId");
                tableMapping.ColumnMappings.Add("Operator", "Operator");
                tableMapping.ColumnMappings.Add("StatusChangeDateTime", "StatusChangeDateTime");
                tableMapping.ColumnMappings.Add("NewStatus", "NewStatus");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = @"DELETE FROM [StatusHistory] WHERE (([Id] = @Original_Id) AND ((@IsNull_FoldersId = 1 AND [FoldersId] IS NULL) OR ([FoldersId] = @Original_FoldersId)) AND ((@IsNull_Operator = 1 AND [Operator] IS NULL) OR ([Operator] = @Original_Operator)) AND ((@IsNull_StatusChangeDateTime = 1 AND [StatusChangeDateTime] IS NULL) OR ([StatusChangeDateTime] = @Original_StatusChangeDateTime)) AND ((@IsNull_NewStatus = 1 AND [NewStatus] IS NULL) OR ([NewStatus] = @Original_NewStatus)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoldersId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoldersId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoldersId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoldersId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Operator", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Operator", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Operator", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Operator", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StatusChangeDateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StatusChangeDateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StatusChangeDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StatusChangeDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NewStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NewStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = @"UPDATE [StatusHistory] SET [FoldersId] = @FoldersId, [Operator] = @Operator, [StatusChangeDateTime] = @StatusChangeDateTime, [NewStatus] = @NewStatus WHERE (([Id] = @Original_Id) AND ((@IsNull_FoldersId = 1 AND [FoldersId] IS NULL) OR ([FoldersId] = @Original_FoldersId)) AND ((@IsNull_Operator = 1 AND [Operator] IS NULL) OR ([Operator] = @Original_Operator)) AND ((@IsNull_StatusChangeDateTime = 1 AND [StatusChangeDateTime] IS NULL) OR ([StatusChangeDateTime] = @Original_StatusChangeDateTime)) AND ((@IsNull_NewStatus = 1 AND [NewStatus] IS NULL) OR ([NewStatus] = @Original_NewStatus)));
SELECT Id, FoldersId, Operator, StatusChangeDateTime, NewStatus FROM StatusHistory WHERE (Id = @Id) ORDER BY StatusChangeDateTime DESC";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoldersId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoldersId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Operator", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Operator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StatusChangeDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StatusChangeDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoldersId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoldersId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoldersId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoldersId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Operator", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Operator", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Operator", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Operator", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StatusChangeDateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StatusChangeDateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StatusChangeDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StatusChangeDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NewStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NewStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT     Id, FoldersId, Operator, StatusChangeDateTime, NewStatus\r\nFROM        " +
                    " StatusHistory\r\nWHERE     (FoldersId = @FolderID)\r\nORDER BY StatusChangeDateTime" +
                    " DESC";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FolderID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FoldersId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.StatusHistoryDataTable GetFolderStatus(global::System.Nullable<int> FolderID)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((FolderID.HasValue == true))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((int)(FolderID.Value));
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                RecordsManage.StatusHistoryDataTable dataTable = new RecordsManage.StatusHistoryDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.StatusHistoryDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "StatusHistory");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(int Original_Id, global::System.Nullable<int> Original_FoldersId, string Original_Operator, global::System.Nullable<global::System.DateTime> Original_StatusChangeDateTime, string Original_NewStatus)
            {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
                if ((Original_FoldersId.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_FoldersId.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                if ((Original_Operator == null))
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Operator));
                }
                if ((Original_StatusChangeDateTime.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_StatusChangeDateTime.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((Original_NewStatus == null))
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_NewStatus));
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(global::System.Nullable<int> FoldersId, string Operator, global::System.Nullable<global::System.DateTime> StatusChangeDateTime, string NewStatus, int Original_Id, global::System.Nullable<int> Original_FoldersId, string Original_Operator, global::System.Nullable<global::System.DateTime> Original_StatusChangeDateTime, string Original_NewStatus, int Id)
            {
                if ((FoldersId.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(FoldersId.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                if ((Operator == null))
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Operator));
                }
                if ((StatusChangeDateTime.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(StatusChangeDateTime.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                if ((NewStatus == null))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(NewStatus));
                }
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Id));
                if ((Original_FoldersId.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_FoldersId.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((Original_Operator == null))
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Operator));
                }
                if ((Original_StatusChangeDateTime.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_StatusChangeDateTime.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                if ((Original_NewStatus == null))
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_NewStatus));
                }
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Id));
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(global::System.Nullable<int> FoldersId, string Operator, global::System.Nullable<global::System.DateTime> StatusChangeDateTime, string NewStatus, int Original_Id, global::System.Nullable<int> Original_FoldersId, string Original_Operator, global::System.Nullable<global::System.DateTime> Original_StatusChangeDateTime, string Original_NewStatus)
            {
                return this.Update(FoldersId, Operator, StatusChangeDateTime, NewStatus, Original_Id, Original_FoldersId, Original_Operator, Original_StatusChangeDateTime, Original_NewStatus, Original_Id);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class LinkScriptHeaderTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptHeaderTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "LinkScriptHeader";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("FormPageAction", "FormPageAction");
                tableMapping.ColumnMappings.Add("DirectoryName", "DirectoryName");
                tableMapping.ColumnMappings.Add("OutputSettingsId", "OutputSettingsId");
                tableMapping.ColumnMappings.Add("CallingType", "CallingType");
                tableMapping.ColumnMappings.Add("PCFilesDeleteAfterCopy", "PCFilesDeleteAfterCopy");
                tableMapping.ColumnMappings.Add("ViewGroup", "ViewGroup");
                tableMapping.ColumnMappings.Add("UIType", "UIType");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LinkScriptHeader] WHERE (([Id] = @Original_Id) AND ((@IsNull_FormPageAction = 1 AND [FormPageAction] IS NULL) OR ([FormPageAction] = @Original_FormPageAction)) AND ((@IsNull_DirectoryName = 1 AND [DirectoryName] IS NULL) OR ([DirectoryName] = @Original_DirectoryName)) AND ((@IsNull_OutputSettingsId = 1 AND [OutputSettingsId] IS NULL) OR ([OutputSettingsId] = @Original_OutputSettingsId)) AND ((@IsNull_CallingType = 1 AND [CallingType] IS NULL) OR ([CallingType] = @Original_CallingType)) AND ((@IsNull_PCFilesDeleteAfterCopy = 1 AND [PCFilesDeleteAfterCopy] IS NULL) OR ([PCFilesDeleteAfterCopy] = @Original_PCFilesDeleteAfterCopy)) AND ((@IsNull_ViewGroup = 1 AND [ViewGroup] IS NULL) OR ([ViewGroup] = @Original_ViewGroup)) AND ((@IsNull_UIType = 1 AND [UIType] IS NULL) OR ([UIType] = @Original_UIType)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FormPageAction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormPageAction", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormPageAction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormPageAction", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DirectoryName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectoryName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DirectoryName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectoryName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutputSettingsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutputSettingsId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutputSettingsId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutputSettingsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CallingType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CallingType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CallingType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CallingType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PCFilesDeleteAfterCopy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesDeleteAfterCopy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCFilesDeleteAfterCopy", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesDeleteAfterCopy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UIType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UIType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UIType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UIType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = @"UPDATE [LinkScriptHeader] SET [Id] = @Id, [FormPageAction] = @FormPageAction, [DirectoryName] = @DirectoryName, [OutputSettingsId] = @OutputSettingsId, [CallingType] = @CallingType, [PCFilesDeleteAfterCopy] = @PCFilesDeleteAfterCopy, [ViewGroup] = @ViewGroup, [UIType] = @UIType WHERE (([Id] = @Original_Id) AND ((@IsNull_FormPageAction = 1 AND [FormPageAction] IS NULL) OR ([FormPageAction] = @Original_FormPageAction)) AND ((@IsNull_DirectoryName = 1 AND [DirectoryName] IS NULL) OR ([DirectoryName] = @Original_DirectoryName)) AND ((@IsNull_OutputSettingsId = 1 AND [OutputSettingsId] IS NULL) OR ([OutputSettingsId] = @Original_OutputSettingsId)) AND ((@IsNull_CallingType = 1 AND [CallingType] IS NULL) OR ([CallingType] = @Original_CallingType)) AND ((@IsNull_PCFilesDeleteAfterCopy = 1 AND [PCFilesDeleteAfterCopy] IS NULL) OR ([PCFilesDeleteAfterCopy] = @Original_PCFilesDeleteAfterCopy)) AND ((@IsNull_ViewGroup = 1 AND [ViewGroup] IS NULL) OR ([ViewGroup] = @Original_ViewGroup)) AND ((@IsNull_UIType = 1 AND [UIType] IS NULL) OR ([UIType] = @Original_UIType)));
SELECT Id, FormPageAction, DirectoryName, OutputSettingsId, CallingType, PCFilesDeleteAfterCopy, ViewGroup, UIType FROM LinkScriptHeader WHERE (Id = @Id)";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormPageAction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormPageAction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DirectoryName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectoryName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutputSettingsId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutputSettingsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CallingType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CallingType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCFilesDeleteAfterCopy", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesDeleteAfterCopy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UIType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UIType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FormPageAction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormPageAction", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormPageAction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormPageAction", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DirectoryName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectoryName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DirectoryName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectoryName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutputSettingsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutputSettingsId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutputSettingsId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutputSettingsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CallingType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CallingType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CallingType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CallingType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PCFilesDeleteAfterCopy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesDeleteAfterCopy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCFilesDeleteAfterCopy", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesDeleteAfterCopy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ViewGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UIType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UIType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UIType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UIType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT     Id, FormPageAction, DirectoryName, OutputSettingsId, CallingType, PCFi" +
                    "lesDeleteAfterCopy, ViewGroup, UIType\r\nFROM         LinkScriptHeader\r\nWHERE     " +
                    "(Id = @Id)";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = @"SELECT  [Id],[FormPageAction],[DirectoryName],[OutputSettingsId],[CallingType],[PCFilesDeleteAfterCopy]      ,[ViewGroup],[UIType],[RowTimeStamp]  FROM [LinkScriptHeader] where ViewGroup <> 999999999 and OutputSettingsId is not null and (CallingType=0 or CallingType & 4 = 4)";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.LinkScriptHeaderDataTable GetData(string Id)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((Id == null))
                {
                    throw new global::System.ArgumentNullException("Id");
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Id));
                }
                RecordsManage.LinkScriptHeaderDataTable dataTable = new RecordsManage.LinkScriptHeaderDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.LinkScriptHeaderDataTable GetSendToScripts()
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                RecordsManage.LinkScriptHeaderDataTable dataTable = new RecordsManage.LinkScriptHeaderDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.LinkScriptHeaderDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "LinkScriptHeader");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(string Original_Id, global::System.Nullable<int> Original_FormPageAction, string Original_DirectoryName, string Original_OutputSettingsId, global::System.Nullable<int> Original_CallingType, global::System.Nullable<bool> Original_PCFilesDeleteAfterCopy, global::System.Nullable<int> Original_ViewGroup, global::System.Nullable<int> Original_UIType)
            {
                if ((Original_Id == null))
                {
                    throw new global::System.ArgumentNullException("Original_Id");
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Id));
                }
                if ((Original_FormPageAction.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_FormPageAction.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                if ((Original_DirectoryName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DirectoryName));
                }
                if ((Original_OutputSettingsId == null))
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_OutputSettingsId));
                }
                if ((Original_CallingType.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_CallingType.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                if ((Original_PCFilesDeleteAfterCopy.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_PCFilesDeleteAfterCopy.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                if ((Original_ViewGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ViewGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                if ((Original_UIType.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_UIType.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(
                        string Id,
                        global::System.Nullable<int> FormPageAction,
                        string DirectoryName,
                        string OutputSettingsId,
                        global::System.Nullable<int> CallingType,
                        global::System.Nullable<bool> PCFilesDeleteAfterCopy,
                        global::System.Nullable<int> ViewGroup,
                        global::System.Nullable<int> UIType,
                        string Original_Id,
                        global::System.Nullable<int> Original_FormPageAction,
                        string Original_DirectoryName,
                        string Original_OutputSettingsId,
                        global::System.Nullable<int> Original_CallingType,
                        global::System.Nullable<bool> Original_PCFilesDeleteAfterCopy,
                        global::System.Nullable<int> Original_ViewGroup,
                        global::System.Nullable<int> Original_UIType)
            {
                if ((Id == null))
                {
                    throw new global::System.ArgumentNullException("Id");
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Id));
                }
                if ((FormPageAction.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(FormPageAction.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                if ((DirectoryName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DirectoryName));
                }
                if ((OutputSettingsId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(OutputSettingsId));
                }
                if ((CallingType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(CallingType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                if ((PCFilesDeleteAfterCopy.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(PCFilesDeleteAfterCopy.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
                }
                if ((ViewGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ViewGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((UIType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(UIType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
                }
                if ((Original_Id == null))
                {
                    throw new global::System.ArgumentNullException("Original_Id");
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Id));
                }
                if ((Original_FormPageAction.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_FormPageAction.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                if ((Original_DirectoryName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DirectoryName));
                }
                if ((Original_OutputSettingsId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_OutputSettingsId));
                }
                if ((Original_CallingType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_CallingType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
                }
                if ((Original_PCFilesDeleteAfterCopy.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(Original_PCFilesDeleteAfterCopy.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
                }
                if ((Original_ViewGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_ViewGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
                }
                if ((Original_UIType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_UIType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(global::System.Nullable<int> FormPageAction, string DirectoryName, string OutputSettingsId, global::System.Nullable<int> CallingType, global::System.Nullable<bool> PCFilesDeleteAfterCopy, global::System.Nullable<int> ViewGroup, global::System.Nullable<int> UIType, string Original_Id, global::System.Nullable<int> Original_FormPageAction, string Original_DirectoryName, string Original_OutputSettingsId, global::System.Nullable<int> Original_CallingType, global::System.Nullable<bool> Original_PCFilesDeleteAfterCopy, global::System.Nullable<int> Original_ViewGroup, global::System.Nullable<int> Original_UIType)
            {
                return this.Update(Original_Id, FormPageAction, DirectoryName, OutputSettingsId, CallingType, PCFilesDeleteAfterCopy, ViewGroup, UIType, Original_Id, Original_FormPageAction, Original_DirectoryName, Original_OutputSettingsId, Original_CallingType, Original_PCFilesDeleteAfterCopy, Original_ViewGroup, Original_UIType);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class LinkScriptTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LinkScriptTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "LinkScript";
                tableMapping.ColumnMappings.Add("ScriptName", "ScriptName");
                tableMapping.ColumnMappings.Add("ScriptSequence", "ScriptSequence");
                tableMapping.ColumnMappings.Add("Command", "Command");
                tableMapping.ColumnMappings.Add("ArgOne", "ArgOne");
                tableMapping.ColumnMappings.Add("ArgTwo", "ArgTwo");
                tableMapping.ColumnMappings.Add("ArgThree", "ArgThree");
                tableMapping.ColumnMappings.Add("Result", "Result");
                tableMapping.ColumnMappings.Add("Comment", "Comment");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LinkScript] WHERE (([ScriptName] = @Original_ScriptName) AND ([ScriptSequence] = @Original_ScriptSequence) AND ((@IsNull_Command = 1 AND [Command] IS NULL) OR ([Command] = @Original_Command)) AND ((@IsNull_Result = 1 AND [Result] IS NULL) OR ([Result] = @Original_Result)) AND ((@IsNull_Comment = 1 AND [Comment] IS NULL) OR ([Comment] = @Original_Comment)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScriptName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScriptName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScriptSequence", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScriptSequence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Command", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Command", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Command", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Command", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = @"UPDATE [LinkScript] SET [ScriptName] = @ScriptName, [ScriptSequence] = @ScriptSequence, [Command] = @Command, [ArgOne] = @ArgOne, [ArgTwo] = @ArgTwo, [ArgThree] = @ArgThree, [Result] = @Result, [Comment] = @Comment WHERE (([ScriptName] = @Original_ScriptName) AND ([ScriptSequence] = @Original_ScriptSequence) AND ((@IsNull_Command = 1 AND [Command] IS NULL) OR ([Command] = @Original_Command)) AND ((@IsNull_Result = 1 AND [Result] IS NULL) OR ([Result] = @Original_Result)) AND ((@IsNull_Comment = 1 AND [Comment] IS NULL) OR ([Comment] = @Original_Comment)));
SELECT ScriptName, ScriptSequence, Command, ArgOne, ArgTwo, ArgThree, Result, Comment FROM LinkScript WHERE (ScriptName = @ScriptName) AND (ScriptSequence = @ScriptSequence) ORDER BY ScriptSequence";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScriptName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScriptName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScriptSequence", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScriptSequence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Command", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Command", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArgOne", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArgOne", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArgTwo", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArgTwo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArgThree", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArgThree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScriptName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScriptName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScriptSequence", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScriptSequence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Command", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Command", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Command", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Command", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT        ScriptName, ScriptSequence, Command, ArgOne, ArgTwo, ArgThree, Resu" +
                    "lt, Comment\r\nFROM            LinkScript\r\nWHERE        (ScriptName = @scriptName)" +
                    "\r\nORDER BY ScriptSequence";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scriptName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ScriptName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.LinkScriptDataTable GetLinkscript(string scriptName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((scriptName == null))
                {
                    throw new global::System.ArgumentNullException("scriptName");
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(scriptName));
                }
                RecordsManage.LinkScriptDataTable dataTable = new RecordsManage.LinkScriptDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.LinkScriptDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "LinkScript");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(string Original_ScriptName, double Original_ScriptSequence, string Original_Command, string Original_Result, string Original_Comment)
            {
                if ((Original_ScriptName == null))
                {
                    throw new global::System.ArgumentNullException("Original_ScriptName");
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ScriptName));
                }
                this.Adapter.DeleteCommand.Parameters[1].Value = ((double)(Original_ScriptSequence));
                if ((Original_Command == null))
                {
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Command));
                }
                if ((Original_Result == null))
                {
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Result));
                }
                if ((Original_Comment == null))
                {
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Comment));
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string ScriptName, double ScriptSequence, string Command1, string ArgOne, string ArgTwo, string ArgThree, string Result, string Comment, string Original_ScriptName, double Original_ScriptSequence, string Original_Command, string Original_Result, string Original_Comment)
            {
                if ((ScriptName == null))
                {
                    throw new global::System.ArgumentNullException("ScriptName");
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ScriptName));
                }
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(ScriptSequence));
                if ((Command1 == null))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Command1));
                }
                if ((ArgOne == null))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ArgOne));
                }
                if ((ArgTwo == null))
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ArgTwo));
                }
                if ((ArgThree == null))
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ArgThree));
                }
                if ((Result == null))
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Result));
                }
                if ((Comment == null))
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Comment));
                }
                if ((Original_ScriptName == null))
                {
                    throw new global::System.ArgumentNullException("Original_ScriptName");
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ScriptName));
                }
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_ScriptSequence));
                if ((Original_Command == null))
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Command));
                }
                if ((Original_Result == null))
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Result));
                }
                if ((Original_Comment == null))
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Comment));
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string Command1, string ArgOne, string ArgTwo, string ArgThree, string Result, string Comment, string Original_ScriptName, double Original_ScriptSequence, string Original_Command, string Original_Result, string Original_Comment)
            {
                return this.Update(Original_ScriptName, Original_ScriptSequence, Command1, ArgOne, ArgTwo, ArgThree, Result, Comment, Original_ScriptName, Original_ScriptSequence, Original_Command, Original_Result, Original_Comment);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class TrackingHistoryTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrackingHistoryTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "TrackingHistory";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("TrackedTableId", "TrackedTableId");
                tableMapping.ColumnMappings.Add("TrackedTable", "TrackedTable");
                tableMapping.ColumnMappings.Add("LocationsId", "LocationsId");
                tableMapping.ColumnMappings.Add("EmployeesId", "EmployeesId");
                tableMapping.ColumnMappings.Add("BoxesId", "BoxesId");
                tableMapping.ColumnMappings.Add("TransactionDateTime", "TransactionDateTime");
                tableMapping.ColumnMappings.Add("IsActualScan", "IsActualScan");
                tableMapping.ColumnMappings.Add("BatchId", "BatchId");
                tableMapping.ColumnMappings.Add("UserName", "UserName");
                tableMapping.ColumnMappings.Add("TrackingAdditionalField1", "TrackingAdditionalField1");
                tableMapping.ColumnMappings.Add("TrackingAdditionalField2", "TrackingAdditionalField2");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TrackingHistory] WHERE (([Id] = @Original_Id) AND ((@IsNull_TrackedTableId = 1 AND [TrackedTableId] IS NULL) OR ([TrackedTableId] = @Original_TrackedTableId)) AND ((@IsNull_TrackedTable = 1 AND [TrackedTable] IS NULL) OR ([TrackedTable] = @Original_TrackedTable)) AND ((@IsNull_LocationsId = 1 AND [LocationsId] IS NULL) OR ([LocationsId] = @Original_LocationsId)) AND ((@IsNull_EmployeesId = 1 AND [EmployeesId] IS NULL) OR ([EmployeesId] = @Original_EmployeesId)) AND ((@IsNull_BoxesId = 1 AND [BoxesId] IS NULL) OR ([BoxesId] = @Original_BoxesId)) AND ((@IsNull_TransactionDateTime = 1 AND [TransactionDateTime] IS NULL) OR ([TransactionDateTime] = @Original_TransactionDateTime)) AND ((@IsNull_IsActualScan = 1 AND [IsActualScan] IS NULL) OR ([IsActualScan] = @Original_IsActualScan)) AND ((@IsNull_BatchId = 1 AND [BatchId] IS NULL) OR ([BatchId] = @Original_BatchId)) AND ((@IsNull_UserName = 1 AND [UserName] IS NULL) OR ([UserName] = @Original_UserName)) AND ((@IsNull_TrackingAdditionalField1 = 1 AND [TrackingAdditionalField1] IS NULL) OR ([TrackingAdditionalField1] = @Original_TrackingAdditionalField1)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackedTableId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTableId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackedTableId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTableId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackedTable", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackedTable", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LocationsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationsId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationsId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmployeesId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeesId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeesId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeesId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BoxesId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoxesId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BoxesId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoxesId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransactionDateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionDateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransactionDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsActualScan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActualScan", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActualScan", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActualScan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingAdditionalField1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingAdditionalField1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TrackingHistory] SET [TrackedTableId] = @TrackedTableId, [TrackedTa" +
                    "ble] = @TrackedTable, [LocationsId] = @LocationsId, [EmployeesId] = @EmployeesId" +
                    ", [BoxesId] = @BoxesId, [TransactionDateTime] = @TransactionDateTime, [IsActualS" +
                    "can] = @IsActualScan, [BatchId] = @BatchId, [UserName] = @UserName, [TrackingAdd" +
                    "itionalField1] = @TrackingAdditionalField1, [TrackingAdditionalField2] = @Tracki" +
                    "ngAdditionalField2 WHERE (([Id] = @Original_Id) AND ((@IsNull_TrackedTableId = 1" +
                    " AND [TrackedTableId] IS NULL) OR ([TrackedTableId] = @Original_TrackedTableId))" +
                    " AND ((@IsNull_TrackedTable = 1 AND [TrackedTable] IS NULL) OR ([TrackedTable] =" +
                    " @Original_TrackedTable)) AND ((@IsNull_LocationsId = 1 AND [LocationsId] IS NUL" +
                    "L) OR ([LocationsId] = @Original_LocationsId)) AND ((@IsNull_EmployeesId = 1 AND" +
                    " [EmployeesId] IS NULL) OR ([EmployeesId] = @Original_EmployeesId)) AND ((@IsNul" +
                    "l_BoxesId = 1 AND [BoxesId] IS NULL) OR ([BoxesId] = @Original_BoxesId)) AND ((@" +
                    "IsNull_TransactionDateTime = 1 AND [TransactionDateTime] IS NULL) OR ([Transacti" +
                    "onDateTime] = @Original_TransactionDateTime)) AND ((@IsNull_IsActualScan = 1 AND" +
                    " [IsActualScan] IS NULL) OR ([IsActualScan] = @Original_IsActualScan)) AND ((@Is" +
                    "Null_BatchId = 1 AND [BatchId] IS NULL) OR ([BatchId] = @Original_BatchId)) AND " +
                    "((@IsNull_UserName = 1 AND [UserName] IS NULL) OR ([UserName] = @Original_UserNa" +
                    "me)) AND ((@IsNull_TrackingAdditionalField1 = 1 AND [TrackingAdditionalField1] I" +
                    "S NULL) OR ([TrackingAdditionalField1] = @Original_TrackingAdditionalField1)));\r" +
                    "\nSELECT Id, TrackedTableId, TrackedTable, LocationsId, EmployeesId, BoxesId, Tra" +
                    "nsactionDateTime, IsActualScan, BatchId, UserName, TrackingAdditionalField1, Tra" +
                    "ckingAdditionalField2 FROM TrackingHistory WHERE (Id = @Id)";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackedTableId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTableId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackedTable", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationsId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeesId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeesId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoxesId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoxesId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransactionDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActualScan", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActualScan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackingAdditionalField1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackingAdditionalField2", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackedTableId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTableId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackedTableId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTableId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackedTable", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackedTable", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LocationsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationsId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationsId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmployeesId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeesId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeesId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeesId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BoxesId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoxesId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BoxesId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoxesId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransactionDateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionDateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransactionDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsActualScan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActualScan", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActualScan", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActualScan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingAdditionalField1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingAdditionalField1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT Id, TrackedTableId, TrackedTable, LocationsId, EmployeesId, BoxesId, Trans" +
                    "actionDateTime, IsActualScan, BatchId, UserName, TrackingAdditionalField1, Track" +
                    "ingAdditionalField2 FROM dbo.TrackingHistory";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = @"SELECT        Id, TrackedTableId, TrackedTable, LocationsId, EmployeesId, BoxesId, TransactionDateTime, IsActualScan, BatchId, UserName, TrackingAdditionalField1, 
                         TrackingAdditionalField2
FROM            TrackingHistory
WHERE        (TrackedTable = @TableName) AND (TrackedTableId = @TableID)
ORDER BY TransactionDateTime DESC";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableName", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableID", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TrackedTableId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
            public virtual int Fill(RecordsManage.TrackingHistoryDataTable dataTable)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((this.ClearBeforeFill == true))
                {
                    dataTable.Clear();
                }
                int returnValue = this.Adapter.Fill(dataTable);
                return returnValue;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.TrackingHistoryDataTable GetData()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.TrackingHistoryDataTable dataTable = new RecordsManage.TrackingHistoryDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.TrackingHistoryDataTable GetTrackingHistory(string TableName, string TableID)
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                if ((TableName == null))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(TableName));
                }
                if ((TableID == null))
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[1].Value = ((string)(TableID));
                }
                RecordsManage.TrackingHistoryDataTable dataTable = new RecordsManage.TrackingHistoryDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.TrackingHistoryDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "TrackingHistory");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(int Original_Id, string Original_TrackedTableId, string Original_TrackedTable, string Original_LocationsId, string Original_EmployeesId, string Original_BoxesId, global::System.Nullable<global::System.DateTime> Original_TransactionDateTime, global::System.Nullable<bool> Original_IsActualScan, global::System.Nullable<int> Original_BatchId, string Original_UserName, string Original_TrackingAdditionalField1)
            {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
                if ((Original_TrackedTableId == null))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TrackedTableId));
                }
                if ((Original_TrackedTable == null))
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TrackedTable));
                }
                if ((Original_LocationsId == null))
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_LocationsId));
                }
                if ((Original_EmployeesId == null))
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_EmployeesId));
                }
                if ((Original_BoxesId == null))
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_BoxesId));
                }
                if ((Original_TransactionDateTime.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_TransactionDateTime.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                if ((Original_IsActualScan.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[14].Value = ((bool)(Original_IsActualScan.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                if ((Original_BatchId.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_BatchId.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
                }
                if ((Original_UserName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_UserName));
                }
                if ((Original_TrackingAdditionalField1 == null))
                {
                    this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_TrackingAdditionalField1));
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(
                        string TrackedTableId,
                        string TrackedTable,
                        string LocationsId,
                        string EmployeesId,
                        string BoxesId,
                        global::System.Nullable<global::System.DateTime> TransactionDateTime,
                        global::System.Nullable<bool> IsActualScan,
                        global::System.Nullable<int> BatchId,
                        string UserName,
                        string TrackingAdditionalField1,
                        string TrackingAdditionalField2,
                        int Original_Id,
                        string Original_TrackedTableId,
                        string Original_TrackedTable,
                        string Original_LocationsId,
                        string Original_EmployeesId,
                        string Original_BoxesId,
                        global::System.Nullable<global::System.DateTime> Original_TransactionDateTime,
                        global::System.Nullable<bool> Original_IsActualScan,
                        global::System.Nullable<int> Original_BatchId,
                        string Original_UserName,
                        string Original_TrackingAdditionalField1,
                        int Id)
            {
                if ((TrackedTableId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TrackedTableId));
                }
                if ((TrackedTable == null))
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TrackedTable));
                }
                if ((LocationsId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LocationsId));
                }
                if ((EmployeesId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(EmployeesId));
                }
                if ((BoxesId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BoxesId));
                }
                if ((TransactionDateTime.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(TransactionDateTime.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
                }
                if ((IsActualScan.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(IsActualScan.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((BatchId.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(BatchId.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
                }
                if ((UserName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(UserName));
                }
                if ((TrackingAdditionalField1 == null))
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(TrackingAdditionalField1));
                }
                if ((TrackingAdditionalField2 == null))
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(TrackingAdditionalField2));
                }
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Id));
                if ((Original_TrackedTableId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_TrackedTableId));
                }
                if ((Original_TrackedTable == null))
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_TrackedTable));
                }
                if ((Original_LocationsId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_LocationsId));
                }
                if ((Original_EmployeesId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_EmployeesId));
                }
                if ((Original_BoxesId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_BoxesId));
                }
                if ((Original_TransactionDateTime.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_TransactionDateTime.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
                }
                if ((Original_IsActualScan.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(Original_IsActualScan.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
                }
                if ((Original_BatchId.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_BatchId.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
                }
                if ((Original_UserName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_UserName));
                }
                if ((Original_TrackingAdditionalField1 == null))
                {
                    this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_TrackingAdditionalField1));
                }
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Id));
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(
                        string TrackedTableId,
                        string TrackedTable,
                        string LocationsId,
                        string EmployeesId,
                        string BoxesId,
                        global::System.Nullable<global::System.DateTime> TransactionDateTime,
                        global::System.Nullable<bool> IsActualScan,
                        global::System.Nullable<int> BatchId,
                        string UserName,
                        string TrackingAdditionalField1,
                        string TrackingAdditionalField2,
                        int Original_Id,
                        string Original_TrackedTableId,
                        string Original_TrackedTable,
                        string Original_LocationsId,
                        string Original_EmployeesId,
                        string Original_BoxesId,
                        global::System.Nullable<global::System.DateTime> Original_TransactionDateTime,
                        global::System.Nullable<bool> Original_IsActualScan,
                        global::System.Nullable<int> Original_BatchId,
                        string Original_UserName,
                        string Original_TrackingAdditionalField1)
            {
                return this.Update(TrackedTableId, TrackedTable, LocationsId, EmployeesId, BoxesId, TransactionDateTime, IsActualScan, BatchId, UserName, TrackingAdditionalField1, TrackingAdditionalField2, Original_Id, Original_TrackedTableId, Original_TrackedTable, Original_LocationsId, Original_EmployeesId, Original_BoxesId, Original_TransactionDateTime, Original_IsActualScan, Original_BatchId, Original_UserName, Original_TrackingAdditionalField1, Original_Id);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class ViewsTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "Views";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("TableName", "TableName");
                tableMapping.ColumnMappings.Add("ViewName", "ViewName");
                tableMapping.ColumnMappings.Add("SQLStatement", "SQLStatement");
                tableMapping.ColumnMappings.Add("TaskListDisplayString", "TaskListDisplayString");
                tableMapping.ColumnMappings.Add("MaxRecsPerFetch", "MaxRecsPerFetch");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Views] WHERE (([Id] = @Original_Id) AND ((@IsNull_TableName = 1 AND [TableName] IS NULL) OR ([TableName] = @Original_TableName)) AND ((@IsNull_ViewName = 1 AND [ViewName] IS NULL) OR ([ViewName] = @Original_ViewName)) AND ((@IsNull_TaskListDisplayString = 1 AND [TaskListDisplayString] IS NULL) OR ([TaskListDisplayString] = @Original_TaskListDisplayString)) AND ((@IsNull_MaxRecsPerFetch = 1 AND [MaxRecsPerFetch] IS NULL) OR ([MaxRecsPerFetch] = @Original_MaxRecsPerFetch)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ViewName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ViewName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TaskListDisplayString", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaskListDisplayString", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TaskListDisplayString", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaskListDisplayString", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxRecsPerFetch", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxRecsPerFetch", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxRecsPerFetch", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxRecsPerFetch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = @"UPDATE [Views] SET [TableName] = @TableName, [ViewName] = @ViewName, [SQLStatement] = @SQLStatement, [TaskListDisplayString] = @TaskListDisplayString, [MaxRecsPerFetch] = @MaxRecsPerFetch WHERE (([Id] = @Original_Id) AND ((@IsNull_TableName = 1 AND [TableName] IS NULL) OR ([TableName] = @Original_TableName)) AND ((@IsNull_ViewName = 1 AND [ViewName] IS NULL) OR ([ViewName] = @Original_ViewName)) AND ((@IsNull_TaskListDisplayString = 1 AND [TaskListDisplayString] IS NULL) OR ([TaskListDisplayString] = @Original_TaskListDisplayString)) AND ((@IsNull_MaxRecsPerFetch = 1 AND [MaxRecsPerFetch] IS NULL) OR ([MaxRecsPerFetch] = @Original_MaxRecsPerFetch)));
SELECT Id, TableName, ViewName, SQLStatement, TaskListDisplayString, MaxRecsPerFetch FROM Views WHERE (Id = @Id)";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ViewName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SQLStatement", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SQLStatement", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaskListDisplayString", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaskListDisplayString", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxRecsPerFetch", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxRecsPerFetch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TableName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ViewName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ViewName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViewName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TaskListDisplayString", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaskListDisplayString", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TaskListDisplayString", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaskListDisplayString", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxRecsPerFetch", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxRecsPerFetch", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxRecsPerFetch", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxRecsPerFetch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[8];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT        Id, TableName, ViewName, SQLStatement, TaskListDisplayString, MaxRe" +
                    "csPerFetch\r\nFROM            Views";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = @"SELECT        Id, SQLStatement, TableName, TaskListDisplayString, ViewName, MaxRecsPerFetch
FROM            Views
WHERE        (TableName = @tableName) AND (SearchableView IS NOT NULL) AND (SearchableView <> 0) AND (Printable IS NULL OR
                         Printable = 0)
ORDER BY ViewOrder";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tableName", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[2].Connection = this.Connection;
                this._commandCollection[2].CommandText = "SELECT     Id\r\nFROM         Views\r\nWHERE     (TableName = @tableName) AND (ViewOr" +
                    "der = 1)";
                this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tableName", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[3].Connection = this.Connection;
                this._commandCollection[3].CommandText = "SELECT Id, SQLStatement, TableName, TaskListDisplayString, ViewName FROM Views WH" +
                    "ERE (InTaskList = 1)";
                this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[4].Connection = this.Connection;
                this._commandCollection[4].CommandText = "SELECT        Id, SQLStatement, TableName, TaskListDisplayString, ViewName, MaxRe" +
                    "csPerFetch\r\nFROM            Views\r\nWHERE        (Id = @viewID)";
                this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@viewID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[5].Connection = this.Connection;
                this._commandCollection[5].CommandText = @"SELECT        SubView.Id, SubView.TableName, SubView.ViewName, SubView.SQLStatement, SubView.TaskListDisplayString, SubView.Printable, SubView.MaxRecsPerFetch
FROM            Views AS SubView LEFT OUTER JOIN
                         Views ON SubView.Id = Views.SubViewId
WHERE        (Views.ViewName IS NULL) AND (SubView.Printable = 1) AND (SubView.Visible = 1) AND (SubView.TableName NOT LIKE '@@sl%')
ORDER BY SubView.ViewOrder";
                this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[6].Connection = this.Connection;
                this._commandCollection[6].CommandText = "SELECT        Id, SQLStatement, TableName, TaskListDisplayString, ViewName, MaxRe" +
                    "csPerFetch\r\nFROM            Views\r\nWHERE        (TableName = @tableName) AND (Pr" +
                    "intable = 0)\r\nORDER BY ViewOrder";
                this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tableName", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[7].Connection = this.Connection;
                this._commandCollection[7].CommandText = "SELECT     TableName\r\nFROM         Views\r\n WHERE     (Id = @viewID)";
                this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@viewID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.ViewsDataTable GetData()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.ViewsDataTable dataTable = new RecordsManage.ViewsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewsDataTable GetSearchableViewsByTableName(string tableName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                if ((tableName == null))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(tableName));
                }
                RecordsManage.ViewsDataTable dataTable = new RecordsManage.ViewsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewsDataTable GetTableViewID(string tableName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[2];
                if ((tableName == null))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(tableName));
                }
                RecordsManage.ViewsDataTable dataTable = new RecordsManage.ViewsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewsDataTable GetTasks()
            {
                this.Adapter.SelectCommand = this.CommandCollection[3];
                RecordsManage.ViewsDataTable dataTable = new RecordsManage.ViewsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewsDataTable GetViewByViewID(int viewID)
            {
                this.Adapter.SelectCommand = this.CommandCollection[4];
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(viewID));
                RecordsManage.ViewsDataTable dataTable = new RecordsManage.ViewsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewsDataTable GetViewReports()
            {
                this.Adapter.SelectCommand = this.CommandCollection[5];
                RecordsManage.ViewsDataTable dataTable = new RecordsManage.ViewsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewsDataTable GetViewsByTableName(string tableName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[6];
                if ((tableName == null))
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(tableName));
                }
                RecordsManage.ViewsDataTable dataTable = new RecordsManage.ViewsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.ViewsDataTable GetViewTableName(int viewID)
            {
                this.Adapter.SelectCommand = this.CommandCollection[7];
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(viewID));
                RecordsManage.ViewsDataTable dataTable = new RecordsManage.ViewsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.ViewsDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "Views");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(int Original_Id, string Original_TableName, string Original_ViewName, string Original_TaskListDisplayString, global::System.Nullable<int> Original_MaxRecsPerFetch)
            {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
                if ((Original_TableName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TableName));
                }
                if ((Original_ViewName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ViewName));
                }
                if ((Original_TaskListDisplayString == null))
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TaskListDisplayString));
                }
                if ((Original_MaxRecsPerFetch.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_MaxRecsPerFetch.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string TableName, string ViewName, string SQLStatement, string TaskListDisplayString, global::System.Nullable<int> MaxRecsPerFetch, int Original_Id, string Original_TableName, string Original_ViewName, string Original_TaskListDisplayString, global::System.Nullable<int> Original_MaxRecsPerFetch, int Id)
            {
                if ((TableName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TableName));
                }
                if ((ViewName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ViewName));
                }
                if ((SQLStatement == null))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SQLStatement));
                }
                if ((TaskListDisplayString == null))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TaskListDisplayString));
                }
                if ((MaxRecsPerFetch.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(MaxRecsPerFetch.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Id));
                if ((Original_TableName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_TableName));
                }
                if ((Original_ViewName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ViewName));
                }
                if ((Original_TaskListDisplayString == null))
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_TaskListDisplayString));
                }
                if ((Original_MaxRecsPerFetch.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_MaxRecsPerFetch.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
                }
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Id));
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string TableName, string ViewName, string SQLStatement, string TaskListDisplayString, global::System.Nullable<int> MaxRecsPerFetch, int Original_Id, string Original_TableName, string Original_ViewName, string Original_TaskListDisplayString, global::System.Nullable<int> Original_MaxRecsPerFetch)
            {
                return this.Update(TableName, ViewName, SQLStatement, TaskListDisplayString, MaxRecsPerFetch, Original_Id, Original_TableName, Original_ViewName, Original_TaskListDisplayString, Original_MaxRecsPerFetch, Original_Id);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class SLTextSearchItemsTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLTextSearchItemsTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "SLTextSearchItems";
                tableMapping.ColumnMappings.Add("IndexTableName", "IndexTableName");
                tableMapping.ColumnMappings.Add("IndexFieldName", "IndexFieldName");
                this._adapter.TableMappings.Add(tableMapping);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT     IndexTableName, IndexFieldName\r\nFROM         SLTextSearchItems\r\nWHERE " +
                    "    (NOT (IndexFieldName IS NULL))";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = "SELECT        IndexTableName, IndexFieldName\r\nFROM            SLTextSearchItems\r\n" +
                    "WHERE        (NOT (IndexFieldName IS NULL)) AND (IndexTableName = @TableName)";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TableName", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "IndexTableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[2].Connection = this.Connection;
                this._commandCollection[2].CommandText = "SELECT DISTINCT s.IndexTableName, t.SearchOrder\r\nFROM            SLTextSearchItem" +
                    "s AS s INNER JOIN\r\n                         Tables AS t ON t.TableName = s.Index" +
                    "TableName\r\nWHERE        (NOT (s.IndexTableName IS NULL))\r\nORDER BY t.SearchOrder" +
                    "";
                this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.SLTextSearchItemsDataTable GetData()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.SLTextSearchItemsDataTable dataTable = new RecordsManage.SLTextSearchItemsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.SLTextSearchItemsDataTable GetSearchableFields(string TableName)
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                if ((TableName == null))
                {
                    throw new global::System.ArgumentNullException("TableName");
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(TableName));
                }
                RecordsManage.SLTextSearchItemsDataTable dataTable = new RecordsManage.SLTextSearchItemsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.SLTextSearchItemsDataTable GetSearchTables()
            {
                this.Adapter.SelectCommand = this.CommandCollection[2];
                RecordsManage.SLTextSearchItemsDataTable dataTable = new RecordsManage.SLTextSearchItemsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class PrimaryKeyTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrimaryKeyTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "PrimaryKey";
                tableMapping.ColumnMappings.Add("name", "name");
                this._adapter.TableMappings.Add(tableMapping);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = @"SELECT [name]
  FROM syscolumns 
 WHERE [id] IN (SELECT [id] 
                  FROM sysobjects 
                 WHERE [name] = @table_name)
   AND colid IN (SELECT SIK.colid 
                   FROM sysindexkeys SIK 
                   JOIN sysobjects SO ON SIK.[id] = SO.[id]  
                  WHERE SIK.indid = 1
                    AND SO.[name] = @table_name)
";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@table_name", global::System.Data.SqlDbType.NVarChar, 256, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = @"SELECT [name]
  FROM syscolumns 
 WHERE [id] IN (SELECT [id] 
                  FROM sysobjects 
                 WHERE [name] = @table_name)
   AND colid IN (SELECT SIK.colid 
                   FROM sysindexkeys SIK 
                   JOIN sysobjects SO ON SIK.[id] = SO.[id]  
                  WHERE SIK.indid = 1
                    AND SO.[name] = @table_name)
";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@table_name", global::System.Data.SqlDbType.NVarChar, 256, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
            public virtual int Fill(RecordsManage.PrimaryKeyDataTable dataTable, string table_name)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((table_name == null))
                {
                    throw new global::System.ArgumentNullException("table_name");
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(table_name));
                }
                if ((this.ClearBeforeFill == true))
                {
                    dataTable.Clear();
                }
                int returnValue = this.Adapter.Fill(dataTable);
                return returnValue;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.PrimaryKeyDataTable GetPrimaryKey(string table_name)
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                if ((table_name == null))
                {
                    throw new global::System.ArgumentNullException("table_name");
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(table_name));
                }
                RecordsManage.PrimaryKeyDataTable dataTable = new RecordsManage.PrimaryKeyDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class SystemTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SystemTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "System";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("UserName", "UserName");
                tableMapping.ColumnMappings.Add("HeadingHeight", "HeadingHeight");
                tableMapping.ColumnMappings.Add("RowHeight", "RowHeight");
                tableMapping.ColumnMappings.Add("GridFontName", "GridFontName");
                tableMapping.ColumnMappings.Add("GridFontSize", "GridFontSize");
                tableMapping.ColumnMappings.Add("GridFontBold", "GridFontBold");
                tableMapping.ColumnMappings.Add("GridHdrAttributes", "GridHdrAttributes");
                tableMapping.ColumnMappings.Add("TabFontName", "TabFontName");
                tableMapping.ColumnMappings.Add("TabFontSize", "TabFontSize");
                tableMapping.ColumnMappings.Add("TabFontBold", "TabFontBold");
                tableMapping.ColumnMappings.Add("BaseFontName", "BaseFontName");
                tableMapping.ColumnMappings.Add("BaseFontSize", "BaseFontSize");
                tableMapping.ColumnMappings.Add("BaseFontBold", "BaseFontBold");
                tableMapping.ColumnMappings.Add("GridOffsetX", "GridOffsetX");
                tableMapping.ColumnMappings.Add("GridOffsetY", "GridOffsetY");
                tableMapping.ColumnMappings.Add("TabMaxWidth", "TabMaxWidth");
                tableMapping.ColumnMappings.Add("TabCutSize", "TabCutSize");
                tableMapping.ColumnMappings.Add("TabHeight", "TabHeight");
                tableMapping.ColumnMappings.Add("TabRowOffset", "TabRowOffset");
                tableMapping.ColumnMappings.Add("TabSelectType", "TabSelectType");
                tableMapping.ColumnMappings.Add("TabsPerRow", "TabsPerRow");
                tableMapping.ColumnMappings.Add("FrameWidth", "FrameWidth");
                tableMapping.ColumnMappings.Add("RMAGgroup", "RMAGgroup");
                tableMapping.ColumnMappings.Add("MgrGroup", "MgrGroup");
                tableMapping.ColumnMappings.Add("LibrarianMDIPercent", "LibrarianMDIPercent");
                tableMapping.ColumnMappings.Add("ImageBackColor1", "ImageBackColor1");
                tableMapping.ColumnMappings.Add("ImageBackColor2", "ImageBackColor2");
                tableMapping.ColumnMappings.Add("ImageBackColor3", "ImageBackColor3");
                tableMapping.ColumnMappings.Add("ImageGridBackColor1", "ImageGridBackColor1");
                tableMapping.ColumnMappings.Add("ImageGridBackColor2", "ImageGridBackColor2");
                tableMapping.ColumnMappings.Add("ImageGridBackColor3", "ImageGridBackColor3");
                tableMapping.ColumnMappings.Add("AnnotationAdd", "AnnotationAdd");
                tableMapping.ColumnMappings.Add("AnnotationEdit", "AnnotationEdit");
                tableMapping.ColumnMappings.Add("AnnotationDelete", "AnnotationDelete");
                tableMapping.ColumnMappings.Add("AnnotationView", "AnnotationView");
                tableMapping.ColumnMappings.Add("NoGridURL", "NoGridURL");
                tableMapping.ColumnMappings.Add("ADOConnectionTimeout", "ADOConnectionTimeout");
                tableMapping.ColumnMappings.Add("DefaultOutputSettingsId", "DefaultOutputSettingsId");
                tableMapping.ColumnMappings.Add("LSAfterDestinationScanned", "LSAfterDestinationScanned");
                tableMapping.ColumnMappings.Add("LSAfterObjectScanned", "LSAfterObjectScanned");
                tableMapping.ColumnMappings.Add("LSAfterDestinationAccepted", "LSAfterDestinationAccepted");
                tableMapping.ColumnMappings.Add("LSAfterObjectAccepted", "LSAfterObjectAccepted");
                tableMapping.ColumnMappings.Add("LSAfterTrackingComplete", "LSAfterTrackingComplete");
                tableMapping.ColumnMappings.Add("UseViewDisplayMode", "UseViewDisplayMode");
                tableMapping.ColumnMappings.Add("FormViewMinLines", "FormViewMinLines");
                tableMapping.ColumnMappings.Add("ImportRunGroup", "ImportRunGroup");
                tableMapping.ColumnMappings.Add("ExpressSetupGroup", "ExpressSetupGroup");
                tableMapping.ColumnMappings.Add("ManualTrackingGroup", "ManualTrackingGroup");
                tableMapping.ColumnMappings.Add("MaxHistoryDays", "MaxHistoryDays");
                tableMapping.ColumnMappings.Add("MaxHistoryItems", "MaxHistoryItems");
                tableMapping.ColumnMappings.Add("TrackingAdditionalField1Desc", "TrackingAdditionalField1Desc");
                tableMapping.ColumnMappings.Add("TrackingAdditionalField1Type", "TrackingAdditionalField1Type");
                tableMapping.ColumnMappings.Add("TrackingAdditionalField2Desc", "TrackingAdditionalField2Desc");
                tableMapping.ColumnMappings.Add("AllowRequests", "AllowRequests");
                tableMapping.ColumnMappings.Add("AllowWaitList", "AllowWaitList");
                tableMapping.ColumnMappings.Add("PopupWaitList", "PopupWaitList");
                tableMapping.ColumnMappings.Add("RequestorOperatorGrp", "RequestorOperatorGrp");
                tableMapping.ColumnMappings.Add("RequestorHighPGrp", "RequestorHighPGrp");
                tableMapping.ColumnMappings.Add("RetentionTurnOffCitations", "RetentionTurnOffCitations");
                tableMapping.ColumnMappings.Add("RetentionYearEnd", "RetentionYearEnd");
                tableMapping.ColumnMappings.Add("RetentionAttachDelGroup", "RetentionAttachDelGroup");
                tableMapping.ColumnMappings.Add("RetentionOperatorGroup", "RetentionOperatorGroup");
                tableMapping.ColumnMappings.Add("GridBackColorEven", "GridBackColorEven");
                tableMapping.ColumnMappings.Add("GridBackColorOdd", "GridBackColorOdd");
                tableMapping.ColumnMappings.Add("GridForeColorEven", "GridForeColorEven");
                tableMapping.ColumnMappings.Add("GridForeColorOdd", "GridForeColorOdd");
                tableMapping.ColumnMappings.Add("ReportGridColor", "ReportGridColor");
                tableMapping.ColumnMappings.Add("AlternateRowColors", "AlternateRowColors");
                tableMapping.ColumnMappings.Add("ArchGroup", "ArchGroup");
                tableMapping.ColumnMappings.Add("COLDGroup", "COLDGroup");
                tableMapping.ColumnMappings.Add("DateDueOn", "DateDueOn");
                tableMapping.ColumnMappings.Add("FaxmGroup", "FaxmGroup");
                tableMapping.ColumnMappings.Add("ImportGroup", "ImportGroup");
                tableMapping.ColumnMappings.Add("LabelGroup", "LabelGroup");
                tableMapping.ColumnMappings.Add("LitigationOn", "LitigationOn");
                tableMapping.ColumnMappings.Add("NetworkSecurityOn", "NetworkSecurityOn");
                tableMapping.ColumnMappings.Add("OtherGroup", "OtherGroup");
                tableMapping.ColumnMappings.Add("PCFilesEditGrp", "PCFilesEditGrp");
                tableMapping.ColumnMappings.Add("PCFilesNVerGrp", "PCFilesNVerGrp");
                tableMapping.ColumnMappings.Add("Picture", "Picture");
                tableMapping.ColumnMappings.Add("PrintFast", "PrintFast");
                tableMapping.ColumnMappings.Add("ReconciliationOn", "ReconciliationOn");
                tableMapping.ColumnMappings.Add("RedactViewGrp", "RedactViewGrp");
                tableMapping.ColumnMappings.Add("RetentionOn", "RetentionOn");
                tableMapping.ColumnMappings.Add("ScanGroup", "ScanGroup");
                tableMapping.ColumnMappings.Add("SecurityGroup", "SecurityGroup");
                tableMapping.ColumnMappings.Add("SQLGroup", "SQLGroup");
                tableMapping.ColumnMappings.Add("TrackingGroup", "TrackingGroup");
                tableMapping.ColumnMappings.Add("TrackingOutOn", "TrackingOutOn");
                tableMapping.ColumnMappings.Add("ReqAutoPrintMethod", "ReqAutoPrintMethod");
                tableMapping.ColumnMappings.Add("ReqAutoPrintCopies", "ReqAutoPrintCopies");
                tableMapping.ColumnMappings.Add("ReqAutoPrintInterval", "ReqAutoPrintInterval");
                tableMapping.ColumnMappings.Add("ReqAutoPrintIDType", "ReqAutoPrintIDType");
                tableMapping.ColumnMappings.Add("BatchRequestGroup", "BatchRequestGroup");
                tableMapping.ColumnMappings.Add("AuditingSecurityManagerGrp", "AuditingSecurityManagerGrp");
                tableMapping.ColumnMappings.Add("RequestConfirmation", "RequestConfirmation");
                tableMapping.ColumnMappings.Add("EMailDeliveryEnabled", "EMailDeliveryEnabled");
                tableMapping.ColumnMappings.Add("EMailWaitListEnabled", "EMailWaitListEnabled");
                tableMapping.ColumnMappings.Add("EMailSendMethod", "EMailSendMethod");
                tableMapping.ColumnMappings.Add("EMailConfirmationType", "EMailConfirmationType");
                tableMapping.ColumnMappings.Add("SMTPAuthentication", "SMTPAuthentication");
                tableMapping.ColumnMappings.Add("SMTPPort", "SMTPPort");
                tableMapping.ColumnMappings.Add("SMTPServer", "SMTPServer");
                tableMapping.ColumnMappings.Add("SMTPUserAddress", "SMTPUserAddress");
                tableMapping.ColumnMappings.Add("SMTPUserPassword", "SMTPUserPassword");
                tableMapping.ColumnMappings.Add("LastPastDueEmailTime", "LastPastDueEmailTime");
                tableMapping.ColumnMappings.Add("LastPastDueEmailUser", "LastPastDueEmailUser");
                tableMapping.ColumnMappings.Add("EMailExceptionEnabled", "EMailExceptionEnabled");
                tableMapping.ColumnMappings.Add("DefaultDueBackDays", "DefaultDueBackDays");
                tableMapping.ColumnMappings.Add("ImageCaptureGroup", "ImageCaptureGroup");
                tableMapping.ColumnMappings.Add("ExportGroup", "ExportGroup");
                tableMapping.ColumnMappings.Add("NotificationEnabled", "NotificationEnabled");
                tableMapping.ColumnMappings.Add("AttachmentVersionGroup", "AttachmentVersionGroup");
                tableMapping.ColumnMappings.Add("RedactEditGrp", "RedactEditGrp");
                tableMapping.ColumnMappings.Add("UseTableIcons", "UseTableIcons");
                tableMapping.ColumnMappings.Add("SignatureCaptureOn", "SignatureCaptureOn");
                tableMapping.ColumnMappings.Add("InactiveRecordGroup", "InactiveRecordGroup");
                tableMapping.ColumnMappings.Add("PrintImageFooter", "PrintImageFooter");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = "DELETE FROM [System] WHERE (([Id] = @Original_Id) AND ((@IsNull_UserName = 1 AND " +
                    "[UserName] IS NULL) OR ([UserName] = @Original_UserName)) AND ((@IsNull_HeadingH" +
                    "eight = 1 AND [HeadingHeight] IS NULL) OR ([HeadingHeight] = @Original_HeadingHe" +
                    "ight)) AND ((@IsNull_RowHeight = 1 AND [RowHeight] IS NULL) OR ([RowHeight] = @O" +
                    "riginal_RowHeight)) AND ((@IsNull_GridFontName = 1 AND [GridFontName] IS NULL) O" +
                    "R ([GridFontName] = @Original_GridFontName)) AND ((@IsNull_GridFontSize = 1 AND " +
                    "[GridFontSize] IS NULL) OR ([GridFontSize] = @Original_GridFontSize)) AND ((@IsN" +
                    "ull_GridFontBold = 1 AND [GridFontBold] IS NULL) OR ([GridFontBold] = @Original_" +
                    "GridFontBold)) AND ((@IsNull_GridHdrAttributes = 1 AND [GridHdrAttributes] IS NU" +
                    "LL) OR ([GridHdrAttributes] = @Original_GridHdrAttributes)) AND ((@IsNull_TabFon" +
                    "tName = 1 AND [TabFontName] IS NULL) OR ([TabFontName] = @Original_TabFontName))" +
                    " AND ((@IsNull_TabFontSize = 1 AND [TabFontSize] IS NULL) OR ([TabFontSize] = @O" +
                    "riginal_TabFontSize)) AND ((@IsNull_TabFontBold = 1 AND [TabFontBold] IS NULL) O" +
                    "R ([TabFontBold] = @Original_TabFontBold)) AND ((@IsNull_BaseFontName = 1 AND [B" +
                    "aseFontName] IS NULL) OR ([BaseFontName] = @Original_BaseFontName)) AND ((@IsNul" +
                    "l_BaseFontSize = 1 AND [BaseFontSize] IS NULL) OR ([BaseFontSize] = @Original_Ba" +
                    "seFontSize)) AND ((@IsNull_BaseFontBold = 1 AND [BaseFontBold] IS NULL) OR ([Bas" +
                    "eFontBold] = @Original_BaseFontBold)) AND ((@IsNull_GridOffsetX = 1 AND [GridOff" +
                    "setX] IS NULL) OR ([GridOffsetX] = @Original_GridOffsetX)) AND ((@IsNull_GridOff" +
                    "setY = 1 AND [GridOffsetY] IS NULL) OR ([GridOffsetY] = @Original_GridOffsetY)) " +
                    "AND ((@IsNull_TabMaxWidth = 1 AND [TabMaxWidth] IS NULL) OR ([TabMaxWidth] = @Or" +
                    "iginal_TabMaxWidth)) AND ((@IsNull_TabCutSize = 1 AND [TabCutSize] IS NULL) OR (" +
                    "[TabCutSize] = @Original_TabCutSize)) AND ((@IsNull_TabHeight = 1 AND [TabHeight" +
                    "] IS NULL) OR ([TabHeight] = @Original_TabHeight)) AND ((@IsNull_TabRowOffset = " +
                    "1 AND [TabRowOffset] IS NULL) OR ([TabRowOffset] = @Original_TabRowOffset)) AND " +
                    "((@IsNull_TabSelectType = 1 AND [TabSelectType] IS NULL) OR ([TabSelectType] = @" +
                    "Original_TabSelectType)) AND ((@IsNull_TabsPerRow = 1 AND [TabsPerRow] IS NULL) " +
                    "OR ([TabsPerRow] = @Original_TabsPerRow)) AND ((@IsNull_FrameWidth = 1 AND [Fram" +
                    "eWidth] IS NULL) OR ([FrameWidth] = @Original_FrameWidth)) AND ((@IsNull_RMAGgro" +
                    "up = 1 AND [RMAGgroup] IS NULL) OR ([RMAGgroup] = @Original_RMAGgroup)) AND ((@I" +
                    "sNull_MgrGroup = 1 AND [MgrGroup] IS NULL) OR ([MgrGroup] = @Original_MgrGroup))" +
                    " AND ((@IsNull_LibrarianMDIPercent = 1 AND [LibrarianMDIPercent] IS NULL) OR ([L" +
                    "ibrarianMDIPercent] = @Original_LibrarianMDIPercent)) AND ((@IsNull_ImageBackCol" +
                    "or1 = 1 AND [ImageBackColor1] IS NULL) OR ([ImageBackColor1] = @Original_ImageBa" +
                    "ckColor1)) AND ((@IsNull_ImageBackColor2 = 1 AND [ImageBackColor2] IS NULL) OR (" +
                    "[ImageBackColor2] = @Original_ImageBackColor2)) AND ((@IsNull_ImageBackColor3 = " +
                    "1 AND [ImageBackColor3] IS NULL) OR ([ImageBackColor3] = @Original_ImageBackColo" +
                    "r3)) AND ((@IsNull_ImageGridBackColor1 = 1 AND [ImageGridBackColor1] IS NULL) OR" +
                    " ([ImageGridBackColor1] = @Original_ImageGridBackColor1)) AND ((@IsNull_ImageGri" +
                    "dBackColor2 = 1 AND [ImageGridBackColor2] IS NULL) OR ([ImageGridBackColor2] = @" +
                    "Original_ImageGridBackColor2)) AND ((@IsNull_ImageGridBackColor3 = 1 AND [ImageG" +
                    "ridBackColor3] IS NULL) OR ([ImageGridBackColor3] = @Original_ImageGridBackColor" +
                    "3)) AND ((@IsNull_AnnotationAdd = 1 AND [AnnotationAdd] IS NULL) OR ([Annotation" +
                    "Add] = @Original_AnnotationAdd)) AND ((@IsNull_AnnotationEdit = 1 AND [Annotatio" +
                    "nEdit] IS NULL) OR ([AnnotationEdit] = @Original_AnnotationEdit)) AND ((@IsNull_" +
                    "AnnotationDelete = 1 AND [AnnotationDelete] IS NULL) OR ([AnnotationDelete] = @O" +
                    "riginal_AnnotationDelete)) AND ((@IsNull_AnnotationView = 1 AND [AnnotationView]" +
                    " IS NULL) OR ([AnnotationView] = @Original_AnnotationView)) AND ((@IsNull_NoGrid" +
                    "URL = 1 AND [NoGridURL] IS NULL) OR ([NoGridURL] = @Original_NoGridURL)) AND ((@" +
                    "IsNull_ADOConnectionTimeout = 1 AND [ADOConnectionTimeout] IS NULL) OR ([ADOConn" +
                    "ectionTimeout] = @Original_ADOConnectionTimeout)) AND ((@IsNull_DefaultOutputSet" +
                    "tingsId = 1 AND [DefaultOutputSettingsId] IS NULL) OR ([DefaultOutputSettingsId]" +
                    " = @Original_DefaultOutputSettingsId)) AND ((@IsNull_LSAfterDestinationScanned =" +
                    " 1 AND [LSAfterDestinationScanned] IS NULL) OR ([LSAfterDestinationScanned] = @O" +
                    "riginal_LSAfterDestinationScanned)) AND ((@IsNull_LSAfterObjectScanned = 1 AND [" +
                    "LSAfterObjectScanned] IS NULL) OR ([LSAfterObjectScanned] = @Original_LSAfterObj" +
                    "ectScanned)) AND ((@IsNull_LSAfterDestinationAccepted = 1 AND [LSAfterDestinatio" +
                    "nAccepted] IS NULL) OR ([LSAfterDestinationAccepted] = @Original_LSAfterDestinat" +
                    "ionAccepted)) AND ((@IsNull_LSAfterObjectAccepted = 1 AND [LSAfterObjectAccepted" +
                    "] IS NULL) OR ([LSAfterObjectAccepted] = @Original_LSAfterObjectAccepted)) AND (" +
                    "(@IsNull_LSAfterTrackingComplete = 1 AND [LSAfterTrackingComplete] IS NULL) OR (" +
                    "[LSAfterTrackingComplete] = @Original_LSAfterTrackingComplete)) AND ((@IsNull_Us" +
                    "eViewDisplayMode = 1 AND [UseViewDisplayMode] IS NULL) OR ([UseViewDisplayMode] " +
                    "= @Original_UseViewDisplayMode)) AND ((@IsNull_FormViewMinLines = 1 AND [FormVie" +
                    "wMinLines] IS NULL) OR ([FormViewMinLines] = @Original_FormViewMinLines)) AND ((" +
                    "@IsNull_ImportRunGroup = 1 AND [ImportRunGroup] IS NULL) OR ([ImportRunGroup] = " +
                    "@Original_ImportRunGroup)) AND ((@IsNull_ExpressSetupGroup = 1 AND [ExpressSetup" +
                    "Group] IS NULL) OR ([ExpressSetupGroup] = @Original_ExpressSetupGroup)) AND ((@I" +
                    "sNull_ManualTrackingGroup = 1 AND [ManualTrackingGroup] IS NULL) OR ([ManualTrac" +
                    "kingGroup] = @Original_ManualTrackingGroup)) AND ((@IsNull_MaxHistoryDays = 1 AN" +
                    "D [MaxHistoryDays] IS NULL) OR ([MaxHistoryDays] = @Original_MaxHistoryDays)) AN" +
                    "D ((@IsNull_MaxHistoryItems = 1 AND [MaxHistoryItems] IS NULL) OR ([MaxHistoryIt" +
                    "ems] = @Original_MaxHistoryItems)) AND ((@IsNull_TrackingAdditionalField1Desc = " +
                    "1 AND [TrackingAdditionalField1Desc] IS NULL) OR ([TrackingAdditionalField1Desc]" +
                    " = @Original_TrackingAdditionalField1Desc)) AND ((@IsNull_TrackingAdditionalFiel" +
                    "d1Type = 1 AND [TrackingAdditionalField1Type] IS NULL) OR ([TrackingAdditionalFi" +
                    "eld1Type] = @Original_TrackingAdditionalField1Type)) AND ((@IsNull_TrackingAddit" +
                    "ionalField2Desc = 1 AND [TrackingAdditionalField2Desc] IS NULL) OR ([TrackingAdd" +
                    "itionalField2Desc] = @Original_TrackingAdditionalField2Desc)) AND ((@IsNull_Allo" +
                    "wRequests = 1 AND [AllowRequests] IS NULL) OR ([AllowRequests] = @Original_Allow" +
                    "Requests)) AND ((@IsNull_AllowWaitList = 1 AND [AllowWaitList] IS NULL) OR ([All" +
                    "owWaitList] = @Original_AllowWaitList)) AND ((@IsNull_PopupWaitList = 1 AND [Pop" +
                    "upWaitList] IS NULL) OR ([PopupWaitList] = @Original_PopupWaitList)) AND ((@IsNu" +
                    "ll_RequestorOperatorGrp = 1 AND [RequestorOperatorGrp] IS NULL) OR ([RequestorOp" +
                    "eratorGrp] = @Original_RequestorOperatorGrp)) AND ((@IsNull_RequestorHighPGrp = " +
                    "1 AND [RequestorHighPGrp] IS NULL) OR ([RequestorHighPGrp] = @Original_Requestor" +
                    "HighPGrp)) AND ((@IsNull_RetentionTurnOffCitations = 1 AND [RetentionTurnOffCita" +
                    "tions] IS NULL) OR ([RetentionTurnOffCitations] = @Original_RetentionTurnOffCita" +
                    "tions)) AND ((@IsNull_RetentionYearEnd = 1 AND [RetentionYearEnd] IS NULL) OR ([" +
                    "RetentionYearEnd] = @Original_RetentionYearEnd)) AND ((@IsNull_RetentionAttachDe" +
                    "lGroup = 1 AND [RetentionAttachDelGroup] IS NULL) OR ([RetentionAttachDelGroup] " +
                    "= @Original_RetentionAttachDelGroup)) AND ((@IsNull_RetentionOperatorGroup = 1 A" +
                    "ND [RetentionOperatorGroup] IS NULL) OR ([RetentionOperatorGroup] = @Original_Re" +
                    "tentionOperatorGroup)) AND ((@IsNull_GridBackColorEven = 1 AND [GridBackColorEve" +
                    "n] IS NULL) OR ([GridBackColorEven] = @Original_GridBackColorEven)) AND ((@IsNul" +
                    "l_GridBackColorOdd = 1 AND [GridBackColorOdd] IS NULL) OR ([GridBackColorOdd] = " +
                    "@Original_GridBackColorOdd)) AND ((@IsNull_GridForeColorEven = 1 AND [GridForeCo" +
                    "lorEven] IS NULL) OR ([GridForeColorEven] = @Original_GridForeColorEven)) AND ((" +
                    "@IsNull_GridForeColorOdd = 1 AND [GridForeColorOdd] IS NULL) OR ([GridForeColorO" +
                    "dd] = @Original_GridForeColorOdd)) AND ((@IsNull_ReportGridColor = 1 AND [Report" +
                    "GridColor] IS NULL) OR ([ReportGridColor] = @Original_ReportGridColor)) AND ((@I" +
                    "sNull_AlternateRowColors = 1 AND [AlternateRowColors] IS NULL) OR ([AlternateRow" +
                    "Colors] = @Original_AlternateRowColors)) AND ((@IsNull_ArchGroup = 1 AND [ArchGr" +
                    "oup] IS NULL) OR ([ArchGroup] = @Original_ArchGroup)) AND ((@IsNull_COLDGroup = " +
                    "1 AND [COLDGroup] IS NULL) OR ([COLDGroup] = @Original_COLDGroup)) AND ((@IsNull" +
                    "_DateDueOn = 1 AND [DateDueOn] IS NULL) OR ([DateDueOn] = @Original_DateDueOn)) " +
                    "AND ((@IsNull_FaxmGroup = 1 AND [FaxmGroup] IS NULL) OR ([FaxmGroup] = @Original" +
                    "_FaxmGroup)) AND ((@IsNull_ImportGroup = 1 AND [ImportGroup] IS NULL) OR ([Impor" +
                    "tGroup] = @Original_ImportGroup)) AND ((@IsNull_LabelGroup = 1 AND [LabelGroup] " +
                    "IS NULL) OR ([LabelGroup] = @Original_LabelGroup)) AND ((@IsNull_LitigationOn = " +
                    "1 AND [LitigationOn] IS NULL) OR ([LitigationOn] = @Original_LitigationOn)) AND " +
                    "((@IsNull_NetworkSecurityOn = 1 AND [NetworkSecurityOn] IS NULL) OR ([NetworkSec" +
                    "urityOn] = @Original_NetworkSecurityOn)) AND ((@IsNull_OtherGroup = 1 AND [Other" +
                    "Group] IS NULL) OR ([OtherGroup] = @Original_OtherGroup)) AND ((@IsNull_PCFilesE" +
                    "ditGrp = 1 AND [PCFilesEditGrp] IS NULL) OR ([PCFilesEditGrp] = @Original_PCFile" +
                    "sEditGrp)) AND ((@IsNull_PCFilesNVerGrp = 1 AND [PCFilesNVerGrp] IS NULL) OR ([P" +
                    "CFilesNVerGrp] = @Original_PCFilesNVerGrp)) AND ((@IsNull_Picture = 1 AND [Pictu" +
                    "re] IS NULL) OR ([Picture] = @Original_Picture)) AND ((@IsNull_PrintFast = 1 AND" +
                    " [PrintFast] IS NULL) OR ([PrintFast] = @Original_PrintFast)) AND ((@IsNull_Reco" +
                    "nciliationOn = 1 AND [ReconciliationOn] IS NULL) OR ([ReconciliationOn] = @Origi" +
                    "nal_ReconciliationOn)) AND ((@IsNull_RedactViewGrp = 1 AND [RedactViewGrp] IS NU" +
                    "LL) OR ([RedactViewGrp] = @Original_RedactViewGrp)) AND ((@IsNull_RetentionOn = " +
                    "1 AND [RetentionOn] IS NULL) OR ([RetentionOn] = @Original_RetentionOn)) AND ((@" +
                    "IsNull_ScanGroup = 1 AND [ScanGroup] IS NULL) OR ([ScanGroup] = @Original_ScanGr" +
                    "oup)) AND ((@IsNull_SecurityGroup = 1 AND [SecurityGroup] IS NULL) OR ([Security" +
                    "Group] = @Original_SecurityGroup)) AND ((@IsNull_SQLGroup = 1 AND [SQLGroup] IS " +
                    "NULL) OR ([SQLGroup] = @Original_SQLGroup)) AND ((@IsNull_TrackingGroup = 1 AND " +
                    "[TrackingGroup] IS NULL) OR ([TrackingGroup] = @Original_TrackingGroup)) AND ((@" +
                    "IsNull_TrackingOutOn = 1 AND [TrackingOutOn] IS NULL) OR ([TrackingOutOn] = @Ori" +
                    "ginal_TrackingOutOn)) AND ((@IsNull_ReqAutoPrintMethod = 1 AND [ReqAutoPrintMeth" +
                    "od] IS NULL) OR ([ReqAutoPrintMethod] = @Original_ReqAutoPrintMethod)) AND ((@Is" +
                    "Null_ReqAutoPrintCopies = 1 AND [ReqAutoPrintCopies] IS NULL) OR ([ReqAutoPrintC" +
                    "opies] = @Original_ReqAutoPrintCopies)) AND ((@IsNull_ReqAutoPrintInterval = 1 A" +
                    "ND [ReqAutoPrintInterval] IS NULL) OR ([ReqAutoPrintInterval] = @Original_ReqAut" +
                    "oPrintInterval)) AND ((@IsNull_ReqAutoPrintIDType = 1 AND [ReqAutoPrintIDType] I" +
                    "S NULL) OR ([ReqAutoPrintIDType] = @Original_ReqAutoPrintIDType)) AND ((@IsNull_" +
                    "BatchRequestGroup = 1 AND [BatchRequestGroup] IS NULL) OR ([BatchRequestGroup] =" +
                    " @Original_BatchRequestGroup)) AND ((@IsNull_AuditingSecurityManagerGrp = 1 AND " +
                    "[AuditingSecurityManagerGrp] IS NULL) OR ([AuditingSecurityManagerGrp] = @Origin" +
                    "al_AuditingSecurityManagerGrp)) AND ((@IsNull_RequestConfirmation = 1 AND [Reque" +
                    "stConfirmation] IS NULL) OR ([RequestConfirmation] = @Original_RequestConfirmati" +
                    "on)) AND ((@IsNull_EMailDeliveryEnabled = 1 AND [EMailDeliveryEnabled] IS NULL) " +
                    "OR ([EMailDeliveryEnabled] = @Original_EMailDeliveryEnabled)) AND ((@IsNull_EMai" +
                    "lWaitListEnabled = 1 AND [EMailWaitListEnabled] IS NULL) OR ([EMailWaitListEnabl" +
                    "ed] = @Original_EMailWaitListEnabled)) AND ((@IsNull_EMailSendMethod = 1 AND [EM" +
                    "ailSendMethod] IS NULL) OR ([EMailSendMethod] = @Original_EMailSendMethod)) AND " +
                    "((@IsNull_EMailConfirmationType = 1 AND [EMailConfirmationType] IS NULL) OR ([EM" +
                    "ailConfirmationType] = @Original_EMailConfirmationType)) AND ((@IsNull_SMTPAuthe" +
                    "ntication = 1 AND [SMTPAuthentication] IS NULL) OR ([SMTPAuthentication] = @Orig" +
                    "inal_SMTPAuthentication)) AND ((@IsNull_SMTPPort = 1 AND [SMTPPort] IS NULL) OR " +
                    "([SMTPPort] = @Original_SMTPPort)) AND ((@IsNull_SMTPServer = 1 AND [SMTPServer]" +
                    " IS NULL) OR ([SMTPServer] = @Original_SMTPServer)) AND ((@IsNull_SMTPUserAddres" +
                    "s = 1 AND [SMTPUserAddress] IS NULL) OR ([SMTPUserAddress] = @Original_SMTPUserA" +
                    "ddress)) AND ((@IsNull_SMTPUserPassword = 1 AND [SMTPUserPassword] IS NULL) OR (" +
                    "[SMTPUserPassword] = @Original_SMTPUserPassword)) AND ((@IsNull_LastPastDueEmail" +
                    "Time = 1 AND [LastPastDueEmailTime] IS NULL) OR ([LastPastDueEmailTime] = @Origi" +
                    "nal_LastPastDueEmailTime)) AND ((@IsNull_LastPastDueEmailUser = 1 AND [LastPastD" +
                    "ueEmailUser] IS NULL) OR ([LastPastDueEmailUser] = @Original_LastPastDueEmailUse" +
                    "r)) AND ((@IsNull_EMailExceptionEnabled = 1 AND [EMailExceptionEnabled] IS NULL)" +
                    " OR ([EMailExceptionEnabled] = @Original_EMailExceptionEnabled)) AND ((@IsNull_D" +
                    "efaultDueBackDays = 1 AND [DefaultDueBackDays] IS NULL) OR ([DefaultDueBackDays]" +
                    " = @Original_DefaultDueBackDays)) AND ((@IsNull_ImageCaptureGroup = 1 AND [Image" +
                    "CaptureGroup] IS NULL) OR ([ImageCaptureGroup] = @Original_ImageCaptureGroup)) A" +
                    "ND ((@IsNull_ExportGroup = 1 AND [ExportGroup] IS NULL) OR ([ExportGroup] = @Ori" +
                    "ginal_ExportGroup)) AND ((@IsNull_NotificationEnabled = 1 AND [NotificationEnabl" +
                    "ed] IS NULL) OR ([NotificationEnabled] = @Original_NotificationEnabled)) AND ((@" +
                    "IsNull_AttachmentVersionGroup = 1 AND [AttachmentVersionGroup] IS NULL) OR ([Att" +
                    "achmentVersionGroup] = @Original_AttachmentVersionGroup)) AND ((@IsNull_RedactEd" +
                    "itGrp = 1 AND [RedactEditGrp] IS NULL) OR ([RedactEditGrp] = @Original_RedactEdi" +
                    "tGrp)) AND ((@IsNull_UseTableIcons = 1 AND [UseTableIcons] IS NULL) OR ([UseTabl" +
                    "eIcons] = @Original_UseTableIcons)) AND ((@IsNull_SignatureCaptureOn = 1 AND [Si" +
                    "gnatureCaptureOn] IS NULL) OR ([SignatureCaptureOn] = @Original_SignatureCapture" +
                    "On)) AND ((@IsNull_InactiveRecordGroup = 1 AND [InactiveRecordGroup] IS NULL) OR" +
                    " ([InactiveRecordGroup] = @Original_InactiveRecordGroup)) AND ((@IsNull_PrintIma" +
                    "geFooter = 1 AND [PrintImageFooter] IS NULL) OR ([PrintImageFooter] = @Original_" +
                    "PrintImageFooter)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HeadingHeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeadingHeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeadingHeight", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeadingHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RowHeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowHeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowHeight", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridFontName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridFontSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridFontBold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontBold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontBold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridHdrAttributes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridHdrAttributes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridHdrAttributes", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridHdrAttributes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontBold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontBold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontBold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseFontName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseFontSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseFontBold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontBold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontBold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridOffsetX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridOffsetX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridOffsetX", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridOffsetX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridOffsetY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridOffsetY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridOffsetY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridOffsetY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabMaxWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabMaxWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabMaxWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabMaxWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabCutSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabCutSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabCutSize", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabCutSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabHeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabHeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabHeight", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabRowOffset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabRowOffset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabRowOffset", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabRowOffset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabSelectType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabSelectType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabSelectType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabSelectType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabsPerRow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabsPerRow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabsPerRow", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabsPerRow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FrameWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrameWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrameWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrameWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RMAGgroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAGgroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAGgroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAGgroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MgrGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MgrGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MgrGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MgrGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LibrarianMDIPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LibrarianMDIPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LibrarianMDIPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LibrarianMDIPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageBackColor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageBackColor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageBackColor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageBackColor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageBackColor3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageBackColor3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageGridBackColor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageGridBackColor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageGridBackColor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageGridBackColor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageGridBackColor3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageGridBackColor3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnnotationAdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationAdd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnnotationAdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationAdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnnotationEdit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationEdit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnnotationEdit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationEdit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnnotationDelete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationDelete", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnnotationDelete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationDelete", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnnotationView", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationView", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnnotationView", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationView", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoGridURL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGridURL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoGridURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGridURL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADOConnectionTimeout", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADOConnectionTimeout", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADOConnectionTimeout", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADOConnectionTimeout", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DefaultOutputSettingsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultOutputSettingsId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DefaultOutputSettingsId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultOutputSettingsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSAfterDestinationScanned", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterDestinationScanned", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSAfterDestinationScanned", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterDestinationScanned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSAfterObjectScanned", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterObjectScanned", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSAfterObjectScanned", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterObjectScanned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSAfterDestinationAccepted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterDestinationAccepted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSAfterDestinationAccepted", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterDestinationAccepted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSAfterObjectAccepted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterObjectAccepted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSAfterObjectAccepted", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterObjectAccepted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSAfterTrackingComplete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterTrackingComplete", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSAfterTrackingComplete", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterTrackingComplete", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UseViewDisplayMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseViewDisplayMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseViewDisplayMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseViewDisplayMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FormViewMinLines", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormViewMinLines", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormViewMinLines", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormViewMinLines", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImportRunGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportRunGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImportRunGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportRunGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExpressSetupGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpressSetupGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExpressSetupGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpressSetupGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ManualTrackingGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManualTrackingGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ManualTrackingGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManualTrackingGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxHistoryDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxHistoryDays", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxHistoryDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxHistoryDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxHistoryItems", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxHistoryItems", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxHistoryItems", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxHistoryItems", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingAdditionalField1Desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1Desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingAdditionalField1Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1Desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingAdditionalField1Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingAdditionalField1Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingAdditionalField2Desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField2Desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingAdditionalField2Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField2Desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AllowRequests", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowRequests", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowRequests", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowRequests", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AllowWaitList", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowWaitList", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowWaitList", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowWaitList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PopupWaitList", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopupWaitList", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PopupWaitList", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopupWaitList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RequestorOperatorGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestorOperatorGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestorOperatorGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestorOperatorGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RequestorHighPGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestorHighPGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestorHighPGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestorHighPGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RetentionTurnOffCitations", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionTurnOffCitations", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RetentionTurnOffCitations", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionTurnOffCitations", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RetentionYearEnd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionYearEnd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RetentionYearEnd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionYearEnd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RetentionAttachDelGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionAttachDelGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RetentionAttachDelGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionAttachDelGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RetentionOperatorGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionOperatorGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RetentionOperatorGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionOperatorGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridBackColorEven", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridBackColorEven", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridBackColorEven", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridBackColorEven", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridBackColorOdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridBackColorOdd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridBackColorOdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridBackColorOdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridForeColorEven", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridForeColorEven", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridForeColorEven", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridForeColorEven", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridForeColorOdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridForeColorOdd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridForeColorOdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridForeColorOdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReportGridColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReportGridColor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReportGridColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReportGridColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlternateRowColors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateRowColors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternateRowColors", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateRowColors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArchGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArchGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArchGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArchGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COLDGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COLDGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COLDGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COLDGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateDueOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDueOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateDueOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDueOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FaxmGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaxmGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FaxmGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaxmGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImportGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImportGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LabelGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabelGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LabelGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabelGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LitigationOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LitigationOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LitigationOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LitigationOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NetworkSecurityOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetworkSecurityOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetworkSecurityOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetworkSecurityOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PCFilesEditGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesEditGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCFilesEditGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesEditGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PCFilesNVerGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesNVerGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCFilesNVerGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesNVerGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Picture", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Picture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintFast", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintFast", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintFast", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintFast", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReconciliationOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReconciliationOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReconciliationOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReconciliationOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RedactViewGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RedactViewGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RedactViewGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RedactViewGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RetentionOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RetentionOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ScanGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScanGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScanGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScanGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecurityGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecurityGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SQLGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SQLGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SQLGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SQLGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingOutOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingOutOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingOutOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingOutOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReqAutoPrintMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReqAutoPrintMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReqAutoPrintCopies", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintCopies", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReqAutoPrintCopies", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintCopies", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReqAutoPrintInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintInterval", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReqAutoPrintInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintInterval", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReqAutoPrintIDType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintIDType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReqAutoPrintIDType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintIDType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchRequestGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchRequestGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchRequestGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchRequestGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AuditingSecurityManagerGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuditingSecurityManagerGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AuditingSecurityManagerGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuditingSecurityManagerGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RequestConfirmation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestConfirmation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestConfirmation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestConfirmation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMailDeliveryEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailDeliveryEnabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMailDeliveryEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailDeliveryEnabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMailWaitListEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailWaitListEnabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMailWaitListEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailWaitListEnabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMailSendMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailSendMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMailSendMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailSendMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMailConfirmationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailConfirmationType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMailConfirmationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailConfirmationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPAuthentication", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPAuthentication", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPAuthentication", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPAuthentication", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPPort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPUserAddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPUserAddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPUserAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPUserAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPUserPassword", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPUserPassword", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPUserPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPUserPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastPastDueEmailTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPastDueEmailTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPastDueEmailTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPastDueEmailTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastPastDueEmailUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPastDueEmailUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPastDueEmailUser", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPastDueEmailUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMailExceptionEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailExceptionEnabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMailExceptionEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailExceptionEnabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DefaultDueBackDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultDueBackDays", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DefaultDueBackDays", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultDueBackDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageCaptureGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageCaptureGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageCaptureGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageCaptureGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExportGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExportGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NotificationEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotificationEnabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NotificationEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotificationEnabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttachmentVersionGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachmentVersionGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttachmentVersionGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachmentVersionGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RedactEditGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RedactEditGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RedactEditGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RedactEditGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UseTableIcons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTableIcons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseTableIcons", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTableIcons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SignatureCaptureOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignatureCaptureOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SignatureCaptureOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignatureCaptureOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InactiveRecordGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InactiveRecordGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InactiveRecordGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InactiveRecordGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintImageFooter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintImageFooter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintImageFooter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintImageFooter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = "UPDATE [System] SET [UserName] = @UserName, [HeadingHeight] = @HeadingHeight, [Ro" +
                    "wHeight] = @RowHeight, [GridFontName] = @GridFontName, [GridFontSize] = @GridFon" +
                    "tSize, [GridFontBold] = @GridFontBold, [GridHdrAttributes] = @GridHdrAttributes," +
                    " [TabFontName] = @TabFontName, [TabFontSize] = @TabFontSize, [TabFontBold] = @Ta" +
                    "bFontBold, [BaseFontName] = @BaseFontName, [BaseFontSize] = @BaseFontSize, [Base" +
                    "FontBold] = @BaseFontBold, [GridOffsetX] = @GridOffsetX, [GridOffsetY] = @GridOf" +
                    "fsetY, [TabMaxWidth] = @TabMaxWidth, [TabCutSize] = @TabCutSize, [TabHeight] = @" +
                    "TabHeight, [TabRowOffset] = @TabRowOffset, [TabSelectType] = @TabSelectType, [Ta" +
                    "bsPerRow] = @TabsPerRow, [FrameWidth] = @FrameWidth, [RMAGgroup] = @RMAGgroup, [" +
                    "MgrGroup] = @MgrGroup, [LibrarianMDIPercent] = @LibrarianMDIPercent, [ImageBackC" +
                    "olor1] = @ImageBackColor1, [ImageBackColor2] = @ImageBackColor2, [ImageBackColor" +
                    "3] = @ImageBackColor3, [ImageGridBackColor1] = @ImageGridBackColor1, [ImageGridB" +
                    "ackColor2] = @ImageGridBackColor2, [ImageGridBackColor3] = @ImageGridBackColor3," +
                    " [AnnotationAdd] = @AnnotationAdd, [AnnotationEdit] = @AnnotationEdit, [Annotati" +
                    "onDelete] = @AnnotationDelete, [AnnotationView] = @AnnotationView, [NoGridURL] =" +
                    " @NoGridURL, [ADOConnectionTimeout] = @ADOConnectionTimeout, [DefaultOutputSetti" +
                    "ngsId] = @DefaultOutputSettingsId, [LSAfterDestinationScanned] = @LSAfterDestina" +
                    "tionScanned, [LSAfterObjectScanned] = @LSAfterObjectScanned, [LSAfterDestination" +
                    "Accepted] = @LSAfterDestinationAccepted, [LSAfterObjectAccepted] = @LSAfterObjec" +
                    "tAccepted, [LSAfterTrackingComplete] = @LSAfterTrackingComplete, [UseViewDisplay" +
                    "Mode] = @UseViewDisplayMode, [FormViewMinLines] = @FormViewMinLines, [ImportRunG" +
                    "roup] = @ImportRunGroup, [ExpressSetupGroup] = @ExpressSetupGroup, [ManualTracki" +
                    "ngGroup] = @ManualTrackingGroup, [MaxHistoryDays] = @MaxHistoryDays, [MaxHistory" +
                    "Items] = @MaxHistoryItems, [TrackingAdditionalField1Desc] = @TrackingAdditionalF" +
                    "ield1Desc, [TrackingAdditionalField1Type] = @TrackingAdditionalField1Type, [Trac" +
                    "kingAdditionalField2Desc] = @TrackingAdditionalField2Desc, [AllowRequests] = @Al" +
                    "lowRequests, [AllowWaitList] = @AllowWaitList, [PopupWaitList] = @PopupWaitList," +
                    " [RequestorOperatorGrp] = @RequestorOperatorGrp, [RequestorHighPGrp] = @Requesto" +
                    "rHighPGrp, [RetentionTurnOffCitations] = @RetentionTurnOffCitations, [RetentionY" +
                    "earEnd] = @RetentionYearEnd, [RetentionAttachDelGroup] = @RetentionAttachDelGrou" +
                    "p, [RetentionOperatorGroup] = @RetentionOperatorGroup, [GridBackColorEven] = @Gr" +
                    "idBackColorEven, [GridBackColorOdd] = @GridBackColorOdd, [GridForeColorEven] = @" +
                    "GridForeColorEven, [GridForeColorOdd] = @GridForeColorOdd, [ReportGridColor] = @" +
                    "ReportGridColor, [AlternateRowColors] = @AlternateRowColors, [ArchGroup] = @Arch" +
                    "Group, [COLDGroup] = @COLDGroup, [DateDueOn] = @DateDueOn, [FaxmGroup] = @FaxmGr" +
                    "oup, [ImportGroup] = @ImportGroup, [LabelGroup] = @LabelGroup, [LitigationOn] = " +
                    "@LitigationOn, [NetworkSecurityOn] = @NetworkSecurityOn, [OtherGroup] = @OtherGr" +
                    "oup, [PCFilesEditGrp] = @PCFilesEditGrp, [PCFilesNVerGrp] = @PCFilesNVerGrp, [Pi" +
                    "cture] = @Picture, [PrintFast] = @PrintFast, [ReconciliationOn] = @Reconciliatio" +
                    "nOn, [RedactViewGrp] = @RedactViewGrp, [RetentionOn] = @RetentionOn, [ScanGroup]" +
                    " = @ScanGroup, [SecurityGroup] = @SecurityGroup, [SQLGroup] = @SQLGroup, [Tracki" +
                    "ngGroup] = @TrackingGroup, [TrackingOutOn] = @TrackingOutOn, [ReqAutoPrintMethod" +
                    "] = @ReqAutoPrintMethod, [ReqAutoPrintCopies] = @ReqAutoPrintCopies, [ReqAutoPri" +
                    "ntInterval] = @ReqAutoPrintInterval, [ReqAutoPrintIDType] = @ReqAutoPrintIDType," +
                    " [BatchRequestGroup] = @BatchRequestGroup, [AuditingSecurityManagerGrp] = @Audit" +
                    "ingSecurityManagerGrp, [RequestConfirmation] = @RequestConfirmation, [EMailDeliv" +
                    "eryEnabled] = @EMailDeliveryEnabled, [EMailWaitListEnabled] = @EMailWaitListEnab" +
                    "led, [EMailSendMethod] = @EMailSendMethod, [EMailConfirmationType] = @EMailConfi" +
                    "rmationType, [SMTPAuthentication] = @SMTPAuthentication, [SMTPPort] = @SMTPPort," +
                    " [SMTPServer] = @SMTPServer, [SMTPUserAddress] = @SMTPUserAddress, [SMTPUserPass" +
                    "word] = @SMTPUserPassword, [LastPastDueEmailTime] = @LastPastDueEmailTime, [Last" +
                    "PastDueEmailUser] = @LastPastDueEmailUser, [EMailExceptionEnabled] = @EMailExcep" +
                    "tionEnabled, [DefaultDueBackDays] = @DefaultDueBackDays, [ImageCaptureGroup] = @" +
                    "ImageCaptureGroup, [ExportGroup] = @ExportGroup, [NotificationEnabled] = @Notifi" +
                    "cationEnabled, [AttachmentVersionGroup] = @AttachmentVersionGroup, [RedactEditGr" +
                    "p] = @RedactEditGrp, [UseTableIcons] = @UseTableIcons, [SignatureCaptureOn] = @S" +
                    "ignatureCaptureOn, [InactiveRecordGroup] = @InactiveRecordGroup, [PrintImageFoot" +
                    "er] = @PrintImageFooter WHERE (([Id] = @Original_Id) AND ((@IsNull_UserName = 1 " +
                    "AND [UserName] IS NULL) OR ([UserName] = @Original_UserName)) AND ((@IsNull_Head" +
                    "ingHeight = 1 AND [HeadingHeight] IS NULL) OR ([HeadingHeight] = @Original_Headi" +
                    "ngHeight)) AND ((@IsNull_RowHeight = 1 AND [RowHeight] IS NULL) OR ([RowHeight] " +
                    "= @Original_RowHeight)) AND ((@IsNull_GridFontName = 1 AND [GridFontName] IS NUL" +
                    "L) OR ([GridFontName] = @Original_GridFontName)) AND ((@IsNull_GridFontSize = 1 " +
                    "AND [GridFontSize] IS NULL) OR ([GridFontSize] = @Original_GridFontSize)) AND ((" +
                    "@IsNull_GridFontBold = 1 AND [GridFontBold] IS NULL) OR ([GridFontBold] = @Origi" +
                    "nal_GridFontBold)) AND ((@IsNull_GridHdrAttributes = 1 AND [GridHdrAttributes] I" +
                    "S NULL) OR ([GridHdrAttributes] = @Original_GridHdrAttributes)) AND ((@IsNull_Ta" +
                    "bFontName = 1 AND [TabFontName] IS NULL) OR ([TabFontName] = @Original_TabFontNa" +
                    "me)) AND ((@IsNull_TabFontSize = 1 AND [TabFontSize] IS NULL) OR ([TabFontSize] " +
                    "= @Original_TabFontSize)) AND ((@IsNull_TabFontBold = 1 AND [TabFontBold] IS NUL" +
                    "L) OR ([TabFontBold] = @Original_TabFontBold)) AND ((@IsNull_BaseFontName = 1 AN" +
                    "D [BaseFontName] IS NULL) OR ([BaseFontName] = @Original_BaseFontName)) AND ((@I" +
                    "sNull_BaseFontSize = 1 AND [BaseFontSize] IS NULL) OR ([BaseFontSize] = @Origina" +
                    "l_BaseFontSize)) AND ((@IsNull_BaseFontBold = 1 AND [BaseFontBold] IS NULL) OR (" +
                    "[BaseFontBold] = @Original_BaseFontBold)) AND ((@IsNull_GridOffsetX = 1 AND [Gri" +
                    "dOffsetX] IS NULL) OR ([GridOffsetX] = @Original_GridOffsetX)) AND ((@IsNull_Gri" +
                    "dOffsetY = 1 AND [GridOffsetY] IS NULL) OR ([GridOffsetY] = @Original_GridOffset" +
                    "Y)) AND ((@IsNull_TabMaxWidth = 1 AND [TabMaxWidth] IS NULL) OR ([TabMaxWidth] =" +
                    " @Original_TabMaxWidth)) AND ((@IsNull_TabCutSize = 1 AND [TabCutSize] IS NULL) " +
                    "OR ([TabCutSize] = @Original_TabCutSize)) AND ((@IsNull_TabHeight = 1 AND [TabHe" +
                    "ight] IS NULL) OR ([TabHeight] = @Original_TabHeight)) AND ((@IsNull_TabRowOffse" +
                    "t = 1 AND [TabRowOffset] IS NULL) OR ([TabRowOffset] = @Original_TabRowOffset)) " +
                    "AND ((@IsNull_TabSelectType = 1 AND [TabSelectType] IS NULL) OR ([TabSelectType]" +
                    " = @Original_TabSelectType)) AND ((@IsNull_TabsPerRow = 1 AND [TabsPerRow] IS NU" +
                    "LL) OR ([TabsPerRow] = @Original_TabsPerRow)) AND ((@IsNull_FrameWidth = 1 AND [" +
                    "FrameWidth] IS NULL) OR ([FrameWidth] = @Original_FrameWidth)) AND ((@IsNull_RMA" +
                    "Ggroup = 1 AND [RMAGgroup] IS NULL) OR ([RMAGgroup] = @Original_RMAGgroup)) AND " +
                    "((@IsNull_MgrGroup = 1 AND [MgrGroup] IS NULL) OR ([MgrGroup] = @Original_MgrGro" +
                    "up)) AND ((@IsNull_LibrarianMDIPercent = 1 AND [LibrarianMDIPercent] IS NULL) OR" +
                    " ([LibrarianMDIPercent] = @Original_LibrarianMDIPercent)) AND ((@IsNull_ImageBac" +
                    "kColor1 = 1 AND [ImageBackColor1] IS NULL) OR ([ImageBackColor1] = @Original_Ima" +
                    "geBackColor1)) AND ((@IsNull_ImageBackColor2 = 1 AND [ImageBackColor2] IS NULL) " +
                    "OR ([ImageBackColor2] = @Original_ImageBackColor2)) AND ((@IsNull_ImageBackColor" +
                    "3 = 1 AND [ImageBackColor3] IS NULL) OR ([ImageBackColor3] = @Original_ImageBack" +
                    "Color3)) AND ((@IsNull_ImageGridBackColor1 = 1 AND [ImageGridBackColor1] IS NULL" +
                    ") OR ([ImageGridBackColor1] = @Original_ImageGridBackColor1)) AND ((@IsNull_Imag" +
                    "eGridBackColor2 = 1 AND [ImageGridBackColor2] IS NULL) OR ([ImageGridBackColor2]" +
                    " = @Original_ImageGridBackColor2)) AND ((@IsNull_ImageGridBackColor3 = 1 AND [Im" +
                    "ageGridBackColor3] IS NULL) OR ([ImageGridBackColor3] = @Original_ImageGridBackC" +
                    "olor3)) AND ((@IsNull_AnnotationAdd = 1 AND [AnnotationAdd] IS NULL) OR ([Annota" +
                    "tionAdd] = @Original_AnnotationAdd)) AND ((@IsNull_AnnotationEdit = 1 AND [Annot" +
                    "ationEdit] IS NULL) OR ([AnnotationEdit] = @Original_AnnotationEdit)) AND ((@IsN" +
                    "ull_AnnotationDelete = 1 AND [AnnotationDelete] IS NULL) OR ([AnnotationDelete] " +
                    "= @Original_AnnotationDelete)) AND ((@IsNull_AnnotationView = 1 AND [AnnotationV" +
                    "iew] IS NULL) OR ([AnnotationView] = @Original_AnnotationView)) AND ((@IsNull_No" +
                    "GridURL = 1 AND [NoGridURL] IS NULL) OR ([NoGridURL] = @Original_NoGridURL)) AND" +
                    " ((@IsNull_ADOConnectionTimeout = 1 AND [ADOConnectionTimeout] IS NULL) OR ([ADO" +
                    "ConnectionTimeout] = @Original_ADOConnectionTimeout)) AND ((@IsNull_DefaultOutpu" +
                    "tSettingsId = 1 AND [DefaultOutputSettingsId] IS NULL) OR ([DefaultOutputSetting" +
                    "sId] = @Original_DefaultOutputSettingsId)) AND ((@IsNull_LSAfterDestinationScann" +
                    "ed = 1 AND [LSAfterDestinationScanned] IS NULL) OR ([LSAfterDestinationScanned] " +
                    "= @Original_LSAfterDestinationScanned)) AND ((@IsNull_LSAfterObjectScanned = 1 A" +
                    "ND [LSAfterObjectScanned] IS NULL) OR ([LSAfterObjectScanned] = @Original_LSAfte" +
                    "rObjectScanned)) AND ((@IsNull_LSAfterDestinationAccepted = 1 AND [LSAfterDestin" +
                    "ationAccepted] IS NULL) OR ([LSAfterDestinationAccepted] = @Original_LSAfterDest" +
                    "inationAccepted)) AND ((@IsNull_LSAfterObjectAccepted = 1 AND [LSAfterObjectAcce" +
                    "pted] IS NULL) OR ([LSAfterObjectAccepted] = @Original_LSAfterObjectAccepted)) A" +
                    "ND ((@IsNull_LSAfterTrackingComplete = 1 AND [LSAfterTrackingComplete] IS NULL) " +
                    "OR ([LSAfterTrackingComplete] = @Original_LSAfterTrackingComplete)) AND ((@IsNul" +
                    "l_UseViewDisplayMode = 1 AND [UseViewDisplayMode] IS NULL) OR ([UseViewDisplayMo" +
                    "de] = @Original_UseViewDisplayMode)) AND ((@IsNull_FormViewMinLines = 1 AND [For" +
                    "mViewMinLines] IS NULL) OR ([FormViewMinLines] = @Original_FormViewMinLines)) AN" +
                    "D ((@IsNull_ImportRunGroup = 1 AND [ImportRunGroup] IS NULL) OR ([ImportRunGroup" +
                    "] = @Original_ImportRunGroup)) AND ((@IsNull_ExpressSetupGroup = 1 AND [ExpressS" +
                    "etupGroup] IS NULL) OR ([ExpressSetupGroup] = @Original_ExpressSetupGroup)) AND " +
                    "((@IsNull_ManualTrackingGroup = 1 AND [ManualTrackingGroup] IS NULL) OR ([Manual" +
                    "TrackingGroup] = @Original_ManualTrackingGroup)) AND ((@IsNull_MaxHistoryDays = " +
                    "1 AND [MaxHistoryDays] IS NULL) OR ([MaxHistoryDays] = @Original_MaxHistoryDays)" +
                    ") AND ((@IsNull_MaxHistoryItems = 1 AND [MaxHistoryItems] IS NULL) OR ([MaxHisto" +
                    "ryItems] = @Original_MaxHistoryItems)) AND ((@IsNull_TrackingAdditionalField1Des" +
                    "c = 1 AND [TrackingAdditionalField1Desc] IS NULL) OR ([TrackingAdditionalField1D" +
                    "esc] = @Original_TrackingAdditionalField1Desc)) AND ((@IsNull_TrackingAdditional" +
                    "Field1Type = 1 AND [TrackingAdditionalField1Type] IS NULL) OR ([TrackingAddition" +
                    "alField1Type] = @Original_TrackingAdditionalField1Type)) AND ((@IsNull_TrackingA" +
                    "dditionalField2Desc = 1 AND [TrackingAdditionalField2Desc] IS NULL) OR ([Trackin" +
                    "gAdditionalField2Desc] = @Original_TrackingAdditionalField2Desc)) AND ((@IsNull_" +
                    "AllowRequests = 1 AND [AllowRequests] IS NULL) OR ([AllowRequests] = @Original_A" +
                    "llowRequests)) AND ((@IsNull_AllowWaitList = 1 AND [AllowWaitList] IS NULL) OR (" +
                    "[AllowWaitList] = @Original_AllowWaitList)) AND ((@IsNull_PopupWaitList = 1 AND " +
                    "[PopupWaitList] IS NULL) OR ([PopupWaitList] = @Original_PopupWaitList)) AND ((@" +
                    "IsNull_RequestorOperatorGrp = 1 AND [RequestorOperatorGrp] IS NULL) OR ([Request" +
                    "orOperatorGrp] = @Original_RequestorOperatorGrp)) AND ((@IsNull_RequestorHighPGr" +
                    "p = 1 AND [RequestorHighPGrp] IS NULL) OR ([RequestorHighPGrp] = @Original_Reque" +
                    "storHighPGrp)) AND ((@IsNull_RetentionTurnOffCitations = 1 AND [RetentionTurnOff" +
                    "Citations] IS NULL) OR ([RetentionTurnOffCitations] = @Original_RetentionTurnOff" +
                    "Citations)) AND ((@IsNull_RetentionYearEnd = 1 AND [RetentionYearEnd] IS NULL) O" +
                    "R ([RetentionYearEnd] = @Original_RetentionYearEnd)) AND ((@IsNull_RetentionAtta" +
                    "chDelGroup = 1 AND [RetentionAttachDelGroup] IS NULL) OR ([RetentionAttachDelGro" +
                    "up] = @Original_RetentionAttachDelGroup)) AND ((@IsNull_RetentionOperatorGroup =" +
                    " 1 AND [RetentionOperatorGroup] IS NULL) OR ([RetentionOperatorGroup] = @Origina" +
                    "l_RetentionOperatorGroup)) AND ((@IsNull_GridBackColorEven = 1 AND [GridBackColo" +
                    "rEven] IS NULL) OR ([GridBackColorEven] = @Original_GridBackColorEven)) AND ((@I" +
                    "sNull_GridBackColorOdd = 1 AND [GridBackColorOdd] IS NULL) OR ([GridBackColorOdd" +
                    "] = @Original_GridBackColorOdd)) AND ((@IsNull_GridForeColorEven = 1 AND [GridFo" +
                    "reColorEven] IS NULL) OR ([GridForeColorEven] = @Original_GridForeColorEven)) AN" +
                    "D ((@IsNull_GridForeColorOdd = 1 AND [GridForeColorOdd] IS NULL) OR ([GridForeCo" +
                    "lorOdd] = @Original_GridForeColorOdd)) AND ((@IsNull_ReportGridColor = 1 AND [Re" +
                    "portGridColor] IS NULL) OR ([ReportGridColor] = @Original_ReportGridColor)) AND " +
                    "((@IsNull_AlternateRowColors = 1 AND [AlternateRowColors] IS NULL) OR ([Alternat" +
                    "eRowColors] = @Original_AlternateRowColors)) AND ((@IsNull_ArchGroup = 1 AND [Ar" +
                    "chGroup] IS NULL) OR ([ArchGroup] = @Original_ArchGroup)) AND ((@IsNull_COLDGrou" +
                    "p = 1 AND [COLDGroup] IS NULL) OR ([COLDGroup] = @Original_COLDGroup)) AND ((@Is" +
                    "Null_DateDueOn = 1 AND [DateDueOn] IS NULL) OR ([DateDueOn] = @Original_DateDueO" +
                    "n)) AND ((@IsNull_FaxmGroup = 1 AND [FaxmGroup] IS NULL) OR ([FaxmGroup] = @Orig" +
                    "inal_FaxmGroup)) AND ((@IsNull_ImportGroup = 1 AND [ImportGroup] IS NULL) OR ([I" +
                    "mportGroup] = @Original_ImportGroup)) AND ((@IsNull_LabelGroup = 1 AND [LabelGro" +
                    "up] IS NULL) OR ([LabelGroup] = @Original_LabelGroup)) AND ((@IsNull_LitigationO" +
                    "n = 1 AND [LitigationOn] IS NULL) OR ([LitigationOn] = @Original_LitigationOn)) " +
                    "AND ((@IsNull_NetworkSecurityOn = 1 AND [NetworkSecurityOn] IS NULL) OR ([Networ" +
                    "kSecurityOn] = @Original_NetworkSecurityOn)) AND ((@IsNull_OtherGroup = 1 AND [O" +
                    "therGroup] IS NULL) OR ([OtherGroup] = @Original_OtherGroup)) AND ((@IsNull_PCFi" +
                    "lesEditGrp = 1 AND [PCFilesEditGrp] IS NULL) OR ([PCFilesEditGrp] = @Original_PC" +
                    "FilesEditGrp)) AND ((@IsNull_PCFilesNVerGrp = 1 AND [PCFilesNVerGrp] IS NULL) OR" +
                    " ([PCFilesNVerGrp] = @Original_PCFilesNVerGrp)) AND ((@IsNull_Picture = 1 AND [P" +
                    "icture] IS NULL) OR ([Picture] = @Original_Picture)) AND ((@IsNull_PrintFast = 1" +
                    " AND [PrintFast] IS NULL) OR ([PrintFast] = @Original_PrintFast)) AND ((@IsNull_" +
                    "ReconciliationOn = 1 AND [ReconciliationOn] IS NULL) OR ([ReconciliationOn] = @O" +
                    "riginal_ReconciliationOn)) AND ((@IsNull_RedactViewGrp = 1 AND [RedactViewGrp] I" +
                    "S NULL) OR ([RedactViewGrp] = @Original_RedactViewGrp)) AND ((@IsNull_RetentionO" +
                    "n = 1 AND [RetentionOn] IS NULL) OR ([RetentionOn] = @Original_RetentionOn)) AND" +
                    " ((@IsNull_ScanGroup = 1 AND [ScanGroup] IS NULL) OR ([ScanGroup] = @Original_Sc" +
                    "anGroup)) AND ((@IsNull_SecurityGroup = 1 AND [SecurityGroup] IS NULL) OR ([Secu" +
                    "rityGroup] = @Original_SecurityGroup)) AND ((@IsNull_SQLGroup = 1 AND [SQLGroup]" +
                    " IS NULL) OR ([SQLGroup] = @Original_SQLGroup)) AND ((@IsNull_TrackingGroup = 1 " +
                    "AND [TrackingGroup] IS NULL) OR ([TrackingGroup] = @Original_TrackingGroup)) AND" +
                    " ((@IsNull_TrackingOutOn = 1 AND [TrackingOutOn] IS NULL) OR ([TrackingOutOn] = " +
                    "@Original_TrackingOutOn)) AND ((@IsNull_ReqAutoPrintMethod = 1 AND [ReqAutoPrint" +
                    "Method] IS NULL) OR ([ReqAutoPrintMethod] = @Original_ReqAutoPrintMethod)) AND (" +
                    "(@IsNull_ReqAutoPrintCopies = 1 AND [ReqAutoPrintCopies] IS NULL) OR ([ReqAutoPr" +
                    "intCopies] = @Original_ReqAutoPrintCopies)) AND ((@IsNull_ReqAutoPrintInterval =" +
                    " 1 AND [ReqAutoPrintInterval] IS NULL) OR ([ReqAutoPrintInterval] = @Original_Re" +
                    "qAutoPrintInterval)) AND ((@IsNull_ReqAutoPrintIDType = 1 AND [ReqAutoPrintIDTyp" +
                    "e] IS NULL) OR ([ReqAutoPrintIDType] = @Original_ReqAutoPrintIDType)) AND ((@IsN" +
                    "ull_BatchRequestGroup = 1 AND [BatchRequestGroup] IS NULL) OR ([BatchRequestGrou" +
                    "p] = @Original_BatchRequestGroup)) AND ((@IsNull_AuditingSecurityManagerGrp = 1 " +
                    "AND [AuditingSecurityManagerGrp] IS NULL) OR ([AuditingSecurityManagerGrp] = @Or" +
                    "iginal_AuditingSecurityManagerGrp)) AND ((@IsNull_RequestConfirmation = 1 AND [R" +
                    "equestConfirmation] IS NULL) OR ([RequestConfirmation] = @Original_RequestConfir" +
                    "mation)) AND ((@IsNull_EMailDeliveryEnabled = 1 AND [EMailDeliveryEnabled] IS NU" +
                    "LL) OR ([EMailDeliveryEnabled] = @Original_EMailDeliveryEnabled)) AND ((@IsNull_" +
                    "EMailWaitListEnabled = 1 AND [EMailWaitListEnabled] IS NULL) OR ([EMailWaitListE" +
                    "nabled] = @Original_EMailWaitListEnabled)) AND ((@IsNull_EMailSendMethod = 1 AND" +
                    " [EMailSendMethod] IS NULL) OR ([EMailSendMethod] = @Original_EMailSendMethod)) " +
                    "AND ((@IsNull_EMailConfirmationType = 1 AND [EMailConfirmationType] IS NULL) OR " +
                    "([EMailConfirmationType] = @Original_EMailConfirmationType)) AND ((@IsNull_SMTPA" +
                    "uthentication = 1 AND [SMTPAuthentication] IS NULL) OR ([SMTPAuthentication] = @" +
                    "Original_SMTPAuthentication)) AND ((@IsNull_SMTPPort = 1 AND [SMTPPort] IS NULL)" +
                    " OR ([SMTPPort] = @Original_SMTPPort)) AND ((@IsNull_SMTPServer = 1 AND [SMTPSer" +
                    "ver] IS NULL) OR ([SMTPServer] = @Original_SMTPServer)) AND ((@IsNull_SMTPUserAd" +
                    "dress = 1 AND [SMTPUserAddress] IS NULL) OR ([SMTPUserAddress] = @Original_SMTPU" +
                    "serAddress)) AND ((@IsNull_SMTPUserPassword = 1 AND [SMTPUserPassword] IS NULL) " +
                    "OR ([SMTPUserPassword] = @Original_SMTPUserPassword)) AND ((@IsNull_LastPastDueE" +
                    "mailTime = 1 AND [LastPastDueEmailTime] IS NULL) OR ([LastPastDueEmailTime] = @O" +
                    "riginal_LastPastDueEmailTime)) AND ((@IsNull_LastPastDueEmailUser = 1 AND [LastP" +
                    "astDueEmailUser] IS NULL) OR ([LastPastDueEmailUser] = @Original_LastPastDueEmai" +
                    "lUser)) AND ((@IsNull_EMailExceptionEnabled = 1 AND [EMailExceptionEnabled] IS N" +
                    "ULL) OR ([EMailExceptionEnabled] = @Original_EMailExceptionEnabled)) AND ((@IsNu" +
                    "ll_DefaultDueBackDays = 1 AND [DefaultDueBackDays] IS NULL) OR ([DefaultDueBackD" +
                    "ays] = @Original_DefaultDueBackDays)) AND ((@IsNull_ImageCaptureGroup = 1 AND [I" +
                    "mageCaptureGroup] IS NULL) OR ([ImageCaptureGroup] = @Original_ImageCaptureGroup" +
                    ")) AND ((@IsNull_ExportGroup = 1 AND [ExportGroup] IS NULL) OR ([ExportGroup] = " +
                    "@Original_ExportGroup)) AND ((@IsNull_NotificationEnabled = 1 AND [NotificationE" +
                    "nabled] IS NULL) OR ([NotificationEnabled] = @Original_NotificationEnabled)) AND" +
                    " ((@IsNull_AttachmentVersionGroup = 1 AND [AttachmentVersionGroup] IS NULL) OR (" +
                    "[AttachmentVersionGroup] = @Original_AttachmentVersionGroup)) AND ((@IsNull_Reda" +
                    "ctEditGrp = 1 AND [RedactEditGrp] IS NULL) OR ([RedactEditGrp] = @Original_Redac" +
                    "tEditGrp)) AND ((@IsNull_UseTableIcons = 1 AND [UseTableIcons] IS NULL) OR ([Use" +
                    "TableIcons] = @Original_UseTableIcons)) AND ((@IsNull_SignatureCaptureOn = 1 AND" +
                    " [SignatureCaptureOn] IS NULL) OR ([SignatureCaptureOn] = @Original_SignatureCap" +
                    "tureOn)) AND ((@IsNull_InactiveRecordGroup = 1 AND [InactiveRecordGroup] IS NULL" +
                    ") OR ([InactiveRecordGroup] = @Original_InactiveRecordGroup)) AND ((@IsNull_Prin" +
                    "tImageFooter = 1 AND [PrintImageFooter] IS NULL) OR ([PrintImageFooter] = @Origi" +
                    "nal_PrintImageFooter)));\r\nSELECT Id, UserName, HeadingHeight, RowHeight, GridFon" +
                    "tName, GridFontSize, GridFontBold, GridHdrAttributes, TabFontName, TabFontSize, " +
                    "TabFontBold, BaseFontName, BaseFontSize, BaseFontBold, GridOffsetX, GridOffsetY," +
                    " TabMaxWidth, TabCutSize, TabHeight, TabRowOffset, TabSelectType, TabsPerRow, Fr" +
                    "ameWidth, RMAGgroup, MgrGroup, LibrarianMDIPercent, ImageBackColor1, ImageBackCo" +
                    "lor2, ImageBackColor3, ImageGridBackColor1, ImageGridBackColor2, ImageGridBackCo" +
                    "lor3, AnnotationAdd, AnnotationEdit, AnnotationDelete, AnnotationView, NoGridURL" +
                    ", ADOConnectionTimeout, DefaultOutputSettingsId, LSAfterDestinationScanned, LSAf" +
                    "terObjectScanned, LSAfterDestinationAccepted, LSAfterObjectAccepted, LSAfterTrac" +
                    "kingComplete, UseViewDisplayMode, FormViewMinLines, ImportRunGroup, ExpressSetup" +
                    "Group, ManualTrackingGroup, MaxHistoryDays, MaxHistoryItems, TrackingAdditionalF" +
                    "ield1Desc, TrackingAdditionalField1Type, TrackingAdditionalField2Desc, AllowRequ" +
                    "ests, AllowWaitList, PopupWaitList, RequestorOperatorGrp, RequestorHighPGrp, Ret" +
                    "entionTurnOffCitations, RetentionYearEnd, RetentionAttachDelGroup, RetentionOper" +
                    "atorGroup, GridBackColorEven, GridBackColorOdd, GridForeColorEven, GridForeColor" +
                    "Odd, ReportGridColor, AlternateRowColors, ArchGroup, COLDGroup, DateDueOn, FaxmG" +
                    "roup, ImportGroup, LabelGroup, LitigationOn, NetworkSecurityOn, OtherGroup, PCFi" +
                    "lesEditGrp, PCFilesNVerGrp, Picture, PrintFast, ReconciliationOn, RedactViewGrp," +
                    " RetentionOn, ScanGroup, SecurityGroup, SQLGroup, TrackingGroup, TrackingOutOn, " +
                    "ReqAutoPrintMethod, ReqAutoPrintCopies, ReqAutoPrintInterval, ReqAutoPrintIDType" +
                    ", BatchRequestGroup, AuditingSecurityManagerGrp, RequestConfirmation, EMailDeliv" +
                    "eryEnabled, EMailWaitListEnabled, EMailSendMethod, EMailConfirmationType, SMTPAu" +
                    "thentication, SMTPPort, SMTPServer, SMTPUserAddress, SMTPUserPassword, LastPastD" +
                    "ueEmailTime, LastPastDueEmailUser, EMailExceptionEnabled, DefaultDueBackDays, Im" +
                    "ageCaptureGroup, ExportGroup, NotificationEnabled, AttachmentVersionGroup, Redac" +
                    "tEditGrp, UseTableIcons, SignatureCaptureOn, InactiveRecordGroup, PrintImageFoot" +
                    "er FROM System WHERE (Id = @Id)";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeadingHeight", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeadingHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RowHeight", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontBold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridHdrAttributes", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridHdrAttributes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontBold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontBold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridOffsetX", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridOffsetX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridOffsetY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridOffsetY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabMaxWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabMaxWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabCutSize", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabCutSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabHeight", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabRowOffset", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabRowOffset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabSelectType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabSelectType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabsPerRow", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabsPerRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrameWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrameWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAGgroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAGgroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MgrGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MgrGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LibrarianMDIPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LibrarianMDIPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImageBackColor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImageBackColor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImageBackColor3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImageGridBackColor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImageGridBackColor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImageGridBackColor3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnnotationAdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationAdd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnnotationEdit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationEdit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnnotationDelete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationDelete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnnotationView", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationView", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoGridURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGridURL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADOConnectionTimeout", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADOConnectionTimeout", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultOutputSettingsId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultOutputSettingsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LSAfterDestinationScanned", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterDestinationScanned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LSAfterObjectScanned", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterObjectScanned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LSAfterDestinationAccepted", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterDestinationAccepted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LSAfterObjectAccepted", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterObjectAccepted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LSAfterTrackingComplete", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterTrackingComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseViewDisplayMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseViewDisplayMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormViewMinLines", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormViewMinLines", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportRunGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportRunGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpressSetupGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpressSetupGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManualTrackingGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManualTrackingGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxHistoryDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxHistoryDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxHistoryItems", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxHistoryItems", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackingAdditionalField1Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackingAdditionalField1Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackingAdditionalField2Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField2Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowRequests", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowRequests", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowWaitList", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowWaitList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PopupWaitList", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopupWaitList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestorOperatorGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestorOperatorGrp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestorHighPGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestorHighPGrp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RetentionTurnOffCitations", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionTurnOffCitations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RetentionYearEnd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionYearEnd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RetentionAttachDelGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionAttachDelGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RetentionOperatorGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionOperatorGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridBackColorEven", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridBackColorEven", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridBackColorOdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridBackColorOdd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridForeColorEven", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridForeColorEven", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridForeColorOdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridForeColorOdd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReportGridColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReportGridColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternateRowColors", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateRowColors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArchGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArchGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COLDGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COLDGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateDueOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDueOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FaxmGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaxmGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabelGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabelGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LitigationOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LitigationOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetworkSecurityOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetworkSecurityOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCFilesEditGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesEditGrp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCFilesNVerGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesNVerGrp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Picture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintFast", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintFast", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReconciliationOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReconciliationOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RedactViewGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RedactViewGrp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RetentionOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScanGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScanGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SQLGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SQLGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackingGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackingOutOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingOutOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReqAutoPrintMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReqAutoPrintCopies", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintCopies", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReqAutoPrintInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintInterval", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReqAutoPrintIDType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintIDType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchRequestGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchRequestGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AuditingSecurityManagerGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuditingSecurityManagerGrp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestConfirmation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestConfirmation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMailDeliveryEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailDeliveryEnabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMailWaitListEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailWaitListEnabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMailSendMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailSendMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMailConfirmationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailConfirmationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPAuthentication", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPAuthentication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPUserAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPUserAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPUserPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPUserPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastPastDueEmailTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPastDueEmailTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastPastDueEmailUser", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPastDueEmailUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMailExceptionEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailExceptionEnabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultDueBackDays", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultDueBackDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImageCaptureGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageCaptureGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExportGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NotificationEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotificationEnabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttachmentVersionGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachmentVersionGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RedactEditGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RedactEditGrp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseTableIcons", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTableIcons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SignatureCaptureOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignatureCaptureOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InactiveRecordGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InactiveRecordGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintImageFooter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintImageFooter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HeadingHeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeadingHeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeadingHeight", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeadingHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RowHeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowHeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowHeight", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridFontName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridFontSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridFontBold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontBold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridFontBold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridHdrAttributes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridHdrAttributes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridHdrAttributes", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridHdrAttributes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabFontBold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontBold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabFontBold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseFontName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseFontName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseFontSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseFontSize", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseFontBold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontBold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseFontBold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFontBold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridOffsetX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridOffsetX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridOffsetX", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridOffsetX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridOffsetY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridOffsetY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridOffsetY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridOffsetY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabMaxWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabMaxWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabMaxWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabMaxWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabCutSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabCutSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabCutSize", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabCutSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabHeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabHeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabHeight", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabRowOffset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabRowOffset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabRowOffset", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabRowOffset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabSelectType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabSelectType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabSelectType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabSelectType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TabsPerRow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabsPerRow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabsPerRow", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabsPerRow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FrameWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrameWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrameWidth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrameWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RMAGgroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAGgroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAGgroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAGgroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MgrGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MgrGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MgrGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MgrGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LibrarianMDIPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LibrarianMDIPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LibrarianMDIPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LibrarianMDIPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageBackColor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageBackColor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageBackColor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageBackColor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageBackColor3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageBackColor3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageBackColor3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageGridBackColor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageGridBackColor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageGridBackColor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageGridBackColor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageGridBackColor3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageGridBackColor3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageGridBackColor3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnnotationAdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationAdd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnnotationAdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationAdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnnotationEdit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationEdit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnnotationEdit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationEdit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnnotationDelete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationDelete", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnnotationDelete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationDelete", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnnotationView", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationView", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnnotationView", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnotationView", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoGridURL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGridURL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoGridURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGridURL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADOConnectionTimeout", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADOConnectionTimeout", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADOConnectionTimeout", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADOConnectionTimeout", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DefaultOutputSettingsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultOutputSettingsId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DefaultOutputSettingsId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultOutputSettingsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSAfterDestinationScanned", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterDestinationScanned", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSAfterDestinationScanned", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterDestinationScanned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSAfterObjectScanned", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterObjectScanned", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSAfterObjectScanned", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterObjectScanned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSAfterDestinationAccepted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterDestinationAccepted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSAfterDestinationAccepted", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterDestinationAccepted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSAfterObjectAccepted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterObjectAccepted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSAfterObjectAccepted", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterObjectAccepted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSAfterTrackingComplete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterTrackingComplete", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSAfterTrackingComplete", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSAfterTrackingComplete", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UseViewDisplayMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseViewDisplayMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseViewDisplayMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseViewDisplayMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FormViewMinLines", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormViewMinLines", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FormViewMinLines", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FormViewMinLines", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImportRunGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportRunGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImportRunGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportRunGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExpressSetupGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpressSetupGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExpressSetupGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpressSetupGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ManualTrackingGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManualTrackingGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ManualTrackingGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManualTrackingGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxHistoryDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxHistoryDays", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxHistoryDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxHistoryDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxHistoryItems", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxHistoryItems", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxHistoryItems", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxHistoryItems", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingAdditionalField1Desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1Desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingAdditionalField1Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1Desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingAdditionalField1Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingAdditionalField1Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField1Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingAdditionalField2Desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField2Desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingAdditionalField2Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingAdditionalField2Desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AllowRequests", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowRequests", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowRequests", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowRequests", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AllowWaitList", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowWaitList", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowWaitList", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowWaitList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PopupWaitList", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopupWaitList", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PopupWaitList", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopupWaitList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RequestorOperatorGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestorOperatorGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestorOperatorGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestorOperatorGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RequestorHighPGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestorHighPGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestorHighPGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestorHighPGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RetentionTurnOffCitations", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionTurnOffCitations", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RetentionTurnOffCitations", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionTurnOffCitations", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RetentionYearEnd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionYearEnd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RetentionYearEnd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionYearEnd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RetentionAttachDelGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionAttachDelGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RetentionAttachDelGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionAttachDelGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RetentionOperatorGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionOperatorGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RetentionOperatorGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionOperatorGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridBackColorEven", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridBackColorEven", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridBackColorEven", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridBackColorEven", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridBackColorOdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridBackColorOdd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridBackColorOdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridBackColorOdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridForeColorEven", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridForeColorEven", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridForeColorEven", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridForeColorEven", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GridForeColorOdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridForeColorOdd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridForeColorOdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridForeColorOdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReportGridColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReportGridColor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReportGridColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReportGridColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlternateRowColors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateRowColors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternateRowColors", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateRowColors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArchGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArchGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArchGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArchGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COLDGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COLDGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COLDGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COLDGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateDueOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDueOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateDueOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDueOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FaxmGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaxmGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FaxmGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaxmGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImportGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImportGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LabelGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabelGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LabelGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabelGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LitigationOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LitigationOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LitigationOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LitigationOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NetworkSecurityOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetworkSecurityOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetworkSecurityOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetworkSecurityOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PCFilesEditGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesEditGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCFilesEditGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesEditGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PCFilesNVerGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesNVerGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCFilesNVerGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCFilesNVerGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Picture", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Picture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintFast", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintFast", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintFast", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintFast", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReconciliationOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReconciliationOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReconciliationOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReconciliationOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RedactViewGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RedactViewGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RedactViewGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RedactViewGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RetentionOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RetentionOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RetentionOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ScanGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScanGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScanGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScanGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecurityGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecurityGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SQLGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SQLGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SQLGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SQLGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrackingOutOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingOutOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingOutOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingOutOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReqAutoPrintMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReqAutoPrintMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReqAutoPrintCopies", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintCopies", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReqAutoPrintCopies", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintCopies", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReqAutoPrintInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintInterval", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReqAutoPrintInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintInterval", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReqAutoPrintIDType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintIDType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReqAutoPrintIDType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReqAutoPrintIDType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchRequestGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchRequestGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchRequestGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchRequestGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AuditingSecurityManagerGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuditingSecurityManagerGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AuditingSecurityManagerGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuditingSecurityManagerGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RequestConfirmation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestConfirmation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestConfirmation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestConfirmation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMailDeliveryEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailDeliveryEnabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMailDeliveryEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailDeliveryEnabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMailWaitListEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailWaitListEnabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMailWaitListEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailWaitListEnabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMailSendMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailSendMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMailSendMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailSendMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMailConfirmationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailConfirmationType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMailConfirmationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailConfirmationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPAuthentication", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPAuthentication", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPAuthentication", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPAuthentication", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPPort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPUserAddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPUserAddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPUserAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPUserAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPUserPassword", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPUserPassword", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPUserPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPUserPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastPastDueEmailTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPastDueEmailTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPastDueEmailTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPastDueEmailTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastPastDueEmailUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPastDueEmailUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPastDueEmailUser", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPastDueEmailUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMailExceptionEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailExceptionEnabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMailExceptionEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMailExceptionEnabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DefaultDueBackDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultDueBackDays", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DefaultDueBackDays", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultDueBackDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageCaptureGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageCaptureGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageCaptureGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageCaptureGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExportGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExportGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NotificationEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotificationEnabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NotificationEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotificationEnabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttachmentVersionGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachmentVersionGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttachmentVersionGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttachmentVersionGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RedactEditGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RedactEditGrp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RedactEditGrp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RedactEditGrp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UseTableIcons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTableIcons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseTableIcons", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTableIcons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SignatureCaptureOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignatureCaptureOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SignatureCaptureOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignatureCaptureOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InactiveRecordGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InactiveRecordGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InactiveRecordGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InactiveRecordGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintImageFooter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintImageFooter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintImageFooter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintImageFooter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT        Id, UserName, HeadingHeight, RowHeight, GridFontName, GridFontSize," +
                    " GridFontBold, GridHdrAttributes, TabFontName, TabFontSize, TabFontBold, \r\n     " +
                    "                    BaseFontName, BaseFontSize, BaseFontBold, GridOffsetX, GridO" +
                    "ffsetY, TabMaxWidth, TabCutSize, TabHeight, TabRowOffset, TabSelectType, TabsPer" +
                    "Row, \r\n                         FrameWidth, RMAGgroup, MgrGroup, LibrarianMDIPer" +
                    "cent, ImageBackColor1, ImageBackColor2, ImageBackColor3, ImageGridBackColor1, \r\n" +
                    "                         ImageGridBackColor2, ImageGridBackColor3, AnnotationAdd" +
                    ", AnnotationEdit, AnnotationDelete, AnnotationView, NoGridURL, ADOConnectionTime" +
                    "out, \r\n                         DefaultOutputSettingsId, LSAfterDestinationScann" +
                    "ed, LSAfterObjectScanned, LSAfterDestinationAccepted, LSAfterObjectAccepted, LSA" +
                    "fterTrackingComplete, \r\n                         UseViewDisplayMode, FormViewMin" +
                    "Lines, ImportRunGroup, ExpressSetupGroup, ManualTrackingGroup, MaxHistoryDays, M" +
                    "axHistoryItems, \r\n                         TrackingAdditionalField1Desc, Trackin" +
                    "gAdditionalField1Type, TrackingAdditionalField2Desc, AllowRequests, AllowWaitLis" +
                    "t, PopupWaitList, \r\n                         RequestorOperatorGrp, RequestorHigh" +
                    "PGrp, RetentionTurnOffCitations, RetentionYearEnd, RetentionAttachDelGroup, Rete" +
                    "ntionOperatorGroup, \r\n                         GridBackColorEven, GridBackColorO" +
                    "dd, GridForeColorEven, GridForeColorOdd, ReportGridColor, AlternateRowColors, Ar" +
                    "chGroup, COLDGroup, DateDueOn, \r\n                         FaxmGroup, ImportGroup" +
                    ", LabelGroup, LitigationOn, NetworkSecurityOn, OtherGroup, PCFilesEditGrp, PCFil" +
                    "esNVerGrp, Picture, PrintFast, ReconciliationOn, \r\n                         Reda" +
                    "ctViewGrp, RetentionOn, ScanGroup, SecurityGroup, SQLGroup, TrackingGroup, Track" +
                    "ingOutOn, ReqAutoPrintMethod, ReqAutoPrintCopies, \r\n                         Req" +
                    "AutoPrintInterval, ReqAutoPrintIDType, BatchRequestGroup, AuditingSecurityManage" +
                    "rGrp, RequestConfirmation, EMailDeliveryEnabled, \r\n                         EMai" +
                    "lWaitListEnabled, EMailSendMethod, EMailConfirmationType, SMTPAuthentication, SM" +
                    "TPPort, SMTPServer, SMTPUserAddress, SMTPUserPassword, \r\n                       " +
                    "  LastPastDueEmailTime, LastPastDueEmailUser, EMailExceptionEnabled, DefaultDueB" +
                    "ackDays, ImageCaptureGroup, ExportGroup, NotificationEnabled, \r\n                " +
                    "         AttachmentVersionGroup, RedactEditGrp, UseTableIcons, SignatureCaptureO" +
                    "n, InactiveRecordGroup, PrintImageFooter\r\nFROM            System";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.SystemDataTable GetSystemInfo()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.SystemDataTable dataTable = new RecordsManage.SystemDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.SystemDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "System");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(
                        int Original_Id,
                        string Original_UserName,
                        global::System.Nullable<float> Original_HeadingHeight,
                        global::System.Nullable<short> Original_RowHeight,
                        string Original_GridFontName,
                        global::System.Nullable<float> Original_GridFontSize,
                        global::System.Nullable<bool> Original_GridFontBold,
                        global::System.Nullable<short> Original_GridHdrAttributes,
                        string Original_TabFontName,
                        global::System.Nullable<float> Original_TabFontSize,
                        global::System.Nullable<bool> Original_TabFontBold,
                        string Original_BaseFontName,
                        global::System.Nullable<float> Original_BaseFontSize,
                        global::System.Nullable<bool> Original_BaseFontBold,
                        global::System.Nullable<short> Original_GridOffsetX,
                        global::System.Nullable<short> Original_GridOffsetY,
                        global::System.Nullable<short> Original_TabMaxWidth,
                        global::System.Nullable<short> Original_TabCutSize,
                        global::System.Nullable<short> Original_TabHeight,
                        global::System.Nullable<short> Original_TabRowOffset,
                        global::System.Nullable<short> Original_TabSelectType,
                        global::System.Nullable<short> Original_TabsPerRow,
                        global::System.Nullable<short> Original_FrameWidth,
                        global::System.Nullable<int> Original_RMAGgroup,
                        global::System.Nullable<int> Original_MgrGroup,
                        global::System.Nullable<short> Original_LibrarianMDIPercent,
                        global::System.Nullable<int> Original_ImageBackColor1,
                        global::System.Nullable<int> Original_ImageBackColor2,
                        global::System.Nullable<int> Original_ImageBackColor3,
                        global::System.Nullable<int> Original_ImageGridBackColor1,
                        global::System.Nullable<int> Original_ImageGridBackColor2,
                        global::System.Nullable<int> Original_ImageGridBackColor3,
                        global::System.Nullable<int> Original_AnnotationAdd,
                        global::System.Nullable<int> Original_AnnotationEdit,
                        global::System.Nullable<int> Original_AnnotationDelete,
                        global::System.Nullable<int> Original_AnnotationView,
                        string Original_NoGridURL,
                        global::System.Nullable<int> Original_ADOConnectionTimeout,
                        string Original_DefaultOutputSettingsId,
                        string Original_LSAfterDestinationScanned,
                        string Original_LSAfterObjectScanned,
                        string Original_LSAfterDestinationAccepted,
                        string Original_LSAfterObjectAccepted,
                        string Original_LSAfterTrackingComplete,
                        global::System.Nullable<bool> Original_UseViewDisplayMode,
                        global::System.Nullable<int> Original_FormViewMinLines,
                        global::System.Nullable<int> Original_ImportRunGroup,
                        global::System.Nullable<int> Original_ExpressSetupGroup,
                        global::System.Nullable<int> Original_ManualTrackingGroup,
                        global::System.Nullable<int> Original_MaxHistoryDays,
                        global::System.Nullable<int> Original_MaxHistoryItems,
                        string Original_TrackingAdditionalField1Desc,
                        global::System.Nullable<int> Original_TrackingAdditionalField1Type,
                        string Original_TrackingAdditionalField2Desc,
                        global::System.Nullable<bool> Original_AllowRequests,
                        global::System.Nullable<bool> Original_AllowWaitList,
                        global::System.Nullable<bool> Original_PopupWaitList,
                        global::System.Nullable<int> Original_RequestorOperatorGrp,
                        global::System.Nullable<int> Original_RequestorHighPGrp,
                        global::System.Nullable<bool> Original_RetentionTurnOffCitations,
                        global::System.Nullable<int> Original_RetentionYearEnd,
                        global::System.Nullable<int> Original_RetentionAttachDelGroup,
                        global::System.Nullable<int> Original_RetentionOperatorGroup,
                        global::System.Nullable<int> Original_GridBackColorEven,
                        global::System.Nullable<int> Original_GridBackColorOdd,
                        global::System.Nullable<int> Original_GridForeColorEven,
                        global::System.Nullable<int> Original_GridForeColorOdd,
                        global::System.Nullable<int> Original_ReportGridColor,
                        global::System.Nullable<bool> Original_AlternateRowColors,
                        global::System.Nullable<int> Original_ArchGroup,
                        global::System.Nullable<int> Original_COLDGroup,
                        global::System.Nullable<bool> Original_DateDueOn,
                        global::System.Nullable<int> Original_FaxmGroup,
                        global::System.Nullable<int> Original_ImportGroup,
                        global::System.Nullable<int> Original_LabelGroup,
                        global::System.Nullable<bool> Original_LitigationOn,
                        global::System.Nullable<bool> Original_NetworkSecurityOn,
                        global::System.Nullable<int> Original_OtherGroup,
                        global::System.Nullable<int> Original_PCFilesEditGrp,
                        global::System.Nullable<int> Original_PCFilesNVerGrp,
                        string Original_Picture,
                        global::System.Nullable<bool> Original_PrintFast,
                        global::System.Nullable<bool> Original_ReconciliationOn,
                        global::System.Nullable<int> Original_RedactViewGrp,
                        global::System.Nullable<bool> Original_RetentionOn,
                        global::System.Nullable<int> Original_ScanGroup,
                        global::System.Nullable<int> Original_SecurityGroup,
                        global::System.Nullable<int> Original_SQLGroup,
                        global::System.Nullable<int> Original_TrackingGroup,
                        global::System.Nullable<bool> Original_TrackingOutOn,
                        global::System.Nullable<int> Original_ReqAutoPrintMethod,
                        global::System.Nullable<int> Original_ReqAutoPrintCopies,
                        global::System.Nullable<int> Original_ReqAutoPrintInterval,
                        global::System.Nullable<int> Original_ReqAutoPrintIDType,
                        global::System.Nullable<int> Original_BatchRequestGroup,
                        global::System.Nullable<int> Original_AuditingSecurityManagerGrp,
                        global::System.Nullable<int> Original_RequestConfirmation,
                        global::System.Nullable<bool> Original_EMailDeliveryEnabled,
                        global::System.Nullable<bool> Original_EMailWaitListEnabled,
                        global::System.Nullable<int> Original_EMailSendMethod,
                        global::System.Nullable<int> Original_EMailConfirmationType,
                        global::System.Nullable<bool> Original_SMTPAuthentication,
                        global::System.Nullable<int> Original_SMTPPort,
                        string Original_SMTPServer,
                        string Original_SMTPUserAddress,
                        string Original_SMTPUserPassword,
                        global::System.Nullable<global::System.DateTime> Original_LastPastDueEmailTime,
                        string Original_LastPastDueEmailUser,
                        global::System.Nullable<bool> Original_EMailExceptionEnabled,
                        global::System.Nullable<short> Original_DefaultDueBackDays,
                        global::System.Nullable<int> Original_ImageCaptureGroup,
                        global::System.Nullable<int> Original_ExportGroup,
                        global::System.Nullable<int> Original_NotificationEnabled,
                        global::System.Nullable<int> Original_AttachmentVersionGroup,
                        global::System.Nullable<int> Original_RedactEditGrp,
                        global::System.Nullable<bool> Original_UseTableIcons,
                        global::System.Nullable<int> Original_SignatureCaptureOn,
                        global::System.Nullable<int> Original_InactiveRecordGroup,
                        global::System.Nullable<bool> Original_PrintImageFooter)
            {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
                if ((Original_UserName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_UserName));
                }
                if ((Original_HeadingHeight.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[4].Value = ((float)(Original_HeadingHeight.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                if ((Original_RowHeight.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_RowHeight.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((Original_GridFontName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_GridFontName));
                }
                if ((Original_GridFontSize.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[10].Value = ((float)(Original_GridFontSize.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                if ((Original_GridFontBold.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_GridFontBold.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                if ((Original_GridHdrAttributes.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[14].Value = ((short)(Original_GridHdrAttributes.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                if ((Original_TabFontName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_TabFontName));
                }
                if ((Original_TabFontSize.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[18].Value = ((float)(Original_TabFontSize.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
                }
                if ((Original_TabFontBold.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_TabFontBold.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
                }
                if ((Original_BaseFontName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_BaseFontName));
                }
                if ((Original_BaseFontSize.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[24].Value = ((float)(Original_BaseFontSize.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
                }
                if ((Original_BaseFontBold.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_BaseFontBold.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
                }
                if ((Original_GridOffsetX.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[28].Value = ((short)(Original_GridOffsetX.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
                }
                if ((Original_GridOffsetY.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[30].Value = ((short)(Original_GridOffsetY.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
                }
                if ((Original_TabMaxWidth.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[32].Value = ((short)(Original_TabMaxWidth.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
                }
                if ((Original_TabCutSize.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[34].Value = ((short)(Original_TabCutSize.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
                }
                if ((Original_TabHeight.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[36].Value = ((short)(Original_TabHeight.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
                }
                if ((Original_TabRowOffset.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[38].Value = ((short)(Original_TabRowOffset.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
                }
                if ((Original_TabSelectType.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[40].Value = ((short)(Original_TabSelectType.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
                }
                if ((Original_TabsPerRow.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[42].Value = ((short)(Original_TabsPerRow.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
                }
                if ((Original_FrameWidth.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[44].Value = ((short)(Original_FrameWidth.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
                }
                if ((Original_RMAGgroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_RMAGgroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
                }
                if ((Original_MgrGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[48].Value = ((int)(Original_MgrGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
                }
                if ((Original_LibrarianMDIPercent.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[50].Value = ((short)(Original_LibrarianMDIPercent.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageBackColor1.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[52].Value = ((int)(Original_ImageBackColor1.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageBackColor2.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_ImageBackColor2.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageBackColor3.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_ImageBackColor3.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageGridBackColor1.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[58].Value = ((int)(Original_ImageGridBackColor1.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageGridBackColor2.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[60].Value = ((int)(Original_ImageGridBackColor2.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageGridBackColor3.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[62].Value = ((int)(Original_ImageGridBackColor3.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
                }
                if ((Original_AnnotationAdd.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_AnnotationAdd.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
                }
                if ((Original_AnnotationEdit.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_AnnotationEdit.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
                }
                if ((Original_AnnotationDelete.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_AnnotationDelete.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
                }
                if ((Original_AnnotationView.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[70].Value = ((int)(Original_AnnotationView.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
                }
                if ((Original_NoGridURL == null))
                {
                    this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_NoGridURL));
                }
                if ((Original_ADOConnectionTimeout.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[74].Value = ((int)(Original_ADOConnectionTimeout.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
                }
                if ((Original_DefaultOutputSettingsId == null))
                {
                    this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[76].Value = ((string)(Original_DefaultOutputSettingsId));
                }
                if ((Original_LSAfterDestinationScanned == null))
                {
                    this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_LSAfterDestinationScanned));
                }
                if ((Original_LSAfterObjectScanned == null))
                {
                    this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_LSAfterObjectScanned));
                }
                if ((Original_LSAfterDestinationAccepted == null))
                {
                    this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_LSAfterDestinationAccepted));
                }
                if ((Original_LSAfterObjectAccepted == null))
                {
                    this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_LSAfterObjectAccepted));
                }
                if ((Original_LSAfterTrackingComplete == null))
                {
                    this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_LSAfterTrackingComplete));
                }
                if ((Original_UseViewDisplayMode.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[88].Value = ((bool)(Original_UseViewDisplayMode.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
                }
                if ((Original_FormViewMinLines.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[90].Value = ((int)(Original_FormViewMinLines.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
                }
                if ((Original_ImportRunGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[92].Value = ((int)(Original_ImportRunGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
                }
                if ((Original_ExpressSetupGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[94].Value = ((int)(Original_ExpressSetupGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
                }
                if ((Original_ManualTrackingGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[96].Value = ((int)(Original_ManualTrackingGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
                }
                if ((Original_MaxHistoryDays.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[98].Value = ((int)(Original_MaxHistoryDays.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
                }
                if ((Original_MaxHistoryItems.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[100].Value = ((int)(Original_MaxHistoryItems.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
                }
                if ((Original_TrackingAdditionalField1Desc == null))
                {
                    this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_TrackingAdditionalField1Desc));
                }
                if ((Original_TrackingAdditionalField1Type.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[104].Value = ((int)(Original_TrackingAdditionalField1Type.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
                }
                if ((Original_TrackingAdditionalField2Desc == null))
                {
                    this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[106].Value = ((string)(Original_TrackingAdditionalField2Desc));
                }
                if ((Original_AllowRequests.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[108].Value = ((bool)(Original_AllowRequests.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
                }
                if ((Original_AllowWaitList.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[110].Value = ((bool)(Original_AllowWaitList.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
                }
                if ((Original_PopupWaitList.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[112].Value = ((bool)(Original_PopupWaitList.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
                }
                if ((Original_RequestorOperatorGrp.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[114].Value = ((int)(Original_RequestorOperatorGrp.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
                }
                if ((Original_RequestorHighPGrp.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[116].Value = ((int)(Original_RequestorHighPGrp.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
                }
                if ((Original_RetentionTurnOffCitations.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[118].Value = ((bool)(Original_RetentionTurnOffCitations.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
                }
                if ((Original_RetentionYearEnd.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[120].Value = ((int)(Original_RetentionYearEnd.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
                }
                if ((Original_RetentionAttachDelGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[122].Value = ((int)(Original_RetentionAttachDelGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
                }
                if ((Original_RetentionOperatorGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[124].Value = ((int)(Original_RetentionOperatorGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
                }
                if ((Original_GridBackColorEven.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[126].Value = ((int)(Original_GridBackColorEven.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
                }
                if ((Original_GridBackColorOdd.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[128].Value = ((int)(Original_GridBackColorOdd.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
                }
                if ((Original_GridForeColorEven.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[130].Value = ((int)(Original_GridForeColorEven.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
                }
                if ((Original_GridForeColorOdd.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[132].Value = ((int)(Original_GridForeColorOdd.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
                }
                if ((Original_ReportGridColor.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[134].Value = ((int)(Original_ReportGridColor.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
                }
                if ((Original_AlternateRowColors.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[136].Value = ((bool)(Original_AlternateRowColors.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
                }
                if ((Original_ArchGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[138].Value = ((int)(Original_ArchGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
                }
                if ((Original_COLDGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[140].Value = ((int)(Original_COLDGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
                }
                if ((Original_DateDueOn.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[142].Value = ((bool)(Original_DateDueOn.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
                }
                if ((Original_FaxmGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[144].Value = ((int)(Original_FaxmGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
                }
                if ((Original_ImportGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[146].Value = ((int)(Original_ImportGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
                }
                if ((Original_LabelGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[148].Value = ((int)(Original_LabelGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
                }
                if ((Original_LitigationOn.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[150].Value = ((bool)(Original_LitigationOn.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
                }
                if ((Original_NetworkSecurityOn.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[152].Value = ((bool)(Original_NetworkSecurityOn.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
                }
                if ((Original_OtherGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[154].Value = ((int)(Original_OtherGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
                }
                if ((Original_PCFilesEditGrp.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[156].Value = ((int)(Original_PCFilesEditGrp.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
                }
                if ((Original_PCFilesNVerGrp.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[158].Value = ((int)(Original_PCFilesNVerGrp.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
                }
                if ((Original_Picture == null))
                {
                    this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[160].Value = ((string)(Original_Picture));
                }
                if ((Original_PrintFast.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[162].Value = ((bool)(Original_PrintFast.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[162].Value = global::System.DBNull.Value;
                }
                if ((Original_ReconciliationOn.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[164].Value = ((bool)(Original_ReconciliationOn.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[164].Value = global::System.DBNull.Value;
                }
                if ((Original_RedactViewGrp.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[166].Value = ((int)(Original_RedactViewGrp.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[166].Value = global::System.DBNull.Value;
                }
                if ((Original_RetentionOn.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[168].Value = ((bool)(Original_RetentionOn.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[168].Value = global::System.DBNull.Value;
                }
                if ((Original_ScanGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[169].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[170].Value = ((int)(Original_ScanGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[169].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[170].Value = global::System.DBNull.Value;
                }
                if ((Original_SecurityGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[171].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[172].Value = ((int)(Original_SecurityGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[171].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[172].Value = global::System.DBNull.Value;
                }
                if ((Original_SQLGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[174].Value = ((int)(Original_SQLGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[174].Value = global::System.DBNull.Value;
                }
                if ((Original_TrackingGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[176].Value = ((int)(Original_TrackingGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[176].Value = global::System.DBNull.Value;
                }
                if ((Original_TrackingOutOn.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[178].Value = ((bool)(Original_TrackingOutOn.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[178].Value = global::System.DBNull.Value;
                }
                if ((Original_ReqAutoPrintMethod.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[180].Value = ((int)(Original_ReqAutoPrintMethod.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[180].Value = global::System.DBNull.Value;
                }
                if ((Original_ReqAutoPrintCopies.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[182].Value = ((int)(Original_ReqAutoPrintCopies.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[182].Value = global::System.DBNull.Value;
                }
                if ((Original_ReqAutoPrintInterval.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[184].Value = ((int)(Original_ReqAutoPrintInterval.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[184].Value = global::System.DBNull.Value;
                }
                if ((Original_ReqAutoPrintIDType.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[185].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[186].Value = ((int)(Original_ReqAutoPrintIDType.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[185].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[186].Value = global::System.DBNull.Value;
                }
                if ((Original_BatchRequestGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[187].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[188].Value = ((int)(Original_BatchRequestGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[187].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[188].Value = global::System.DBNull.Value;
                }
                if ((Original_AuditingSecurityManagerGrp.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[189].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[190].Value = ((int)(Original_AuditingSecurityManagerGrp.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[189].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[190].Value = global::System.DBNull.Value;
                }
                if ((Original_RequestConfirmation.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[191].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[192].Value = ((int)(Original_RequestConfirmation.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[191].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[192].Value = global::System.DBNull.Value;
                }
                if ((Original_EMailDeliveryEnabled.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[193].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[194].Value = ((bool)(Original_EMailDeliveryEnabled.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[193].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[194].Value = global::System.DBNull.Value;
                }
                if ((Original_EMailWaitListEnabled.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[195].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[196].Value = ((bool)(Original_EMailWaitListEnabled.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[195].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[196].Value = global::System.DBNull.Value;
                }
                if ((Original_EMailSendMethod.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[197].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[198].Value = ((int)(Original_EMailSendMethod.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[197].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[198].Value = global::System.DBNull.Value;
                }
                if ((Original_EMailConfirmationType.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[199].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[200].Value = ((int)(Original_EMailConfirmationType.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[199].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[200].Value = global::System.DBNull.Value;
                }
                if ((Original_SMTPAuthentication.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[201].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[202].Value = ((bool)(Original_SMTPAuthentication.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[201].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[202].Value = global::System.DBNull.Value;
                }
                if ((Original_SMTPPort.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[203].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[204].Value = ((int)(Original_SMTPPort.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[203].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[204].Value = global::System.DBNull.Value;
                }
                if ((Original_SMTPServer == null))
                {
                    this.Adapter.DeleteCommand.Parameters[205].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[206].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[205].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[206].Value = ((string)(Original_SMTPServer));
                }
                if ((Original_SMTPUserAddress == null))
                {
                    this.Adapter.DeleteCommand.Parameters[207].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[208].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[207].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[208].Value = ((string)(Original_SMTPUserAddress));
                }
                if ((Original_SMTPUserPassword == null))
                {
                    this.Adapter.DeleteCommand.Parameters[209].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[210].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[209].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[210].Value = ((string)(Original_SMTPUserPassword));
                }
                if ((Original_LastPastDueEmailTime.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[211].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[212].Value = ((System.DateTime)(Original_LastPastDueEmailTime.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[211].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[212].Value = global::System.DBNull.Value;
                }
                if ((Original_LastPastDueEmailUser == null))
                {
                    this.Adapter.DeleteCommand.Parameters[213].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[214].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[213].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[214].Value = ((string)(Original_LastPastDueEmailUser));
                }
                if ((Original_EMailExceptionEnabled.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[215].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[216].Value = ((bool)(Original_EMailExceptionEnabled.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[215].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[216].Value = global::System.DBNull.Value;
                }
                if ((Original_DefaultDueBackDays.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[217].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[218].Value = ((short)(Original_DefaultDueBackDays.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[217].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[218].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageCaptureGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[219].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[220].Value = ((int)(Original_ImageCaptureGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[219].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[220].Value = global::System.DBNull.Value;
                }
                if ((Original_ExportGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[221].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[222].Value = ((int)(Original_ExportGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[221].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[222].Value = global::System.DBNull.Value;
                }
                if ((Original_NotificationEnabled.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[223].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[224].Value = ((int)(Original_NotificationEnabled.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[223].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[224].Value = global::System.DBNull.Value;
                }
                if ((Original_AttachmentVersionGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[225].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[226].Value = ((int)(Original_AttachmentVersionGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[225].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[226].Value = global::System.DBNull.Value;
                }
                if ((Original_RedactEditGrp.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[227].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[228].Value = ((int)(Original_RedactEditGrp.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[227].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[228].Value = global::System.DBNull.Value;
                }
                if ((Original_UseTableIcons.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[229].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[230].Value = ((bool)(Original_UseTableIcons.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[229].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[230].Value = global::System.DBNull.Value;
                }
                if ((Original_SignatureCaptureOn.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[231].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[232].Value = ((int)(Original_SignatureCaptureOn.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[231].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[232].Value = global::System.DBNull.Value;
                }
                if ((Original_InactiveRecordGroup.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[233].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[234].Value = ((int)(Original_InactiveRecordGroup.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[233].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[234].Value = global::System.DBNull.Value;
                }
                if ((Original_PrintImageFooter.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[235].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[236].Value = ((bool)(Original_PrintImageFooter.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[235].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[236].Value = global::System.DBNull.Value;
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(
                        string UserName,
                        global::System.Nullable<float> HeadingHeight,
                        global::System.Nullable<short> RowHeight,
                        string GridFontName,
                        global::System.Nullable<float> GridFontSize,
                        global::System.Nullable<bool> GridFontBold,
                        global::System.Nullable<short> GridHdrAttributes,
                        string TabFontName,
                        global::System.Nullable<float> TabFontSize,
                        global::System.Nullable<bool> TabFontBold,
                        string BaseFontName,
                        global::System.Nullable<float> BaseFontSize,
                        global::System.Nullable<bool> BaseFontBold,
                        global::System.Nullable<short> GridOffsetX,
                        global::System.Nullable<short> GridOffsetY,
                        global::System.Nullable<short> TabMaxWidth,
                        global::System.Nullable<short> TabCutSize,
                        global::System.Nullable<short> TabHeight,
                        global::System.Nullable<short> TabRowOffset,
                        global::System.Nullable<short> TabSelectType,
                        global::System.Nullable<short> TabsPerRow,
                        global::System.Nullable<short> FrameWidth,
                        global::System.Nullable<int> RMAGgroup,
                        global::System.Nullable<int> MgrGroup,
                        global::System.Nullable<short> LibrarianMDIPercent,
                        global::System.Nullable<int> ImageBackColor1,
                        global::System.Nullable<int> ImageBackColor2,
                        global::System.Nullable<int> ImageBackColor3,
                        global::System.Nullable<int> ImageGridBackColor1,
                        global::System.Nullable<int> ImageGridBackColor2,
                        global::System.Nullable<int> ImageGridBackColor3,
                        global::System.Nullable<int> AnnotationAdd,
                        global::System.Nullable<int> AnnotationEdit,
                        global::System.Nullable<int> AnnotationDelete,
                        global::System.Nullable<int> AnnotationView,
                        string NoGridURL,
                        global::System.Nullable<int> ADOConnectionTimeout,
                        string DefaultOutputSettingsId,
                        string LSAfterDestinationScanned,
                        string LSAfterObjectScanned,
                        string LSAfterDestinationAccepted,
                        string LSAfterObjectAccepted,
                        string LSAfterTrackingComplete,
                        global::System.Nullable<bool> UseViewDisplayMode,
                        global::System.Nullable<int> FormViewMinLines,
                        global::System.Nullable<int> ImportRunGroup,
                        global::System.Nullable<int> ExpressSetupGroup,
                        global::System.Nullable<int> ManualTrackingGroup,
                        global::System.Nullable<int> MaxHistoryDays,
                        global::System.Nullable<int> MaxHistoryItems,
                        string TrackingAdditionalField1Desc,
                        global::System.Nullable<int> TrackingAdditionalField1Type,
                        string TrackingAdditionalField2Desc,
                        global::System.Nullable<bool> AllowRequests,
                        global::System.Nullable<bool> AllowWaitList,
                        global::System.Nullable<bool> PopupWaitList,
                        global::System.Nullable<int> RequestorOperatorGrp,
                        global::System.Nullable<int> RequestorHighPGrp,
                        global::System.Nullable<bool> RetentionTurnOffCitations,
                        global::System.Nullable<int> RetentionYearEnd,
                        global::System.Nullable<int> RetentionAttachDelGroup,
                        global::System.Nullable<int> RetentionOperatorGroup,
                        global::System.Nullable<int> GridBackColorEven,
                        global::System.Nullable<int> GridBackColorOdd,
                        global::System.Nullable<int> GridForeColorEven,
                        global::System.Nullable<int> GridForeColorOdd,
                        global::System.Nullable<int> ReportGridColor,
                        global::System.Nullable<bool> AlternateRowColors,
                        global::System.Nullable<int> ArchGroup,
                        global::System.Nullable<int> COLDGroup,
                        global::System.Nullable<bool> DateDueOn,
                        global::System.Nullable<int> FaxmGroup,
                        global::System.Nullable<int> ImportGroup,
                        global::System.Nullable<int> LabelGroup,
                        global::System.Nullable<bool> LitigationOn,
                        global::System.Nullable<bool> NetworkSecurityOn,
                        global::System.Nullable<int> OtherGroup,
                        global::System.Nullable<int> PCFilesEditGrp,
                        global::System.Nullable<int> PCFilesNVerGrp,
                        string Picture,
                        global::System.Nullable<bool> PrintFast,
                        global::System.Nullable<bool> ReconciliationOn,
                        global::System.Nullable<int> RedactViewGrp,
                        global::System.Nullable<bool> RetentionOn,
                        global::System.Nullable<int> ScanGroup,
                        global::System.Nullable<int> SecurityGroup,
                        global::System.Nullable<int> SQLGroup,
                        global::System.Nullable<int> TrackingGroup,
                        global::System.Nullable<bool> TrackingOutOn,
                        global::System.Nullable<int> ReqAutoPrintMethod,
                        global::System.Nullable<int> ReqAutoPrintCopies,
                        global::System.Nullable<int> ReqAutoPrintInterval,
                        global::System.Nullable<int> ReqAutoPrintIDType,
                        global::System.Nullable<int> BatchRequestGroup,
                        global::System.Nullable<int> AuditingSecurityManagerGrp,
                        global::System.Nullable<int> RequestConfirmation,
                        global::System.Nullable<bool> EMailDeliveryEnabled,
                        global::System.Nullable<bool> EMailWaitListEnabled,
                        global::System.Nullable<int> EMailSendMethod,
                        global::System.Nullable<int> EMailConfirmationType,
                        global::System.Nullable<bool> SMTPAuthentication,
                        global::System.Nullable<int> SMTPPort,
                        string SMTPServer,
                        string SMTPUserAddress,
                        string SMTPUserPassword,
                        global::System.Nullable<global::System.DateTime> LastPastDueEmailTime,
                        string LastPastDueEmailUser,
                        global::System.Nullable<bool> EMailExceptionEnabled,
                        global::System.Nullable<short> DefaultDueBackDays,
                        global::System.Nullable<int> ImageCaptureGroup,
                        global::System.Nullable<int> ExportGroup,
                        global::System.Nullable<int> NotificationEnabled,
                        global::System.Nullable<int> AttachmentVersionGroup,
                        global::System.Nullable<int> RedactEditGrp,
                        global::System.Nullable<bool> UseTableIcons,
                        global::System.Nullable<int> SignatureCaptureOn,
                        global::System.Nullable<int> InactiveRecordGroup,
                        global::System.Nullable<bool> PrintImageFooter,
                        int Original_Id,
                        string Original_UserName,
                        global::System.Nullable<float> Original_HeadingHeight,
                        global::System.Nullable<short> Original_RowHeight,
                        string Original_GridFontName,
                        global::System.Nullable<float> Original_GridFontSize,
                        global::System.Nullable<bool> Original_GridFontBold,
                        global::System.Nullable<short> Original_GridHdrAttributes,
                        string Original_TabFontName,
                        global::System.Nullable<float> Original_TabFontSize,
                        global::System.Nullable<bool> Original_TabFontBold,
                        string Original_BaseFontName,
                        global::System.Nullable<float> Original_BaseFontSize,
                        global::System.Nullable<bool> Original_BaseFontBold,
                        global::System.Nullable<short> Original_GridOffsetX,
                        global::System.Nullable<short> Original_GridOffsetY,
                        global::System.Nullable<short> Original_TabMaxWidth,
                        global::System.Nullable<short> Original_TabCutSize,
                        global::System.Nullable<short> Original_TabHeight,
                        global::System.Nullable<short> Original_TabRowOffset,
                        global::System.Nullable<short> Original_TabSelectType,
                        global::System.Nullable<short> Original_TabsPerRow,
                        global::System.Nullable<short> Original_FrameWidth,
                        global::System.Nullable<int> Original_RMAGgroup,
                        global::System.Nullable<int> Original_MgrGroup,
                        global::System.Nullable<short> Original_LibrarianMDIPercent,
                        global::System.Nullable<int> Original_ImageBackColor1,
                        global::System.Nullable<int> Original_ImageBackColor2,
                        global::System.Nullable<int> Original_ImageBackColor3,
                        global::System.Nullable<int> Original_ImageGridBackColor1,
                        global::System.Nullable<int> Original_ImageGridBackColor2,
                        global::System.Nullable<int> Original_ImageGridBackColor3,
                        global::System.Nullable<int> Original_AnnotationAdd,
                        global::System.Nullable<int> Original_AnnotationEdit,
                        global::System.Nullable<int> Original_AnnotationDelete,
                        global::System.Nullable<int> Original_AnnotationView,
                        string Original_NoGridURL,
                        global::System.Nullable<int> Original_ADOConnectionTimeout,
                        string Original_DefaultOutputSettingsId,
                        string Original_LSAfterDestinationScanned,
                        string Original_LSAfterObjectScanned,
                        string Original_LSAfterDestinationAccepted,
                        string Original_LSAfterObjectAccepted,
                        string Original_LSAfterTrackingComplete,
                        global::System.Nullable<bool> Original_UseViewDisplayMode,
                        global::System.Nullable<int> Original_FormViewMinLines,
                        global::System.Nullable<int> Original_ImportRunGroup,
                        global::System.Nullable<int> Original_ExpressSetupGroup,
                        global::System.Nullable<int> Original_ManualTrackingGroup,
                        global::System.Nullable<int> Original_MaxHistoryDays,
                        global::System.Nullable<int> Original_MaxHistoryItems,
                        string Original_TrackingAdditionalField1Desc,
                        global::System.Nullable<int> Original_TrackingAdditionalField1Type,
                        string Original_TrackingAdditionalField2Desc,
                        global::System.Nullable<bool> Original_AllowRequests,
                        global::System.Nullable<bool> Original_AllowWaitList,
                        global::System.Nullable<bool> Original_PopupWaitList,
                        global::System.Nullable<int> Original_RequestorOperatorGrp,
                        global::System.Nullable<int> Original_RequestorHighPGrp,
                        global::System.Nullable<bool> Original_RetentionTurnOffCitations,
                        global::System.Nullable<int> Original_RetentionYearEnd,
                        global::System.Nullable<int> Original_RetentionAttachDelGroup,
                        global::System.Nullable<int> Original_RetentionOperatorGroup,
                        global::System.Nullable<int> Original_GridBackColorEven,
                        global::System.Nullable<int> Original_GridBackColorOdd,
                        global::System.Nullable<int> Original_GridForeColorEven,
                        global::System.Nullable<int> Original_GridForeColorOdd,
                        global::System.Nullable<int> Original_ReportGridColor,
                        global::System.Nullable<bool> Original_AlternateRowColors,
                        global::System.Nullable<int> Original_ArchGroup,
                        global::System.Nullable<int> Original_COLDGroup,
                        global::System.Nullable<bool> Original_DateDueOn,
                        global::System.Nullable<int> Original_FaxmGroup,
                        global::System.Nullable<int> Original_ImportGroup,
                        global::System.Nullable<int> Original_LabelGroup,
                        global::System.Nullable<bool> Original_LitigationOn,
                        global::System.Nullable<bool> Original_NetworkSecurityOn,
                        global::System.Nullable<int> Original_OtherGroup,
                        global::System.Nullable<int> Original_PCFilesEditGrp,
                        global::System.Nullable<int> Original_PCFilesNVerGrp,
                        string Original_Picture,
                        global::System.Nullable<bool> Original_PrintFast,
                        global::System.Nullable<bool> Original_ReconciliationOn,
                        global::System.Nullable<int> Original_RedactViewGrp,
                        global::System.Nullable<bool> Original_RetentionOn,
                        global::System.Nullable<int> Original_ScanGroup,
                        global::System.Nullable<int> Original_SecurityGroup,
                        global::System.Nullable<int> Original_SQLGroup,
                        global::System.Nullable<int> Original_TrackingGroup,
                        global::System.Nullable<bool> Original_TrackingOutOn,
                        global::System.Nullable<int> Original_ReqAutoPrintMethod,
                        global::System.Nullable<int> Original_ReqAutoPrintCopies,
                        global::System.Nullable<int> Original_ReqAutoPrintInterval,
                        global::System.Nullable<int> Original_ReqAutoPrintIDType,
                        global::System.Nullable<int> Original_BatchRequestGroup,
                        global::System.Nullable<int> Original_AuditingSecurityManagerGrp,
                        global::System.Nullable<int> Original_RequestConfirmation,
                        global::System.Nullable<bool> Original_EMailDeliveryEnabled,
                        global::System.Nullable<bool> Original_EMailWaitListEnabled,
                        global::System.Nullable<int> Original_EMailSendMethod,
                        global::System.Nullable<int> Original_EMailConfirmationType,
                        global::System.Nullable<bool> Original_SMTPAuthentication,
                        global::System.Nullable<int> Original_SMTPPort,
                        string Original_SMTPServer,
                        string Original_SMTPUserAddress,
                        string Original_SMTPUserPassword,
                        global::System.Nullable<global::System.DateTime> Original_LastPastDueEmailTime,
                        string Original_LastPastDueEmailUser,
                        global::System.Nullable<bool> Original_EMailExceptionEnabled,
                        global::System.Nullable<short> Original_DefaultDueBackDays,
                        global::System.Nullable<int> Original_ImageCaptureGroup,
                        global::System.Nullable<int> Original_ExportGroup,
                        global::System.Nullable<int> Original_NotificationEnabled,
                        global::System.Nullable<int> Original_AttachmentVersionGroup,
                        global::System.Nullable<int> Original_RedactEditGrp,
                        global::System.Nullable<bool> Original_UseTableIcons,
                        global::System.Nullable<int> Original_SignatureCaptureOn,
                        global::System.Nullable<int> Original_InactiveRecordGroup,
                        global::System.Nullable<bool> Original_PrintImageFooter,
                        int Id)
            {
                if ((UserName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(UserName));
                }
                if ((HeadingHeight.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = ((float)(HeadingHeight.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
                }
                if ((RowHeight.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(RowHeight.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                if ((GridFontName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(GridFontName));
                }
                if ((GridFontSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(GridFontSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                if ((GridFontBold.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(GridFontBold.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
                }
                if ((GridHdrAttributes.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(GridHdrAttributes.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                if ((TabFontName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(TabFontName));
                }
                if ((TabFontSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((float)(TabFontSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                if ((TabFontBold.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(TabFontBold.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
                }
                if ((BaseFontName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(BaseFontName));
                }
                if ((BaseFontSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(BaseFontSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
                }
                if ((BaseFontBold.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(BaseFontBold.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                if ((GridOffsetX.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(GridOffsetX.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
                }
                if ((GridOffsetY.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(GridOffsetY.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                if ((TabMaxWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((short)(TabMaxWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
                }
                if ((TabCutSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(TabCutSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
                }
                if ((TabHeight.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[17].Value = ((short)(TabHeight.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
                }
                if ((TabRowOffset.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[18].Value = ((short)(TabRowOffset.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
                }
                if ((TabSelectType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[19].Value = ((short)(TabSelectType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
                }
                if ((TabsPerRow.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[20].Value = ((short)(TabsPerRow.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
                }
                if ((FrameWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[21].Value = ((short)(FrameWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
                }
                if ((RMAGgroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(RMAGgroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
                }
                if ((MgrGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(MgrGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
                }
                if ((LibrarianMDIPercent.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[24].Value = ((short)(LibrarianMDIPercent.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
                }
                if ((ImageBackColor1.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(ImageBackColor1.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
                }
                if ((ImageBackColor2.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(ImageBackColor2.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
                }
                if ((ImageBackColor3.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(ImageBackColor3.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
                }
                if ((ImageGridBackColor1.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(ImageGridBackColor1.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
                }
                if ((ImageGridBackColor2.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(ImageGridBackColor2.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
                }
                if ((ImageGridBackColor3.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(ImageGridBackColor3.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
                }
                if ((AnnotationAdd.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(AnnotationAdd.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
                }
                if ((AnnotationEdit.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(AnnotationEdit.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
                }
                if ((AnnotationDelete.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(AnnotationDelete.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
                }
                if ((AnnotationView.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(AnnotationView.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
                }
                if ((NoGridURL == null))
                {
                    this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(NoGridURL));
                }
                if ((ADOConnectionTimeout.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(ADOConnectionTimeout.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
                }
                if ((DefaultOutputSettingsId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(DefaultOutputSettingsId));
                }
                if ((LSAfterDestinationScanned == null))
                {
                    this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(LSAfterDestinationScanned));
                }
                if ((LSAfterObjectScanned == null))
                {
                    this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(LSAfterObjectScanned));
                }
                if ((LSAfterDestinationAccepted == null))
                {
                    this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(LSAfterDestinationAccepted));
                }
                if ((LSAfterObjectAccepted == null))
                {
                    this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(LSAfterObjectAccepted));
                }
                if ((LSAfterTrackingComplete == null))
                {
                    this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(LSAfterTrackingComplete));
                }
                if ((UseViewDisplayMode.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(UseViewDisplayMode.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
                }
                if ((FormViewMinLines.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(FormViewMinLines.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
                }
                if ((ImportRunGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(ImportRunGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
                }
                if ((ExpressSetupGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(ExpressSetupGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
                }
                if ((ManualTrackingGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(ManualTrackingGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
                }
                if ((MaxHistoryDays.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(MaxHistoryDays.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
                }
                if ((MaxHistoryItems.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(MaxHistoryItems.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
                }
                if ((TrackingAdditionalField1Desc == null))
                {
                    this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(TrackingAdditionalField1Desc));
                }
                if ((TrackingAdditionalField1Type.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(TrackingAdditionalField1Type.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
                }
                if ((TrackingAdditionalField2Desc == null))
                {
                    this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(TrackingAdditionalField2Desc));
                }
                if ((AllowRequests.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(AllowRequests.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
                }
                if ((AllowWaitList.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(AllowWaitList.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
                }
                if ((PopupWaitList.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(PopupWaitList.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
                }
                if ((RequestorOperatorGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(RequestorOperatorGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
                }
                if ((RequestorHighPGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(RequestorHighPGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
                }
                if ((RetentionTurnOffCitations.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(RetentionTurnOffCitations.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
                }
                if ((RetentionYearEnd.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(RetentionYearEnd.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
                }
                if ((RetentionAttachDelGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(RetentionAttachDelGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
                }
                if ((RetentionOperatorGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(RetentionOperatorGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
                }
                if ((GridBackColorEven.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(GridBackColorEven.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
                }
                if ((GridBackColorOdd.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(GridBackColorOdd.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
                }
                if ((GridForeColorEven.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(GridForeColorEven.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
                }
                if ((GridForeColorOdd.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(GridForeColorOdd.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
                }
                if ((ReportGridColor.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(ReportGridColor.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
                }
                if ((AlternateRowColors.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(AlternateRowColors.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
                }
                if ((ArchGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(ArchGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
                }
                if ((COLDGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(COLDGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
                }
                if ((DateDueOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(DateDueOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
                }
                if ((FaxmGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(FaxmGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
                }
                if ((ImportGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(ImportGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
                }
                if ((LabelGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(LabelGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
                }
                if ((LitigationOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[74].Value = ((bool)(LitigationOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
                }
                if ((NetworkSecurityOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(NetworkSecurityOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
                }
                if ((OtherGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(OtherGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
                }
                if ((PCFilesEditGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(PCFilesEditGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
                }
                if ((PCFilesNVerGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(PCFilesNVerGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
                }
                if ((Picture == null))
                {
                    this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Picture));
                }
                if ((PrintFast.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[80].Value = ((bool)(PrintFast.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
                }
                if ((ReconciliationOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(ReconciliationOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
                }
                if ((RedactViewGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(RedactViewGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
                }
                if ((RetentionOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(RetentionOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
                }
                if ((ScanGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(ScanGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
                }
                if ((SecurityGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(SecurityGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
                }
                if ((SQLGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(SQLGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
                }
                if ((TrackingGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(TrackingGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
                }
                if ((TrackingOutOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[88].Value = ((bool)(TrackingOutOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
                }
                if ((ReqAutoPrintMethod.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(ReqAutoPrintMethod.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
                }
                if ((ReqAutoPrintCopies.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(ReqAutoPrintCopies.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
                }
                if ((ReqAutoPrintInterval.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(ReqAutoPrintInterval.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
                }
                if ((ReqAutoPrintIDType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(ReqAutoPrintIDType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
                }
                if ((BatchRequestGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(BatchRequestGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
                }
                if ((AuditingSecurityManagerGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[94].Value = ((int)(AuditingSecurityManagerGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
                }
                if ((RequestConfirmation.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(RequestConfirmation.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
                }
                if ((EMailDeliveryEnabled.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[96].Value = ((bool)(EMailDeliveryEnabled.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
                }
                if ((EMailWaitListEnabled.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[97].Value = ((bool)(EMailWaitListEnabled.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
                }
                if ((EMailSendMethod.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[98].Value = ((int)(EMailSendMethod.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
                }
                if ((EMailConfirmationType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(EMailConfirmationType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
                }
                if ((SMTPAuthentication.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[100].Value = ((bool)(SMTPAuthentication.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
                }
                if ((SMTPPort.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(SMTPPort.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
                }
                if ((SMTPServer == null))
                {
                    this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(SMTPServer));
                }
                if ((SMTPUserAddress == null))
                {
                    this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(SMTPUserAddress));
                }
                if ((SMTPUserPassword == null))
                {
                    this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(SMTPUserPassword));
                }
                if ((LastPastDueEmailTime.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[105].Value = ((System.DateTime)(LastPastDueEmailTime.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
                }
                if ((LastPastDueEmailUser == null))
                {
                    this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(LastPastDueEmailUser));
                }
                if ((EMailExceptionEnabled.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[107].Value = ((bool)(EMailExceptionEnabled.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
                }
                if ((DefaultDueBackDays.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[108].Value = ((short)(DefaultDueBackDays.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
                }
                if ((ImageCaptureGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(ImageCaptureGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
                }
                if ((ExportGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(ExportGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
                }
                if ((NotificationEnabled.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[111].Value = ((int)(NotificationEnabled.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
                }
                if ((AttachmentVersionGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[112].Value = ((int)(AttachmentVersionGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
                }
                if ((RedactEditGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(RedactEditGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
                }
                if ((UseTableIcons.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[114].Value = ((bool)(UseTableIcons.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
                }
                if ((SignatureCaptureOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[115].Value = ((int)(SignatureCaptureOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
                }
                if ((InactiveRecordGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[116].Value = ((int)(InactiveRecordGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
                }
                if ((PrintImageFooter.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[117].Value = ((bool)(PrintImageFooter.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
                }
                this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(Original_Id));
                if ((Original_UserName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(Original_UserName));
                }
                if ((Original_HeadingHeight.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[122].Value = ((float)(Original_HeadingHeight.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
                }
                if ((Original_RowHeight.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[124].Value = ((short)(Original_RowHeight.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
                }
                if ((Original_GridFontName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Original_GridFontName));
                }
                if ((Original_GridFontSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[128].Value = ((float)(Original_GridFontSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
                }
                if ((Original_GridFontBold.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[130].Value = ((bool)(Original_GridFontBold.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
                }
                if ((Original_GridHdrAttributes.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[132].Value = ((short)(Original_GridHdrAttributes.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
                }
                if ((Original_TabFontName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[134].Value = ((string)(Original_TabFontName));
                }
                if ((Original_TabFontSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[136].Value = ((float)(Original_TabFontSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
                }
                if ((Original_TabFontBold.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[138].Value = ((bool)(Original_TabFontBold.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
                }
                if ((Original_BaseFontName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(Original_BaseFontName));
                }
                if ((Original_BaseFontSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[142].Value = ((float)(Original_BaseFontSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
                }
                if ((Original_BaseFontBold.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[144].Value = ((bool)(Original_BaseFontBold.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
                }
                if ((Original_GridOffsetX.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[146].Value = ((short)(Original_GridOffsetX.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
                }
                if ((Original_GridOffsetY.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[148].Value = ((short)(Original_GridOffsetY.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
                }
                if ((Original_TabMaxWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[150].Value = ((short)(Original_TabMaxWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
                }
                if ((Original_TabCutSize.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[152].Value = ((short)(Original_TabCutSize.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
                }
                if ((Original_TabHeight.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[154].Value = ((short)(Original_TabHeight.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
                }
                if ((Original_TabRowOffset.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[156].Value = ((short)(Original_TabRowOffset.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
                }
                if ((Original_TabSelectType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[158].Value = ((short)(Original_TabSelectType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
                }
                if ((Original_TabsPerRow.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[160].Value = ((short)(Original_TabsPerRow.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
                }
                if ((Original_FrameWidth.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[162].Value = ((short)(Original_FrameWidth.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
                }
                if ((Original_RMAGgroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[164].Value = ((int)(Original_RMAGgroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
                }
                if ((Original_MgrGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[166].Value = ((int)(Original_MgrGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[166].Value = global::System.DBNull.Value;
                }
                if ((Original_LibrarianMDIPercent.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[168].Value = ((short)(Original_LibrarianMDIPercent.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[168].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageBackColor1.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[170].Value = ((int)(Original_ImageBackColor1.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[170].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageBackColor2.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[172].Value = ((int)(Original_ImageBackColor2.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[172].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageBackColor3.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[174].Value = ((int)(Original_ImageBackColor3.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[174].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageGridBackColor1.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[176].Value = ((int)(Original_ImageGridBackColor1.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[176].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageGridBackColor2.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[178].Value = ((int)(Original_ImageGridBackColor2.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[178].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageGridBackColor3.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[180].Value = ((int)(Original_ImageGridBackColor3.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[180].Value = global::System.DBNull.Value;
                }
                if ((Original_AnnotationAdd.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[182].Value = ((int)(Original_AnnotationAdd.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[182].Value = global::System.DBNull.Value;
                }
                if ((Original_AnnotationEdit.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[184].Value = ((int)(Original_AnnotationEdit.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[184].Value = global::System.DBNull.Value;
                }
                if ((Original_AnnotationDelete.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[186].Value = ((int)(Original_AnnotationDelete.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[186].Value = global::System.DBNull.Value;
                }
                if ((Original_AnnotationView.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[188].Value = ((int)(Original_AnnotationView.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
                }
                if ((Original_NoGridURL == null))
                {
                    this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[190].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[190].Value = ((string)(Original_NoGridURL));
                }
                if ((Original_ADOConnectionTimeout.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[192].Value = ((int)(Original_ADOConnectionTimeout.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[192].Value = global::System.DBNull.Value;
                }
                if ((Original_DefaultOutputSettingsId == null))
                {
                    this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[194].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[194].Value = ((string)(Original_DefaultOutputSettingsId));
                }
                if ((Original_LSAfterDestinationScanned == null))
                {
                    this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[196].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[196].Value = ((string)(Original_LSAfterDestinationScanned));
                }
                if ((Original_LSAfterObjectScanned == null))
                {
                    this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[198].Value = ((string)(Original_LSAfterObjectScanned));
                }
                if ((Original_LSAfterDestinationAccepted == null))
                {
                    this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[200].Value = ((string)(Original_LSAfterDestinationAccepted));
                }
                if ((Original_LSAfterObjectAccepted == null))
                {
                    this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[202].Value = ((string)(Original_LSAfterObjectAccepted));
                }
                if ((Original_LSAfterTrackingComplete == null))
                {
                    this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[204].Value = ((string)(Original_LSAfterTrackingComplete));
                }
                if ((Original_UseViewDisplayMode.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[206].Value = ((bool)(Original_UseViewDisplayMode.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
                }
                if ((Original_FormViewMinLines.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[208].Value = ((int)(Original_FormViewMinLines.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
                }
                if ((Original_ImportRunGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[210].Value = ((int)(Original_ImportRunGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
                }
                if ((Original_ExpressSetupGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[212].Value = ((int)(Original_ExpressSetupGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
                }
                if ((Original_ManualTrackingGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[214].Value = ((int)(Original_ManualTrackingGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
                }
                if ((Original_MaxHistoryDays.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[216].Value = ((int)(Original_MaxHistoryDays.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
                }
                if ((Original_MaxHistoryItems.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[218].Value = ((int)(Original_MaxHistoryItems.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
                }
                if ((Original_TrackingAdditionalField1Desc == null))
                {
                    this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[220].Value = ((string)(Original_TrackingAdditionalField1Desc));
                }
                if ((Original_TrackingAdditionalField1Type.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[222].Value = ((int)(Original_TrackingAdditionalField1Type.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
                }
                if ((Original_TrackingAdditionalField2Desc == null))
                {
                    this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[224].Value = ((string)(Original_TrackingAdditionalField2Desc));
                }
                if ((Original_AllowRequests.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[226].Value = ((bool)(Original_AllowRequests.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[226].Value = global::System.DBNull.Value;
                }
                if ((Original_AllowWaitList.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[228].Value = ((bool)(Original_AllowWaitList.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[228].Value = global::System.DBNull.Value;
                }
                if ((Original_PopupWaitList.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[230].Value = ((bool)(Original_PopupWaitList.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[230].Value = global::System.DBNull.Value;
                }
                if ((Original_RequestorOperatorGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[232].Value = ((int)(Original_RequestorOperatorGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
                }
                if ((Original_RequestorHighPGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[234].Value = ((int)(Original_RequestorHighPGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[234].Value = global::System.DBNull.Value;
                }
                if ((Original_RetentionTurnOffCitations.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[236].Value = ((bool)(Original_RetentionTurnOffCitations.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[236].Value = global::System.DBNull.Value;
                }
                if ((Original_RetentionYearEnd.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[238].Value = ((int)(Original_RetentionYearEnd.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[238].Value = global::System.DBNull.Value;
                }
                if ((Original_RetentionAttachDelGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[240].Value = ((int)(Original_RetentionAttachDelGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[240].Value = global::System.DBNull.Value;
                }
                if ((Original_RetentionOperatorGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[242].Value = ((int)(Original_RetentionOperatorGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[242].Value = global::System.DBNull.Value;
                }
                if ((Original_GridBackColorEven.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[244].Value = ((int)(Original_GridBackColorEven.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[244].Value = global::System.DBNull.Value;
                }
                if ((Original_GridBackColorOdd.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[245].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[246].Value = ((int)(Original_GridBackColorOdd.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[245].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[246].Value = global::System.DBNull.Value;
                }
                if ((Original_GridForeColorEven.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[247].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[248].Value = ((int)(Original_GridForeColorEven.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[247].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[248].Value = global::System.DBNull.Value;
                }
                if ((Original_GridForeColorOdd.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[249].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[250].Value = ((int)(Original_GridForeColorOdd.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[249].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[250].Value = global::System.DBNull.Value;
                }
                if ((Original_ReportGridColor.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[251].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[252].Value = ((int)(Original_ReportGridColor.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[251].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[252].Value = global::System.DBNull.Value;
                }
                if ((Original_AlternateRowColors.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[253].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[254].Value = ((bool)(Original_AlternateRowColors.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[253].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[254].Value = global::System.DBNull.Value;
                }
                if ((Original_ArchGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[255].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[256].Value = ((int)(Original_ArchGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[255].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[256].Value = global::System.DBNull.Value;
                }
                if ((Original_COLDGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[257].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[258].Value = ((int)(Original_COLDGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[257].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[258].Value = global::System.DBNull.Value;
                }
                if ((Original_DateDueOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[259].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[260].Value = ((bool)(Original_DateDueOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[259].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[260].Value = global::System.DBNull.Value;
                }
                if ((Original_FaxmGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[261].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[262].Value = ((int)(Original_FaxmGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[261].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[262].Value = global::System.DBNull.Value;
                }
                if ((Original_ImportGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[263].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[264].Value = ((int)(Original_ImportGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[263].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[264].Value = global::System.DBNull.Value;
                }
                if ((Original_LabelGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[265].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[266].Value = ((int)(Original_LabelGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[265].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[266].Value = global::System.DBNull.Value;
                }
                if ((Original_LitigationOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[267].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[268].Value = ((bool)(Original_LitigationOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[267].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[268].Value = global::System.DBNull.Value;
                }
                if ((Original_NetworkSecurityOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[269].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[270].Value = ((bool)(Original_NetworkSecurityOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[269].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[270].Value = global::System.DBNull.Value;
                }
                if ((Original_OtherGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[271].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[272].Value = ((int)(Original_OtherGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[271].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[272].Value = global::System.DBNull.Value;
                }
                if ((Original_PCFilesEditGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[273].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[274].Value = ((int)(Original_PCFilesEditGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[273].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[274].Value = global::System.DBNull.Value;
                }
                if ((Original_PCFilesNVerGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[275].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[276].Value = ((int)(Original_PCFilesNVerGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[275].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[276].Value = global::System.DBNull.Value;
                }
                if ((Original_Picture == null))
                {
                    this.Adapter.UpdateCommand.Parameters[277].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[278].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[277].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[278].Value = ((string)(Original_Picture));
                }
                if ((Original_PrintFast.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[279].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[280].Value = ((bool)(Original_PrintFast.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[279].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[280].Value = global::System.DBNull.Value;
                }
                if ((Original_ReconciliationOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[281].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[282].Value = ((bool)(Original_ReconciliationOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[281].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[282].Value = global::System.DBNull.Value;
                }
                if ((Original_RedactViewGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[283].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[284].Value = ((int)(Original_RedactViewGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[283].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[284].Value = global::System.DBNull.Value;
                }
                if ((Original_RetentionOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[285].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[286].Value = ((bool)(Original_RetentionOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[285].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[286].Value = global::System.DBNull.Value;
                }
                if ((Original_ScanGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[287].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[288].Value = ((int)(Original_ScanGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[287].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[288].Value = global::System.DBNull.Value;
                }
                if ((Original_SecurityGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[289].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[290].Value = ((int)(Original_SecurityGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[289].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[290].Value = global::System.DBNull.Value;
                }
                if ((Original_SQLGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[291].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[292].Value = ((int)(Original_SQLGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[291].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[292].Value = global::System.DBNull.Value;
                }
                if ((Original_TrackingGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[293].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[294].Value = ((int)(Original_TrackingGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[293].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[294].Value = global::System.DBNull.Value;
                }
                if ((Original_TrackingOutOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[295].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[296].Value = ((bool)(Original_TrackingOutOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[295].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[296].Value = global::System.DBNull.Value;
                }
                if ((Original_ReqAutoPrintMethod.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[297].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[298].Value = ((int)(Original_ReqAutoPrintMethod.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[297].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[298].Value = global::System.DBNull.Value;
                }
                if ((Original_ReqAutoPrintCopies.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[299].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[300].Value = ((int)(Original_ReqAutoPrintCopies.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[299].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[300].Value = global::System.DBNull.Value;
                }
                if ((Original_ReqAutoPrintInterval.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[301].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[302].Value = ((int)(Original_ReqAutoPrintInterval.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[301].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[302].Value = global::System.DBNull.Value;
                }
                if ((Original_ReqAutoPrintIDType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[303].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[304].Value = ((int)(Original_ReqAutoPrintIDType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[303].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[304].Value = global::System.DBNull.Value;
                }
                if ((Original_BatchRequestGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[305].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[306].Value = ((int)(Original_BatchRequestGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[305].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[306].Value = global::System.DBNull.Value;
                }
                if ((Original_AuditingSecurityManagerGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[307].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[308].Value = ((int)(Original_AuditingSecurityManagerGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[307].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[308].Value = global::System.DBNull.Value;
                }
                if ((Original_RequestConfirmation.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[309].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[310].Value = ((int)(Original_RequestConfirmation.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[309].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[310].Value = global::System.DBNull.Value;
                }
                if ((Original_EMailDeliveryEnabled.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[311].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[312].Value = ((bool)(Original_EMailDeliveryEnabled.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[311].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[312].Value = global::System.DBNull.Value;
                }
                if ((Original_EMailWaitListEnabled.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[313].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[314].Value = ((bool)(Original_EMailWaitListEnabled.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[313].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[314].Value = global::System.DBNull.Value;
                }
                if ((Original_EMailSendMethod.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[315].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[316].Value = ((int)(Original_EMailSendMethod.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[315].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[316].Value = global::System.DBNull.Value;
                }
                if ((Original_EMailConfirmationType.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[317].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[318].Value = ((int)(Original_EMailConfirmationType.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[317].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[318].Value = global::System.DBNull.Value;
                }
                if ((Original_SMTPAuthentication.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[319].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[320].Value = ((bool)(Original_SMTPAuthentication.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[319].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[320].Value = global::System.DBNull.Value;
                }
                if ((Original_SMTPPort.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[321].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[322].Value = ((int)(Original_SMTPPort.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[321].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[322].Value = global::System.DBNull.Value;
                }
                if ((Original_SMTPServer == null))
                {
                    this.Adapter.UpdateCommand.Parameters[323].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[324].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[323].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[324].Value = ((string)(Original_SMTPServer));
                }
                if ((Original_SMTPUserAddress == null))
                {
                    this.Adapter.UpdateCommand.Parameters[325].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[326].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[325].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[326].Value = ((string)(Original_SMTPUserAddress));
                }
                if ((Original_SMTPUserPassword == null))
                {
                    this.Adapter.UpdateCommand.Parameters[327].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[328].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[327].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[328].Value = ((string)(Original_SMTPUserPassword));
                }
                if ((Original_LastPastDueEmailTime.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[329].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[330].Value = ((System.DateTime)(Original_LastPastDueEmailTime.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[329].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[330].Value = global::System.DBNull.Value;
                }
                if ((Original_LastPastDueEmailUser == null))
                {
                    this.Adapter.UpdateCommand.Parameters[331].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[332].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[331].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[332].Value = ((string)(Original_LastPastDueEmailUser));
                }
                if ((Original_EMailExceptionEnabled.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[333].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[334].Value = ((bool)(Original_EMailExceptionEnabled.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[333].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[334].Value = global::System.DBNull.Value;
                }
                if ((Original_DefaultDueBackDays.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[335].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[336].Value = ((short)(Original_DefaultDueBackDays.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[335].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[336].Value = global::System.DBNull.Value;
                }
                if ((Original_ImageCaptureGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[337].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[338].Value = ((int)(Original_ImageCaptureGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[337].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[338].Value = global::System.DBNull.Value;
                }
                if ((Original_ExportGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[339].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[340].Value = ((int)(Original_ExportGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[339].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[340].Value = global::System.DBNull.Value;
                }
                if ((Original_NotificationEnabled.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[341].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[342].Value = ((int)(Original_NotificationEnabled.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[341].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[342].Value = global::System.DBNull.Value;
                }
                if ((Original_AttachmentVersionGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[343].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[344].Value = ((int)(Original_AttachmentVersionGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[343].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[344].Value = global::System.DBNull.Value;
                }
                if ((Original_RedactEditGrp.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[345].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[346].Value = ((int)(Original_RedactEditGrp.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[345].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[346].Value = global::System.DBNull.Value;
                }
                if ((Original_UseTableIcons.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[347].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[348].Value = ((bool)(Original_UseTableIcons.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[347].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[348].Value = global::System.DBNull.Value;
                }
                if ((Original_SignatureCaptureOn.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[349].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[350].Value = ((int)(Original_SignatureCaptureOn.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[349].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[350].Value = global::System.DBNull.Value;
                }
                if ((Original_InactiveRecordGroup.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[351].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[352].Value = ((int)(Original_InactiveRecordGroup.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[351].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[352].Value = global::System.DBNull.Value;
                }
                if ((Original_PrintImageFooter.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[353].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[354].Value = ((bool)(Original_PrintImageFooter.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[353].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[354].Value = global::System.DBNull.Value;
                }
                this.Adapter.UpdateCommand.Parameters[355].Value = ((int)(Id));
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(
                        string UserName,
                        global::System.Nullable<float> HeadingHeight,
                        global::System.Nullable<short> RowHeight,
                        string GridFontName,
                        global::System.Nullable<float> GridFontSize,
                        global::System.Nullable<bool> GridFontBold,
                        global::System.Nullable<short> GridHdrAttributes,
                        string TabFontName,
                        global::System.Nullable<float> TabFontSize,
                        global::System.Nullable<bool> TabFontBold,
                        string BaseFontName,
                        global::System.Nullable<float> BaseFontSize,
                        global::System.Nullable<bool> BaseFontBold,
                        global::System.Nullable<short> GridOffsetX,
                        global::System.Nullable<short> GridOffsetY,
                        global::System.Nullable<short> TabMaxWidth,
                        global::System.Nullable<short> TabCutSize,
                        global::System.Nullable<short> TabHeight,
                        global::System.Nullable<short> TabRowOffset,
                        global::System.Nullable<short> TabSelectType,
                        global::System.Nullable<short> TabsPerRow,
                        global::System.Nullable<short> FrameWidth,
                        global::System.Nullable<int> RMAGgroup,
                        global::System.Nullable<int> MgrGroup,
                        global::System.Nullable<short> LibrarianMDIPercent,
                        global::System.Nullable<int> ImageBackColor1,
                        global::System.Nullable<int> ImageBackColor2,
                        global::System.Nullable<int> ImageBackColor3,
                        global::System.Nullable<int> ImageGridBackColor1,
                        global::System.Nullable<int> ImageGridBackColor2,
                        global::System.Nullable<int> ImageGridBackColor3,
                        global::System.Nullable<int> AnnotationAdd,
                        global::System.Nullable<int> AnnotationEdit,
                        global::System.Nullable<int> AnnotationDelete,
                        global::System.Nullable<int> AnnotationView,
                        string NoGridURL,
                        global::System.Nullable<int> ADOConnectionTimeout,
                        string DefaultOutputSettingsId,
                        string LSAfterDestinationScanned,
                        string LSAfterObjectScanned,
                        string LSAfterDestinationAccepted,
                        string LSAfterObjectAccepted,
                        string LSAfterTrackingComplete,
                        global::System.Nullable<bool> UseViewDisplayMode,
                        global::System.Nullable<int> FormViewMinLines,
                        global::System.Nullable<int> ImportRunGroup,
                        global::System.Nullable<int> ExpressSetupGroup,
                        global::System.Nullable<int> ManualTrackingGroup,
                        global::System.Nullable<int> MaxHistoryDays,
                        global::System.Nullable<int> MaxHistoryItems,
                        string TrackingAdditionalField1Desc,
                        global::System.Nullable<int> TrackingAdditionalField1Type,
                        string TrackingAdditionalField2Desc,
                        global::System.Nullable<bool> AllowRequests,
                        global::System.Nullable<bool> AllowWaitList,
                        global::System.Nullable<bool> PopupWaitList,
                        global::System.Nullable<int> RequestorOperatorGrp,
                        global::System.Nullable<int> RequestorHighPGrp,
                        global::System.Nullable<bool> RetentionTurnOffCitations,
                        global::System.Nullable<int> RetentionYearEnd,
                        global::System.Nullable<int> RetentionAttachDelGroup,
                        global::System.Nullable<int> RetentionOperatorGroup,
                        global::System.Nullable<int> GridBackColorEven,
                        global::System.Nullable<int> GridBackColorOdd,
                        global::System.Nullable<int> GridForeColorEven,
                        global::System.Nullable<int> GridForeColorOdd,
                        global::System.Nullable<int> ReportGridColor,
                        global::System.Nullable<bool> AlternateRowColors,
                        global::System.Nullable<int> ArchGroup,
                        global::System.Nullable<int> COLDGroup,
                        global::System.Nullable<bool> DateDueOn,
                        global::System.Nullable<int> FaxmGroup,
                        global::System.Nullable<int> ImportGroup,
                        global::System.Nullable<int> LabelGroup,
                        global::System.Nullable<bool> LitigationOn,
                        global::System.Nullable<bool> NetworkSecurityOn,
                        global::System.Nullable<int> OtherGroup,
                        global::System.Nullable<int> PCFilesEditGrp,
                        global::System.Nullable<int> PCFilesNVerGrp,
                        string Picture,
                        global::System.Nullable<bool> PrintFast,
                        global::System.Nullable<bool> ReconciliationOn,
                        global::System.Nullable<int> RedactViewGrp,
                        global::System.Nullable<bool> RetentionOn,
                        global::System.Nullable<int> ScanGroup,
                        global::System.Nullable<int> SecurityGroup,
                        global::System.Nullable<int> SQLGroup,
                        global::System.Nullable<int> TrackingGroup,
                        global::System.Nullable<bool> TrackingOutOn,
                        global::System.Nullable<int> ReqAutoPrintMethod,
                        global::System.Nullable<int> ReqAutoPrintCopies,
                        global::System.Nullable<int> ReqAutoPrintInterval,
                        global::System.Nullable<int> ReqAutoPrintIDType,
                        global::System.Nullable<int> BatchRequestGroup,
                        global::System.Nullable<int> AuditingSecurityManagerGrp,
                        global::System.Nullable<int> RequestConfirmation,
                        global::System.Nullable<bool> EMailDeliveryEnabled,
                        global::System.Nullable<bool> EMailWaitListEnabled,
                        global::System.Nullable<int> EMailSendMethod,
                        global::System.Nullable<int> EMailConfirmationType,
                        global::System.Nullable<bool> SMTPAuthentication,
                        global::System.Nullable<int> SMTPPort,
                        string SMTPServer,
                        string SMTPUserAddress,
                        string SMTPUserPassword,
                        global::System.Nullable<global::System.DateTime> LastPastDueEmailTime,
                        string LastPastDueEmailUser,
                        global::System.Nullable<bool> EMailExceptionEnabled,
                        global::System.Nullable<short> DefaultDueBackDays,
                        global::System.Nullable<int> ImageCaptureGroup,
                        global::System.Nullable<int> ExportGroup,
                        global::System.Nullable<int> NotificationEnabled,
                        global::System.Nullable<int> AttachmentVersionGroup,
                        global::System.Nullable<int> RedactEditGrp,
                        global::System.Nullable<bool> UseTableIcons,
                        global::System.Nullable<int> SignatureCaptureOn,
                        global::System.Nullable<int> InactiveRecordGroup,
                        global::System.Nullable<bool> PrintImageFooter,
                        int Original_Id,
                        string Original_UserName,
                        global::System.Nullable<float> Original_HeadingHeight,
                        global::System.Nullable<short> Original_RowHeight,
                        string Original_GridFontName,
                        global::System.Nullable<float> Original_GridFontSize,
                        global::System.Nullable<bool> Original_GridFontBold,
                        global::System.Nullable<short> Original_GridHdrAttributes,
                        string Original_TabFontName,
                        global::System.Nullable<float> Original_TabFontSize,
                        global::System.Nullable<bool> Original_TabFontBold,
                        string Original_BaseFontName,
                        global::System.Nullable<float> Original_BaseFontSize,
                        global::System.Nullable<bool> Original_BaseFontBold,
                        global::System.Nullable<short> Original_GridOffsetX,
                        global::System.Nullable<short> Original_GridOffsetY,
                        global::System.Nullable<short> Original_TabMaxWidth,
                        global::System.Nullable<short> Original_TabCutSize,
                        global::System.Nullable<short> Original_TabHeight,
                        global::System.Nullable<short> Original_TabRowOffset,
                        global::System.Nullable<short> Original_TabSelectType,
                        global::System.Nullable<short> Original_TabsPerRow,
                        global::System.Nullable<short> Original_FrameWidth,
                        global::System.Nullable<int> Original_RMAGgroup,
                        global::System.Nullable<int> Original_MgrGroup,
                        global::System.Nullable<short> Original_LibrarianMDIPercent,
                        global::System.Nullable<int> Original_ImageBackColor1,
                        global::System.Nullable<int> Original_ImageBackColor2,
                        global::System.Nullable<int> Original_ImageBackColor3,
                        global::System.Nullable<int> Original_ImageGridBackColor1,
                        global::System.Nullable<int> Original_ImageGridBackColor2,
                        global::System.Nullable<int> Original_ImageGridBackColor3,
                        global::System.Nullable<int> Original_AnnotationAdd,
                        global::System.Nullable<int> Original_AnnotationEdit,
                        global::System.Nullable<int> Original_AnnotationDelete,
                        global::System.Nullable<int> Original_AnnotationView,
                        string Original_NoGridURL,
                        global::System.Nullable<int> Original_ADOConnectionTimeout,
                        string Original_DefaultOutputSettingsId,
                        string Original_LSAfterDestinationScanned,
                        string Original_LSAfterObjectScanned,
                        string Original_LSAfterDestinationAccepted,
                        string Original_LSAfterObjectAccepted,
                        string Original_LSAfterTrackingComplete,
                        global::System.Nullable<bool> Original_UseViewDisplayMode,
                        global::System.Nullable<int> Original_FormViewMinLines,
                        global::System.Nullable<int> Original_ImportRunGroup,
                        global::System.Nullable<int> Original_ExpressSetupGroup,
                        global::System.Nullable<int> Original_ManualTrackingGroup,
                        global::System.Nullable<int> Original_MaxHistoryDays,
                        global::System.Nullable<int> Original_MaxHistoryItems,
                        string Original_TrackingAdditionalField1Desc,
                        global::System.Nullable<int> Original_TrackingAdditionalField1Type,
                        string Original_TrackingAdditionalField2Desc,
                        global::System.Nullable<bool> Original_AllowRequests,
                        global::System.Nullable<bool> Original_AllowWaitList,
                        global::System.Nullable<bool> Original_PopupWaitList,
                        global::System.Nullable<int> Original_RequestorOperatorGrp,
                        global::System.Nullable<int> Original_RequestorHighPGrp,
                        global::System.Nullable<bool> Original_RetentionTurnOffCitations,
                        global::System.Nullable<int> Original_RetentionYearEnd,
                        global::System.Nullable<int> Original_RetentionAttachDelGroup,
                        global::System.Nullable<int> Original_RetentionOperatorGroup,
                        global::System.Nullable<int> Original_GridBackColorEven,
                        global::System.Nullable<int> Original_GridBackColorOdd,
                        global::System.Nullable<int> Original_GridForeColorEven,
                        global::System.Nullable<int> Original_GridForeColorOdd,
                        global::System.Nullable<int> Original_ReportGridColor,
                        global::System.Nullable<bool> Original_AlternateRowColors,
                        global::System.Nullable<int> Original_ArchGroup,
                        global::System.Nullable<int> Original_COLDGroup,
                        global::System.Nullable<bool> Original_DateDueOn,
                        global::System.Nullable<int> Original_FaxmGroup,
                        global::System.Nullable<int> Original_ImportGroup,
                        global::System.Nullable<int> Original_LabelGroup,
                        global::System.Nullable<bool> Original_LitigationOn,
                        global::System.Nullable<bool> Original_NetworkSecurityOn,
                        global::System.Nullable<int> Original_OtherGroup,
                        global::System.Nullable<int> Original_PCFilesEditGrp,
                        global::System.Nullable<int> Original_PCFilesNVerGrp,
                        string Original_Picture,
                        global::System.Nullable<bool> Original_PrintFast,
                        global::System.Nullable<bool> Original_ReconciliationOn,
                        global::System.Nullable<int> Original_RedactViewGrp,
                        global::System.Nullable<bool> Original_RetentionOn,
                        global::System.Nullable<int> Original_ScanGroup,
                        global::System.Nullable<int> Original_SecurityGroup,
                        global::System.Nullable<int> Original_SQLGroup,
                        global::System.Nullable<int> Original_TrackingGroup,
                        global::System.Nullable<bool> Original_TrackingOutOn,
                        global::System.Nullable<int> Original_ReqAutoPrintMethod,
                        global::System.Nullable<int> Original_ReqAutoPrintCopies,
                        global::System.Nullable<int> Original_ReqAutoPrintInterval,
                        global::System.Nullable<int> Original_ReqAutoPrintIDType,
                        global::System.Nullable<int> Original_BatchRequestGroup,
                        global::System.Nullable<int> Original_AuditingSecurityManagerGrp,
                        global::System.Nullable<int> Original_RequestConfirmation,
                        global::System.Nullable<bool> Original_EMailDeliveryEnabled,
                        global::System.Nullable<bool> Original_EMailWaitListEnabled,
                        global::System.Nullable<int> Original_EMailSendMethod,
                        global::System.Nullable<int> Original_EMailConfirmationType,
                        global::System.Nullable<bool> Original_SMTPAuthentication,
                        global::System.Nullable<int> Original_SMTPPort,
                        string Original_SMTPServer,
                        string Original_SMTPUserAddress,
                        string Original_SMTPUserPassword,
                        global::System.Nullable<global::System.DateTime> Original_LastPastDueEmailTime,
                        string Original_LastPastDueEmailUser,
                        global::System.Nullable<bool> Original_EMailExceptionEnabled,
                        global::System.Nullable<short> Original_DefaultDueBackDays,
                        global::System.Nullable<int> Original_ImageCaptureGroup,
                        global::System.Nullable<int> Original_ExportGroup,
                        global::System.Nullable<int> Original_NotificationEnabled,
                        global::System.Nullable<int> Original_AttachmentVersionGroup,
                        global::System.Nullable<int> Original_RedactEditGrp,
                        global::System.Nullable<bool> Original_UseTableIcons,
                        global::System.Nullable<int> Original_SignatureCaptureOn,
                        global::System.Nullable<int> Original_InactiveRecordGroup,
                        global::System.Nullable<bool> Original_PrintImageFooter)
            {
                return this.Update(UserName, HeadingHeight, RowHeight, GridFontName, GridFontSize, GridFontBold, GridHdrAttributes, TabFontName, TabFontSize, TabFontBold, BaseFontName, BaseFontSize, BaseFontBold, GridOffsetX, GridOffsetY, TabMaxWidth, TabCutSize, TabHeight, TabRowOffset, TabSelectType, TabsPerRow, FrameWidth, RMAGgroup, MgrGroup, LibrarianMDIPercent, ImageBackColor1, ImageBackColor2, ImageBackColor3, ImageGridBackColor1, ImageGridBackColor2, ImageGridBackColor3, AnnotationAdd, AnnotationEdit, AnnotationDelete, AnnotationView, NoGridURL, ADOConnectionTimeout, DefaultOutputSettingsId, LSAfterDestinationScanned, LSAfterObjectScanned, LSAfterDestinationAccepted, LSAfterObjectAccepted, LSAfterTrackingComplete, UseViewDisplayMode, FormViewMinLines, ImportRunGroup, ExpressSetupGroup, ManualTrackingGroup, MaxHistoryDays, MaxHistoryItems, TrackingAdditionalField1Desc, TrackingAdditionalField1Type, TrackingAdditionalField2Desc, AllowRequests, AllowWaitList, PopupWaitList, RequestorOperatorGrp, RequestorHighPGrp, RetentionTurnOffCitations, RetentionYearEnd, RetentionAttachDelGroup, RetentionOperatorGroup, GridBackColorEven, GridBackColorOdd, GridForeColorEven, GridForeColorOdd, ReportGridColor, AlternateRowColors, ArchGroup, COLDGroup, DateDueOn, FaxmGroup, ImportGroup, LabelGroup, LitigationOn, NetworkSecurityOn, OtherGroup, PCFilesEditGrp, PCFilesNVerGrp, Picture, PrintFast, ReconciliationOn, RedactViewGrp, RetentionOn, ScanGroup, SecurityGroup, SQLGroup, TrackingGroup, TrackingOutOn, ReqAutoPrintMethod, ReqAutoPrintCopies, ReqAutoPrintInterval, ReqAutoPrintIDType, BatchRequestGroup, AuditingSecurityManagerGrp, RequestConfirmation, EMailDeliveryEnabled, EMailWaitListEnabled, EMailSendMethod, EMailConfirmationType, SMTPAuthentication, SMTPPort, SMTPServer, SMTPUserAddress, SMTPUserPassword, LastPastDueEmailTime, LastPastDueEmailUser, EMailExceptionEnabled, DefaultDueBackDays, ImageCaptureGroup, ExportGroup, NotificationEnabled, AttachmentVersionGroup, RedactEditGrp, UseTableIcons, SignatureCaptureOn, InactiveRecordGroup, PrintImageFooter, Original_Id, Original_UserName, Original_HeadingHeight, Original_RowHeight, Original_GridFontName, Original_GridFontSize, Original_GridFontBold, Original_GridHdrAttributes, Original_TabFontName, Original_TabFontSize, Original_TabFontBold, Original_BaseFontName, Original_BaseFontSize, Original_BaseFontBold, Original_GridOffsetX, Original_GridOffsetY, Original_TabMaxWidth, Original_TabCutSize, Original_TabHeight, Original_TabRowOffset, Original_TabSelectType, Original_TabsPerRow, Original_FrameWidth, Original_RMAGgroup, Original_MgrGroup, Original_LibrarianMDIPercent, Original_ImageBackColor1, Original_ImageBackColor2, Original_ImageBackColor3, Original_ImageGridBackColor1, Original_ImageGridBackColor2, Original_ImageGridBackColor3, Original_AnnotationAdd, Original_AnnotationEdit, Original_AnnotationDelete, Original_AnnotationView, Original_NoGridURL, Original_ADOConnectionTimeout, Original_DefaultOutputSettingsId, Original_LSAfterDestinationScanned, Original_LSAfterObjectScanned, Original_LSAfterDestinationAccepted, Original_LSAfterObjectAccepted, Original_LSAfterTrackingComplete, Original_UseViewDisplayMode, Original_FormViewMinLines, Original_ImportRunGroup, Original_ExpressSetupGroup, Original_ManualTrackingGroup, Original_MaxHistoryDays, Original_MaxHistoryItems, Original_TrackingAdditionalField1Desc, Original_TrackingAdditionalField1Type, Original_TrackingAdditionalField2Desc, Original_AllowRequests, Original_AllowWaitList, Original_PopupWaitList, Original_RequestorOperatorGrp, Original_RequestorHighPGrp, Original_RetentionTurnOffCitations, Original_RetentionYearEnd, Original_RetentionAttachDelGroup, Original_RetentionOperatorGroup, Original_GridBackColorEven, Original_GridBackColorOdd, Original_GridForeColorEven, Original_GridForeColorOdd, Original_ReportGridColor, Original_AlternateRowColors, Original_ArchGroup, Original_COLDGroup, Original_DateDueOn, Original_FaxmGroup, Original_ImportGroup, Original_LabelGroup, Original_LitigationOn, Original_NetworkSecurityOn, Original_OtherGroup, Original_PCFilesEditGrp, Original_PCFilesNVerGrp, Original_Picture, Original_PrintFast, Original_ReconciliationOn, Original_RedactViewGrp, Original_RetentionOn, Original_ScanGroup, Original_SecurityGroup, Original_SQLGroup, Original_TrackingGroup, Original_TrackingOutOn, Original_ReqAutoPrintMethod, Original_ReqAutoPrintCopies, Original_ReqAutoPrintInterval, Original_ReqAutoPrintIDType, Original_BatchRequestGroup, Original_AuditingSecurityManagerGrp, Original_RequestConfirmation, Original_EMailDeliveryEnabled, Original_EMailWaitListEnabled, Original_EMailSendMethod, Original_EMailConfirmationType, Original_SMTPAuthentication, Original_SMTPPort, Original_SMTPServer, Original_SMTPUserAddress, Original_SMTPUserPassword, Original_LastPastDueEmailTime, Original_LastPastDueEmailUser, Original_EMailExceptionEnabled, Original_DefaultDueBackDays, Original_ImageCaptureGroup, Original_ExportGroup, Original_NotificationEnabled, Original_AttachmentVersionGroup, Original_RedactEditGrp, Original_UseTableIcons, Original_SignatureCaptureOn, Original_InactiveRecordGroup, Original_PrintImageFooter, Original_Id);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class DataTable1TableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1TableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "DataTable1";
                tableMapping.ColumnMappings.Add("ParentViewID", "ParentViewID");
                tableMapping.ColumnMappings.Add("ChildViewID", "ChildViewID");
                tableMapping.ColumnMappings.Add("ChildViewName", "ChildViewName");
                tableMapping.ColumnMappings.Add("ChildKeyField", "ChildKeyField");
                tableMapping.ColumnMappings.Add("TabOrder", "TabOrder");
                tableMapping.ColumnMappings.Add("ChildTableName", "ChildTableName");
                tableMapping.ColumnMappings.Add("ChildUserName", "ChildUserName");
                tableMapping.ColumnMappings.Add("ViewOrder", "ViewOrder");
                this._adapter.TableMappings.Add(tableMapping);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = @"SELECT DISTINCT 
                         TOP (100) PERCENT Views.Id AS ParentViewID, Views_1.Id AS ChildViewID, Views_1.ViewName AS ChildViewName, RelationShips.LowerTableFieldName AS ChildKeyField, RelationShips.TabOrder, 
                         Views_1.TableName AS ChildTableName, Tables.UserName AS ChildUserName, Views_1.ViewOrder
FROM            Views INNER JOIN
                         RelationShips ON Views.TableName = RelationShips.UpperTableName INNER JOIN
                         Views AS Views_1 ON RelationShips.LowerTableName = Views_1.TableName INNER JOIN
                         Tables ON Views_1.TableName = Tables.TableName
WHERE        (Views.Id = @parentViewID)
ORDER BY RelationShips.TabOrder, Views_1.ViewOrder";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parentViewID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ParentViewID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.DataTable1DataTable GetChildViewsByParentViewID(int parentViewID)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(parentViewID));
                RecordsManage.DataTable1DataTable dataTable = new RecordsManage.DataTable1DataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class EmployeesTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeesTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "Employees";
                tableMapping.ColumnMappings.Add("Id", "Id");
                tableMapping.ColumnMappings.Add("Phone", "Phone");
                tableMapping.ColumnMappings.Add("Active", "Active");
                tableMapping.ColumnMappings.Add("Out", "Out");
                tableMapping.ColumnMappings.Add("UserName", "UserName");
                tableMapping.ColumnMappings.Add("EmployeeEmail", "EmployeeEmail");
                tableMapping.ColumnMappings.Add("DueBackDays", "DueBackDays");
                this._adapter.TableMappings.Add(tableMapping);
                this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.DeleteCommand.Connection = this.Connection;
                this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Employees] WHERE (([Id] = @Original_Id) AND ((@IsNull_Phone = 1 AND [Phone] IS NULL) OR ([Phone] = @Original_Phone)) AND ([Active] = @Original_Active) AND ([Out] = @Original_Out) AND ((@IsNull_UserName = 1 AND [UserName] IS NULL) OR ([UserName] = @Original_UserName)) AND ((@IsNull_EmployeeEmail = 1 AND [EmployeeEmail] IS NULL) OR ([EmployeeEmail] = @Original_EmployeeEmail)) AND ((@IsNull_DueBackDays = 1 AND [DueBackDays] IS NULL) OR ([DueBackDays] = @Original_DueBackDays)))";
                this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmployeeEmail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeEmail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DueBackDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DueBackDays", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DueBackDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DueBackDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
                this._adapter.UpdateCommand.Connection = this.Connection;
                this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Employees] SET [Phone] = @Phone, [Active] = @Active, [Out] = @Out, [UserName] = @UserName, [EmployeeEmail] = @EmployeeEmail, [DueBackDays] = @DueBackDays WHERE (([Id] = @Original_Id) AND ((@IsNull_Phone = 1 AND [Phone] IS NULL) OR ([Phone] = @Original_Phone)) AND ([Active] = @Original_Active) AND ([Out] = @Original_Out) AND ((@IsNull_UserName = 1 AND [UserName] IS NULL) OR ([UserName] = @Original_UserName)) AND ((@IsNull_EmployeeEmail = 1 AND [EmployeeEmail] IS NULL) OR ([EmployeeEmail] = @Original_EmployeeEmail)) AND ((@IsNull_DueBackDays = 1 AND [DueBackDays] IS NULL) OR ([DueBackDays] = @Original_DueBackDays)));
SELECT Id, Phone, Active, Out, UserName, EmployeeEmail, DueBackDays FROM Employees WHERE (Id = @Id)";
                this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DueBackDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DueBackDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmployeeEmail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeEmail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DueBackDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DueBackDays", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DueBackDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DueBackDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
                this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = "SELECT Id, Phone, Active, Out, UserName, EmployeeEmail, DueBackDays FROM dbo.Empl" +
                    "oyees";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[1].Connection = this.Connection;
                this._commandCollection[1].CommandText = "SELECT        Id, Phone, Active, Out, UserName, EmployeeEmail, ISNULL(DueBackDays" +
                    ", 0) AS DueBackDays, FirstName, LastName\r\nFROM            Employees\r\nWHERE      " +
                    "  (CAST(Id AS varchar) = @employeeID)";
                this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@employeeID", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
            public virtual int Fill(RecordsManage.EmployeesDataTable dataTable)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                if ((this.ClearBeforeFill == true))
                {
                    dataTable.Clear();
                }
                int returnValue = this.Adapter.Fill(dataTable);
                return returnValue;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.EmployeesDataTable GetData()
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                RecordsManage.EmployeesDataTable dataTable = new RecordsManage.EmployeesDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
            public virtual RecordsManage.EmployeesDataTable GetEmployee(string employeeID)
            {
                this.Adapter.SelectCommand = this.CommandCollection[1];
                if ((employeeID == null))
                {
                    throw new global::System.ArgumentNullException("employeeID");
                }
                else
                {
                    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(employeeID));
                }
                RecordsManage.EmployeesDataTable dataTable = new RecordsManage.EmployeesDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage.EmployeesDataTable dataTable)
            {
                return this.Adapter.Update(dataTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(RecordsManage dataSet)
            {
                return this.Adapter.Update(dataSet, "Employees");
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow dataRow)
            {
                return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            public virtual int Update(global::System.Data.DataRow[] dataRows)
            {
                return this.Adapter.Update(dataRows);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
            public virtual int Delete(int Original_Id, string Original_Phone, bool Original_Active, bool Original_Out, string Original_UserName, string Original_EmployeeEmail, global::System.Nullable<int> Original_DueBackDays)
            {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
                if ((Original_Phone == null))
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Phone));
                }
                this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_Active));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Out));
                if ((Original_UserName == null))
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_UserName));
                }
                if ((Original_EmployeeEmail == null))
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_EmployeeEmail));
                }
                if ((Original_DueBackDays.HasValue == true))
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                    this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_DueBackDays.Value));
                }
                else
                {
                    this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                    this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
                }
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
                if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.DeleteCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.DeleteCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string Phone, bool Active, bool Out, string UserName, string EmployeeEmail, global::System.Nullable<int> DueBackDays, int Original_Id, string Original_Phone, bool Original_Active, bool Original_Out, string Original_UserName, string Original_EmployeeEmail, global::System.Nullable<int> Original_DueBackDays, int Id)
            {
                if ((Phone == null))
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Phone));
                }
                this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(Active));
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Out));
                if ((UserName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(UserName));
                }
                if ((EmployeeEmail == null))
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(EmployeeEmail));
                }
                if ((DueBackDays.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(DueBackDays.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
                }
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Id));
                if ((Original_Phone == null))
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Phone));
                }
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_Active));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_Out));
                if ((Original_UserName == null))
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_UserName));
                }
                if ((Original_EmployeeEmail == null))
                {
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_EmployeeEmail));
                }
                if ((Original_DueBackDays.HasValue == true))
                {
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                    this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_DueBackDays.Value));
                }
                else
                {
                    this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                    this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
                }
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Id));
                global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
                if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                            != global::System.Data.ConnectionState.Open))
                {
                    this.Adapter.UpdateCommand.Connection.Open();
                }
                try
                {
                    int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                    return returnValue;
                }
                finally
                {
                    if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                    {
                        this.Adapter.UpdateCommand.Connection.Close();
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
            public virtual int Update(string Phone, bool Active, bool Out, string UserName, string EmployeeEmail, global::System.Nullable<int> DueBackDays, int Original_Id, string Original_Phone, bool Original_Active, bool Original_Out, string Original_UserName, string Original_EmployeeEmail, global::System.Nullable<int> Original_DueBackDays)
            {
                return this.Update(Phone, Active, Out, UserName, EmployeeEmail, DueBackDays, Original_Id, Original_Phone, Original_Active, Original_Out, Original_UserName, Original_EmployeeEmail, Original_DueBackDays, Original_Id);
            }
        }

        /// <summary>
        ///Represents the connection and commands used to retrieve and save data.
        ///</summary>
        [global::System.ComponentModel.DesignerCategoryAttribute("code")]
        [global::System.ComponentModel.ToolboxItem(true)]
        [global::System.ComponentModel.DataObjectAttribute(true)]
        [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
            ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public partial class ChildViewsTableAdapter : global::System.ComponentModel.Component
        {

            private global::System.Data.SqlClient.SqlDataAdapter _adapter;

            private global::System.Data.SqlClient.SqlConnection _connection;

            private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChildViewsTableAdapter()
            {
                this.ClearBeforeFill = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if ((this._adapter == null))
                    {
                        this.InitAdapter();
                    }
                    return this._adapter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal global::System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if ((this._connection == null))
                    {
                        this.InitConnection();
                    }
                    return this._connection;
                }
                set
                {
                    this._connection = value;
                    if ((this.Adapter.InsertCommand != null))
                    {
                        this.Adapter.InsertCommand.Connection = value;
                    }
                    if ((this.Adapter.DeleteCommand != null))
                    {
                        this.Adapter.DeleteCommand.Connection = value;
                    }
                    if ((this.Adapter.UpdateCommand != null))
                    {
                        this.Adapter.UpdateCommand.Connection = value;
                    }
                    for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                    {
                        if ((this.CommandCollection[i] != null))
                        {
                            ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                        }
                    }
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if ((this._commandCollection == null))
                    {
                        this.InitCommandCollection();
                    }
                    return this._commandCollection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return this._clearBeforeFill;
                }
                set
                {
                    this._clearBeforeFill = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitAdapter()
            {
                this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
                global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
                tableMapping.SourceTable = "Table";
                tableMapping.DataSetTable = "ChildViews";
                tableMapping.ColumnMappings.Add("ParentViewID", "ParentViewID");
                tableMapping.ColumnMappings.Add("ChildViewID", "ChildViewID");
                tableMapping.ColumnMappings.Add("ChildViewName", "ChildViewName");
                tableMapping.ColumnMappings.Add("ChildKeyField", "ChildKeyField");
                tableMapping.ColumnMappings.Add("TabOrder", "TabOrder");
                tableMapping.ColumnMappings.Add("ChildTableName", "ChildTableName");
                tableMapping.ColumnMappings.Add("ChildUserName", "ChildUserName");
                tableMapping.ColumnMappings.Add("ViewOrder", "ViewOrder");
                this._adapter.TableMappings.Add(tableMapping);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitConnection()
            {
                this._connection = new global::System.Data.SqlClient.SqlConnection();
                this._connection.ConnectionString = "Data Source=.;Initial Catalog=\"TAB FusionRMS RMS Demo\";Integrated Security=True";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitCommandCollection()
            {
                this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
                this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
                this._commandCollection[0].Connection = this.Connection;
                this._commandCollection[0].CommandText = @"SELECT DISTINCT 
                         TOP (100) PERCENT Views.Id AS ParentViewID, Views_1.Id AS ChildViewID, Views_1.ViewName AS ChildViewName, RelationShips.LowerTableFieldName AS ChildKeyField, RelationShips.TabOrder, 
                         Views_1.TableName AS ChildTableName, Tables.UserName AS ChildUserName, Views_1.ViewOrder
FROM            Views INNER JOIN
                         RelationShips ON Views.TableName = RelationShips.UpperTableName INNER JOIN
                         Views AS Views_1 ON RelationShips.LowerTableName = Views_1.TableName INNER JOIN
                         Tables ON Views_1.TableName = Tables.TableName
WHERE        (Views.Id = @parentViewID)
ORDER BY RelationShips.TabOrder, Views_1.ViewOrder";
                this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
                this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parentViewID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ParentViewID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
            [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual RecordsManage.ChildViewsDataTable GetChildViewsByParentViewID(int parentViewID)
            {
                this.Adapter.SelectCommand = this.CommandCollection[0];
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(parentViewID));
                RecordsManage.ChildViewsDataTable dataTable = new RecordsManage.ChildViewsDataTable();
                this.Adapter.Fill(dataTable);
                return dataTable;
            }
        }
    }
}
