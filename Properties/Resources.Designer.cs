//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MSRecordsEngine.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MSRecordsEngine.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP FULLTEXT INDEX ON SLIndexer;
        ///GO
        ///
        ///DECLARE @DropCatalog varchar(255);
        ///SELECT @DropCatalog = &apos;DROP FULLTEXT CATALOG ftcat&apos; + DB_NAME();
        ///EXEC (@DropCatalog);
        ///GO
        ///
        ///DECLARE @CreateCatalog VARCHAR (255);
        ///SELECT  @CreateCatalog = &apos;CREATE FULLTEXT CATALOG ftcat&apos; + DB_NAME();
        ///EXEC (@CreateCatalog);
        ///GO
        ///
        ///CREATE FULLTEXT INDEX ON SLIndexer(IndexData) KEY INDEX SLIndexer_PK;
        ///GO
        ///
        ///ALTER FULLTEXT INDEX ON SLIndexer SET CHANGE_TRACKING AUTO;
        ///GO.
        /// </summary>
        internal static string BuildSLIndexerIndex {
            get {
                return ResourceManager.GetString("BuildSLIndexerIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO ImagePointers (TrackablesId, TrackablesRecordVersion, ScanDirectoriesId, ScanSequence, ScanDateTime,
        ///    [FileName], PageNumber, CRC, Orientation, Skew, Front, ImageHeight, ImageWidth, ImageSize, 
        ///    BarCodeCount, BarCodes, [PageCount], OrgDirectoriesId, OrgFileName, OrgFullPath) 
        ///SELECT TrackablesId, @versionNumber, ScanDirectoriesId, 1, getdate(), 
        ///    @fileName,  @pageNumber, CRC, Orientation, Skew, Front, ImageHeight, ImageWidth, ImageSize, 
        ///    BarCodeCount, BarCodes, 1, OrgDirectorie [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BurstImagePointers {
            get {
                return ResourceManager.GetString("BurstImagePointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Trackables SET CheckedOut = 0, CheckedOutDate = NULL, CheckedOutUser = NULL,
        ///                      CheckedOutIP = NULL, CheckedOutMAC = NULL, CheckedOutUserId = NULL, PersistedCheckOut = 0
        ///FROM   Trackables               
        ///INNER JOIN Userlinks ON Trackables.Id = Userlinks.TrackablesId 
        ///WHERE (UserLinks.IndexTable = @tableName) 
        ///  AND (UserLinks.IndexTableId = @tableId) 
        ///  AND (UserLinks.AttachmentNumber = @attachmentNumber)
        ///
        ///UPDATE Trackables 
        ///   SET OfficialRecord = @officialRecord, 
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CheckIn {
            get {
                return ResourceManager.GetString("CheckIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Trackables (Id, RecordVersion, RecordTypesId, [PageCount], Orphan, 
        ///					    Verified, OfficialRecord, OfficialRecordReconciliation)
        ///SELECT t.Id, ((SELECT TOP 1 Trackables.RecordVersion FROM Trackables 
        ///			  INNER JOIN Userlinks ON Trackables.Id = Userlinks.TrackablesId 
        ///			  WHERE (UserLinks.IndexTable = @tableName) 
        ///                AND (UserLinks.IndexTableId = @tableId) 
        ///                AND (UserLinks.AttachmentNumber = @attachmentNumber)
        ///              ORDER BY Trackables.RecordVersion [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CheckOut {
            get {
                return ResourceManager.GetString("CheckOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE ImagePointers FROM ImagePointers p
        ///INNER JOIN Trackables ON p.TrackablesId = Trackables.Id 
        ///                     AND p.TrackablesRecordVersion = Trackables.RecordVersion 
        ///INNER JOIN  Userlinks ON Trackables.Id = Userlinks.TrackablesId
        ///WHERE (UserLinks.IndexTable = @tableName) 
        ///  AND (UserLinks.IndexTableId = @tableId) 
        ///  AND (UserLinks.AttachmentNumber = @attachmentNumber)
        ///  AND (Trackables.RecordVersion &lt; 0)
        ///
        ///DELETE PCFilesPointers FROM PCFilesPointers p
        ///INNER JOIN Trackables ON p.Trackabl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CheckOutUndo {
            get {
                return ResourceManager.GetString("CheckOutUndo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Annotations (TableId, [Table], Annotation, DeskOf, NoteDateTime, UserName) 
        ///SELECT @newId, [Table], Annotation, DeskOf, NoteDateTime, UserName
        ///FROM Annotations WHERE [Table] = &apos;REDLINE&apos; AND TableId = @currentId
        ///.
        /// </summary>
        internal static string CopyAnnotations {
            get {
                return ResourceManager.GetString("CopyAnnotations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO ImagePointers (TrackablesId, TrackablesRecordVersion, ScanDirectoriesId, ScanDateTime, 
        ///    FileName, PageNumber, CRC, Orientation, Skew, Front, ImageHeight, ImageWidth, ImageSize, 
        ///    BarCodeCount, BarCodes, PageCount, OrgDirectoriesId, OrgFileName, OrgFullPath)
        ///SELECT TrackablesId, @versionNumber, ScanDirectoriesId, getdate() AS ScanDateTime, 
        ///         @fileName AS FileName, @pageNumber, CRC, Orientation, Skew, Front, ImageHeight, ImageWidth, ImageSize, 
        ///    BarCodeCount, BarCodes, PageC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CopyDatabaseImagePointers {
            get {
                return ResourceManager.GetString("CopyDatabaseImagePointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO ImagePointers (TrackablesId, TrackablesRecordVersion, ScanDirectoriesId, ScanDateTime, 
        ///    FileName, PageNumber, CRC, Orientation, Skew, Front, ImageHeight, ImageWidth, ImageSize, 
        ///    BarCodeCount, BarCodes, PageCount, OrgDirectoriesId, OrgFileName, OrgFullPath)
        ///SELECT TrackablesId, @versionNumber, ScanDirectoriesId, getdate() AS ScanDateTime, 
        ///    &apos;.&apos; + FileName AS FileName, @pageNumber, CRC, Orientation, Skew, Front, ImageHeight, ImageWidth, ImageSize, 
        ///    BarCodeCount, BarCodes, PageC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CopyImagePointers {
            get {
                return ResourceManager.GetString("CopyImagePointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO PCFilesPointers (TrackablesId, TrackablesRecordVersion, ScanDirectoriesId, 
        ///    FileName, Pages, OrgDirectoriesId, OrgFileName, PCFilesEditGrp, PCFilesNVerGrp, OrgFullPath)
        ///SELECT TrackablesId, @versionNumber, ScanDirectoriesId, 
        ///    @fileName AS FileName, Pages, OrgDirectoriesId, OrgFileName, PCFilesEditGrp, PCFilesNVerGrp, OrgFullPath
        ///FROM PCFilesPointers WHERE Id = @Id;
        ///SELECT SCOPE_IDENTITY()
        ///.
        /// </summary>
        internal static string CopyPCFilesPointers {
            get {
                return ResourceManager.GetString("CopyPCFilesPointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [SLDestructCertItems]
        ///	(TableId, TableName, HoldReason, RetentionHold, LegalHold, 
        ///	 RetentionCode, SnoozeUntil, DispositionFlag, 
        ///	 ScheduledInactivity, ScheduledDestruction, SLDestructionCertsID)
        ///VALUES                              
        ///	(@tableId, @tableName, @holdReason, @retentionHold, @legalHold, 
        ///	 @retentionCode, @snoozeUntil, @dispositionFlag, 
        ///	 @scheduledInactivity, @scheduledDestruction, @destructionCertsID)
        ///SELECT SCOPE_IDENTITY()
        ///
        ///
        ///        .
        /// </summary>
        internal static string CreateDestructionCertificateItem {
            get {
                return ResourceManager.GetString("CreateDestructionCertificateItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Trackables 
        ///WHERE (Id = @trackableId).
        /// </summary>
        internal static string DeleteAllTrackables {
            get {
                return ResourceManager.GetString("DeleteAllTrackables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Annotations WHERE [Table] = &apos;REDLINE&apos; AND TableId LIKE @currentId
        ///.
        /// </summary>
        internal static string DeleteAnnotations {
            get {
                return ResourceManager.GetString("DeleteAnnotations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE i FROM [SLCollectionItems] i
        ///INNER JOIN SLCollections c ON c.Id = i.CollectionId
        ///WHERE c.[Name] = @userId AND i.[Table]= @tableName AND i.[TableId] = @tableId {0}
        ///
        ///DELETE c FROM SLCollections c 
        ///LEFT OUTER JOIN SLCollectionItems i on i.CollectionId = c.Id
        ///WHERE c.[Name] = @userId AND i.[Table] IS NULL
        ///
        ///.
        /// </summary>
        internal static string DeleteCollectionItems {
            get {
                return ResourceManager.GetString("DeleteCollectionItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE [SLDestructionCerts] WHERE [ID] = @destructionCertID.
        /// </summary>
        internal static string DeleteDestructionCertificate {
            get {
                return ResourceManager.GetString("DeleteDestructionCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE [SLDestructCertItems] WHERE [ID] = @destructionCertID.
        /// </summary>
        internal static string DeleteDestructionCertificateItem {
            get {
                return ResourceManager.GetString("DeleteDestructionCertificateItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM [{0}] WHERE Id = @recordId.
        /// </summary>
        internal static string DeleteImageTableRecords {
            get {
                return ResourceManager.GetString("DeleteImageTableRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM [SLIndexer]
        ///WHERE (IndexType &lt;&gt; 8) AND (IndexTableName = @tableName) AND (IndexTableID = @tableId) AND (AttachmentNumber = @attachmentNumber) {0} 
        ///
        ///DELETE FROM [SLIndexerCache]
        ///WHERE (IndexType &lt;&gt; 8) AND (IndexTableName = @tableName) AND (IndexTableID = @tableId) AND (AttachmentNumber = @attachmentNumber) {0} .
        /// </summary>
        internal static string DeleteIndexerRecords {
            get {
                return ResourceManager.GetString("DeleteIndexerRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Annotations WHERE Id = @Id.
        /// </summary>
        internal static string DeleteNote {
            get {
                return ResourceManager.GetString("DeleteNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Annotations WHERE [Table] = @noteTable AND [TableId] = @currentId.
        /// </summary>
        internal static string DeleteNoteByTableNameId {
            get {
                return ResourceManager.GetString("DeleteNoteByTableNameId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM [{0}] WHERE Id = @currentId.
        /// </summary>
        internal static string DeletePointers {
            get {
                return ResourceManager.GetString("DeletePointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Trackables 
        ///WHERE (Id = @trackableId)
        ///  AND (RecordVersion = @versionNumber)
        /// 
        ///SELECT Id FROM Trackables WHERE Id = @trackableId.
        /// </summary>
        internal static string DeleteTrackable {
            get {
                return ResourceManager.GetString("DeleteTrackable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Userlinks
        ///WHERE (UserLinks.IndexTable = @tableName) 
        ///  AND (UserLinks.IndexTableId = @tableId) 
        ///  AND (UserLinks.AttachmentNumber = @attachmentNumber) 
        ///.
        /// </summary>
        internal static string DeleteUserlink {
            get {
                return ResourceManager.GetString("DeleteUserlink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Annotations SET Annotation = @Memo WHERE Id = @Id
        ///.
        /// </summary>
        internal static string EditNote {
            get {
                return ResourceManager.GetString("EditNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IN (SELECT CAST(IndexTableId AS VARCHAR) FROM SLIndexer a WHERE IndexTableName = &apos;{0}&apos; 
        ///AND {1}
        ///{2}
        ///{3}
        ///AND CONTAINS(IndexData, &apos;{4}&apos;))
        ///.
        /// </summary>
        internal static string FullTextShowAllClause {
            get {
                return ResourceManager.GetString("FullTextShowAllClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT IndexTableName, IndexTableId, IndexType, PageNumber, RecordVersion, AttachmentNumber  
        ///FROM SLIndexer a 
        ///WHERE {0}(IndexData, @SearchWord) 
        ///  AND (IndexTableName=@TableName) 
        ///  {1}  
        ///  AND {2} 
        ///  {3}
        ///ORDER BY RecordVersion DESC 
        ///OPTION (RECOMPILE).
        /// </summary>
        internal static string FullTextTemplate {
            get {
                return ResourceManager.GetString("FullTextTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///  AND ((RecordVersion = (SELECT TOP 1 RecordVersion FROM SLIndexer 
        ///                         WHERE IndexTableName=a.IndexTableName and IndexTableId=a.IndexTableId 
        ///                         ORDER BY RecordVersion Desc)  
        ///   OR (RecordVersion=0) OR (RecordVersion IS NULL))) 
        ///.
        /// </summary>
        internal static string FullTextWithoutPreviousVersions {
            get {
                return ResourceManager.GetString("FullTextWithoutPreviousVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, UserLinks.AttachmentNumber AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.OfficialRecord, Volumes.Im [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllAttachments {
            get {
                return ResourceManager.GetString("GetAllAttachments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, UserLinks.AttachmentNumber AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, ABS(Trackables.RecordVersion) AS RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.Offi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllAttachmentsWithCheckOut {
            get {
                return ResourceManager.GetString("GetAllAttachmentsWithCheckOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Directories.*, 
        ///    Volumes.ImageTableName AS ImageTableName, Volumes.DirDiskMBLimitation, Volumes.DirCountLimitation, ISNULL(Volumes.Active, 0) AS VolumeActive, 
        ///    Directories.DirFullFlag, Directories.Id AS DirectoriesId, 
        ///    SystemAddresses.PhysicalDriveLetter + CAST(Volumes.PathName AS VARCHAR(260)) + ISNULL(Directories.Path,&apos;&apos;) + &apos;\&apos; AS FullPath 
        ///FROM Directories
        ///INNER JOIN         Volumes ON Directories.VolumesId = Volumes.Id 
        ///INNER JOIN SystemAddresses ON Volumes.SystemAddressesId = Sy [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllDirectoriesByVolumeId {
            get {
                return ResourceManager.GetString("GetAllDirectoriesByVolumeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT ROW_NUMBER() OVER(ORDER BY SecureVault.TrackablesId DESC) AS RowNum, SecureVault.* 
        ///FROM 
        ///(SELECT DISTINCT Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, Trackables.RecordTypesId AS RecordType, Trackables.Orphan, 
        /// &apos;Orphans&apos; AS TableUserName, &apos;Orphans&apos; AS IndexTable, &apos;&apos; AS IndexTableId, 1 AS AttachmentNumber, Trackables.OfficialRecord, Volumes.ImageTableName AS ImageTableName, 
        /// Attachments.ScanDirectoriesId, Attachments.[FileName], Attachments.Poin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllOrphans {
            get {
                return ResourceManager.GetString("GetAllOrphans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT count(*) As TotalRecord
        ///FROM 
        ///(SELECT DISTINCT Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, Trackables.RecordTypesId AS RecordType, Trackables.Orphan, 
        /// &apos;Orphans&apos; AS TableUserName, &apos;Orphans&apos; AS IndexTable, &apos;&apos; AS IndexTableId, 1 AS AttachmentNumber, Trackables.OfficialRecord, Volumes.ImageTableName AS ImageTableName, 
        /// Attachments.ScanDirectoriesId, Attachments.[FileName], Attachments.PointerId, Attachments.OrgFullPath, Attachments.OrgFileName, Att [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllOrphansCount {
            get {
                return ResourceManager.GetString("GetAllOrphansCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.OfficialRecord, Volumes.ImageTableName AS ImageTableName, [System].RenameOnScan AS RenameOnScan, 
        ///    Attachments.ScanDirectoriesId, At [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllOrphansWCF {
            get {
                return ResourceManager.GetString("GetAllOrphansWCF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, UserLinks.AttachmentNumber AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, Trackables.RecordVersion, Trackables.RecordTypesId AS RecordType, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, Trackables.CheckedOutUser, 
        ///    Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.OfficialRecord, Volumes.Im [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllVersions {
            get {
                return ResourceManager.GetString("GetAllVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, UserLinks.AttachmentNumber AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, ABS(Trackables.RecordVersion) AS RecordVersion, Trackables.RecordTypesId AS RecordType, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, Trackables.CheckedOutUser, 
        ///    Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.Offi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllVersionsWithCheckedOut {
            get {
                return ResourceManager.GetString("GetAllVersionsWithCheckedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [ViewName],[SQLStatement] FROM [Views] 
        ///WHERE [Views].[TableName] = @tableName
        ///AND [Views].[Printable] &lt;&gt; 1 
        ///ORDER BY ViewOrder
        ///.
        /// </summary>
        internal static string GetAllViewsForTable {
            get {
                return ResourceManager.GetString("GetAllViewsForTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [Annotation] FROM Annotations WHERE [TableId] = @tableId AND [Table] = &apos;REDLINE&apos;.
        /// </summary>
        internal static string GetAnnotations {
            get {
                return ResourceManager.GetString("GetAnnotations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, UserLinks.AttachmentNumber AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.OfficialRecord, Volumes.Im [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAttachment {
            get {
                return ResourceManager.GetString("GetAttachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, UserLinks.AttachmentNumber AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId,Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.OfficialRecord, Volumes.Ima [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAttachmentByPointerId {
            get {
                return ResourceManager.GetString("GetAttachmentByPointerId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT s.Id, MAX(s.BatchStartDateTime) AS BatchDate, MAX(s.DocumentCount) AS DocumentCount, MAX(UserName) AS UserName, 
        ///    MAX(ScanRulesIdUsed) AS ScanRule, MAX(CASE WHEN s.RecordType = 5 THEN &apos;PDF Scans&apos; ELSE &apos;Image Scans&apos; END) AS RecordType, 
        ///    (SELECT COUNT(*) FROM ImagePointers p
        ///     INNER JOIN Trackables t ON p.TrackablesRecordVersion = t.RecordVersion 
        ///                           AND p.TrackablesId = t.Id 
        ///                           AND (t.Orphan &lt;&gt; 0 AND t.Orphan IS NOT NULL)
        ///     WHERE p.Sc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetBatchesForScannedPointers {
            get {
                return ResourceManager.GetString("GetBatchesForScannedPointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT -1 AS Id, NULL AS BatchDate, NULL AS DocumentCount, &apos;PC Files&apos; AS UserName, NULL AS ScanRule, &apos;PC Files&apos; AS RecordType, COUNT(*) AS OrphanCount 
        ///FROM PCFilesPointers p
        ///LEFT OUTER JOIN ScanBatches s ON s.Id = p.ScanBatchesId
        ///INNER JOIN Trackables t ON p.TrackablesRecordVersion = t.RecordVersion 
        ///                       AND p.TrackablesId = t.Id 
        ///                       AND (t.Orphan &lt;&gt; 0 AND t.Orphan IS NOT NULL) 
        ///WHERE s.Id IS NULL
        ///.
        /// </summary>
        internal static string GetBatchForPCFilesPointers {
            get {
                return ResourceManager.GetString("GetBatchForPCFilesPointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, UserLinks.AttachmentNumber AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, ABS(Trackables.RecordVersion) AS RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.Offi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetCheckedOutToAnyoneVersion {
            get {
                return ResourceManager.GetString("GetCheckedOutToAnyoneVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, UserLinks.AttachmentNumber AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, ABS(Trackables.RecordVersion) AS RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.Offi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetCheckedOutVersion {
            get {
                return ResourceManager.GetString("GetCheckedOutVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [Id] FROM SLCollections WHERE Operator = @userId.
        /// </summary>
        internal static string GetCollection {
            get {
                return ResourceManager.GetString("GetCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [Ticket], [Table], [TableId], [Index] AS AttachmentNumber, [AttachmentType] AS VersionNumber, [DisplayText], [TableUserName], [Extension], [UseOverlay] FROM [SLCollectionItems] 
        ///INNER JOIN SLCollections ON SLCollections.Id = SLCollectionItems.CollectionId
        ///WHERE SLCollections.Operator = @userId.
        /// </summary>
        internal static string GetCollectionItems {
            get {
                return ResourceManager.GetString("GetCollectionItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM [{0}] WHERE Id = @recordId.
        /// </summary>
        internal static string GetDatabaseImage {
            get {
                return ResourceManager.GetString("GetDatabaseImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 1 [DirectoriesID] FROM [OutputSettings] WHERE [ID] = (SELECT TOP 1 DefaultOutputSettingsId FROM [System]).
        /// </summary>
        internal static string GetDefaultOutputSettingDirectoryID {
            get {
                return ResourceManager.GetString("GetDefaultOutputSettingDirectoryID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 1 DefaultOutputSettingsId FROM [System].
        /// </summary>
        internal static string GetDefaultOutputSettingName {
            get {
                return ResourceManager.GetString("GetDefaultOutputSettingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Count(*) AS ItemCount FROM [SLDestructCertitems] 
        ///WHERE [SLDestructionCertsId] = @DestructionCertID.
        /// </summary>
        internal static string GetDestructionCertChildrenCount {
            get {
                return ResourceManager.GetString("GetDestructionCertChildrenCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [SLDestructionCertsId] FROM [SLDestructCertItems] 
        ///WHERE [ID] = @DestructionCertItemID.
        /// </summary>
        internal static string GetDestructionCertID {
            get {
                return ResourceManager.GetString("GetDestructionCertID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, ISNULL(UserLinks.AttachmentNumber, 1) AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.OfficialRecord, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetFirstAttachment {
            get {
                return ResourceManager.GetString("GetFirstAttachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Trackables.RecordTypesId, Volumes.ImageTableName AS ImageTableName, Attachments.[FileName], Attachments.OrgFullPath, Attachments.OrgFileName, 
        ///    SystemAddresses.PhysicalDriveLetter + CAST(Volumes.PathName AS VARCHAR(260)) + ISNULL(Directories.Path,&apos;&apos;) + &apos;\&apos; + Attachments.[FileName] AS FullPath 
        ///    FROM 
        ///   (SELECT CAST(OrgFullPath AS VARCHAR(260)) AS OrgFullPath, OrgFileName, ImagePointers.Id AS PointerId, TrackablesId, TrackablesRecordVersion, ScanDirectoriesId, PageNumber, [PageCount], [FileN [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetFullPathByPointerId {
            get {
                return ResourceManager.GetString("GetFullPathByPointerId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT IDFieldName FROM Tables WHERE TableName = @tableName.
        /// </summary>
        internal static string GetIdFieldFromTable {
            get {
                return ResourceManager.GetString("GetIdFieldFromTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [{0}] FROM [{1}] .
        /// </summary>
        internal static string GetIdFieldIsString {
            get {
                return ResourceManager.GetString("GetIdFieldIsString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [FileName] FROM ImagePointers 
        ///    WHERE Id = @pointerID.
        /// </summary>
        internal static string GetImagePointerFilename {
            get {
                return ResourceManager.GetString("GetImagePointerFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Id FROM ImagePointers 
        ///    WHERE TrackablesId = @trackablesId 
        ///    AND ABS(TrackablesRecordVersion) = @recordVersion 
        ///    AND PageNumber = @pageNumber
        ///    AND [FileName] = @fileName.
        /// </summary>
        internal static string GetImagePointerId {
            get {
                return ResourceManager.GetString("GetImagePointerId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT p.Id FROM ImagePointers p
        ///INNER JOIN  Userlinks ON p.TrackablesId = Userlinks.TrackablesId
        ///WHERE (UserLinks.IndexTable = @tableName) 
        ///  AND (UserLinks.IndexTableId = @tableId) 
        ///  AND (UserLinks.AttachmentNumber = @attachmentNumber)
        ///  AND (p.TrackablesRecordVersion &lt; 0)
        ///  AND (p.PageNumber = @pageNumber).
        /// </summary>
        internal static string GetImagePointerIdByAttachment {
            get {
                return ResourceManager.GetString("GetImagePointerIdByAttachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Id FROM ImagePointers WHERE TrackablesId = @trackablesId 
        ///    .
        /// </summary>
        internal static string GetImagePointerIdForOrphan {
            get {
                return ResourceManager.GetString("GetImagePointerIdForOrphan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, ISNULL(UserLinks.AttachmentNumber, 1) AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.OfficialRecord, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetLastAttachment {
            get {
                return ResourceManager.GetString("GetLastAttachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 1 [RecordVersion] FROM [Trackables] WHERE [ID] = @trackablesID ORDER BY [RecordVersion] DESC.
        /// </summary>
        internal static string GetLastVersionNumberForTrackable {
            get {
                return ResourceManager.GetString("GetLastVersionNumberForTrackable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Item, ItemValue FROM Settings WHERE Section = &apos;OutlookProperty&apos;.
        /// </summary>
        internal static string GetMailItemChanges {
            get {
                return ResourceManager.GetString("GetMailItemChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE OutputSettings SET NextDocNum = @nextDocNum WHERE Id = @Id AND NextDocNum = @currentDocNum.
        /// </summary>
        internal static string GetNextDocumentNumber {
            get {
                return ResourceManager.GetString("GetNextDocumentNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRANSACTION
        ///SELECT TOP 1 NextTrackablesId FROM SysNextTrackable WITH (TABLOCKX)
        ///UPDATE SysNextTrackable SET NextTrackablesId = NextTrackablesId + 1 
        ///COMMIT TRANSACTION.
        /// </summary>
        internal static string GetNextTrackableNumber {
            get {
                return ResourceManager.GetString("GetNextTrackableNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(Id) 
        ///  FROM Annotations
        /// WHERE TableId = @pointerId
        ///   AND [Table] = @noteTable.
        /// </summary>
        internal static string GetNoteCount {
            get {
                return ResourceManager.GetString("GetNoteCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT a.Id, a.[Table], a.TableId, a.NoteDateTime, a.Annotation, s.UserId AS UserId, 
        ///	CASE WHEN s.DisplayName IS NOT NULL AND s.DisplayName &gt; &apos;&apos; THEN s.DisplayName 
        ///         WHEN a.DeskOf IS NOT NULL AND a.DeskOf &gt; &apos;&apos; THEN a.DeskOf 
        ///		 ELSE a.UserName
        ///	END AS UserName
        ///FROM Annotations a LEFT JOIN SecureUser s ON s.UserName = a.UserName
        /// WHERE a.TableId = @pointerId
        ///   AND a.[Table] = @noteTable.
        /// </summary>
        internal static string GetNotes {
            get {
                return ResourceManager.GetString("GetNotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [OfficialRecordHandling] 
        ///FROM [Tables]
        ///WHERE [TableName] = @tableName.
        /// </summary>
        internal static string GetOfficialRecordSettingForTable {
            get {
                return ResourceManager.GetString("GetOfficialRecordSettingForTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT @orphanId = (ISNULL(
        ///(SELECT TOP 1 Id FROM Trackables 
        /// WHERE (Id {0} @orphanId)
        ///  AND (Trackables.Orphan &lt;&gt; 0) AND (Trackables.Orphan IS NOT NULL)
        /// ORDER BY Trackables.Id {1}),0))
        ///
        ///SELECT Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackable [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetOrphan {
            get {
                return ResourceManager.GetString("GetOrphan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.OfficialRecord, Volumes.ImageTableName AS ImageTableName, [System].RenameOnScan AS RenameOnScan, 
        ///    Attachments.ScanDirectoriesId, At [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetOrphanByPointerId {
            get {
                return ResourceManager.GetString("GetOrphanByPointerId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Trackables.Id AS TrackablesId, Trackables.RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.OfficialRecord, Volumes.ImageTableName AS ImageTableName, Attachments.ScanDirectoriesId, Attachments.PointerId AS PointerId, 
        ///    [Syst [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetOrphansByScanBatchesId {
            get {
                return ResourceManager.GetString("GetOrphansByScanBatchesId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Trackables.Id AS TrackablesId, Trackables.RecordVersion, PageNumber, Pages AS PageCount, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.OfficialRecord, Volumes.ImageTableName AS ImageTableName, PCFilesPointers.ScanDirectoriesId, PCFilesPointers.Id AS PointerId, 
        ///    [System].P [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetOrphansForPCFilesPointers {
            get {
                return ResourceManager.GetString("GetOrphansForPCFilesPointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT o.Id, o.DefaultOutputSettingsId, o.DirectoriesId, o.FileExtension, o.NextDocNum, o.VolumesId, ISNULL(o.InActive, 0) AS InActive, 
        ///     ISNULL(v.Active, 0) AS VolumeActive, v.[Name] AS VolumeName, v.ImageTableName AS ImageTableName, v.DirDiskMBLimitation, v.DirCountLimitation, d.DirFullFlag,
        ///    s.PhysicalDriveLetter + CAST(v.PathName AS VARCHAR(260)) + ISNULL(d.Path,&apos;&apos;) + &apos;\&apos; AS FullPath 
        ///FROM OutputSettings o
        ///INNER JOIN     Directories d ON d.Id = o.DirectoriesId 
        ///INNER JOIN         Volumes v O [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetOutputSetting {
            get {
                return ResourceManager.GetString("GetOutputSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT o.Id, o.DefaultOutputSettingsId, o.DirectoriesId, o.FileExtension, o.NextDocNum, o.VolumesId, ISNULL(o.InActive, 0) AS InActive, 
        ///     ISNULL(v.Active, 0) AS VolumeActive, v.[Name] AS VolumeName, v.ImageTableName AS ImageTableName, v.DirDiskMBLimitation, v.DirCountLimitation, d.DirFullFlag,
        ///    s.PhysicalDriveLetter + CAST(v.PathName AS VARCHAR(260)) + ISNULL(d.Path,&apos;&apos;) + &apos;\&apos; AS FullPath 
        ///FROM OutputSettings o
        ///INNER JOIN     Directories d ON d.Id = o.DirectoriesId 
        ///INNER JOIN         Volumes v O [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetOutputSettingByDirectoriesId {
            get {
                return ResourceManager.GetString("GetOutputSettingByDirectoriesId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT o.Id, o.DefaultOutputSettingsId, o.DirectoriesId, o.FileExtension, o.NextDocNum, o.VolumesId, ISNULL(o.InActive, 0) AS InActive, 
        ///     ISNULL(v.Active, 0) AS VolumeActive, v.[Name] AS VolumeName, v.ImageTableName AS ImageTableName, v.DirDiskMBLimitation, v.DirCountLimitation, d.DirFullFlag,
        ///    s.PhysicalDriveLetter + CAST(v.PathName AS VARCHAR(260)) + ISNULL(d.Path,&apos;&apos;) + &apos;\&apos; AS FullPath 
        ///FROM OutputSettings o
        ///LEFT  JOIN     Directories d ON d.Id = o.DirectoriesId 
        ///INNER JOIN         Volumes v O [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetOutputSettingWithoutDirectory {
            get {
                return ResourceManager.GetString("GetOutputSettingWithoutDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(*) FROM SecureUserGroup 
        ///INNER JOIN SecureUser ON SecureUserGroup.UserID = SecureUser.UserID 
        ///INNER JOIN SecureObject 
        ///    INNER JOIN SecureObjectPermission ON SecureObject.SecureObjectID = SecureObjectPermission.SecureObjectID 
        ///    INNER JOIN SecurePermission ON SecureObjectPermission.PermissionID = SecurePermission.PermissionID 
        ///ON SecureUserGroup.GroupID = SecureObjectPermission.GroupID
        ///WHERE  SecureObject.Name = @tableName AND SecureObject.BaseID &gt; 0 
        ///  AND (SecureUserGroup.UserID =  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPermissionChildAttachments {
            get {
                return ResourceManager.GetString("GetPermissionChildAttachments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT SecurePermission.Permission
        ///      FROM SecureObjectPermission 
        ///INNER JOIN SecureObject ON SecureObjectPermission.SecureObjectID = SecureObject.SecureObjectID 
        ///INNER JOIN SecurePermission ON SecureObjectPermission.PermissionID = SecurePermission.PermissionID 
        ///LEFT OUTER JOIN SecureUserGroup ON SecureObjectPermission.GroupID = SecureUserGroup.GroupID
        ///     WHERE (SecureObjectPermission.PermissionID = 4 AND SecureObject.SecureObjectTypeID = 11 AND SecureObject.BaseID &gt; 0)
        ///       AND (Secur [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPermissionsAnyVolumeAdd {
            get {
                return ResourceManager.GetString("GetPermissionsAnyVolumeAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT SecurePermission.Permission, SecureObject.SecureObjectTypeID
        ///    FROM SecureUserGroup 
        ///INNER JOIN SecureUser ON SecureUserGroup.UserID = SecureUser.UserID 
        ///INNER JOIN SecureObject 
        ///    INNER JOIN SecureObjectPermission ON SecureObject.SecureObjectID = SecureObjectPermission.SecureObjectID 
        ///    INNER JOIN SecurePermission ON SecureObjectPermission.PermissionID = SecurePermission.PermissionID 
        ///ON SecureUserGroup.GroupID = SecureObjectPermission.GroupID
        ///WHERE  SecureObject.Name = @tableN [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPermissionsAttachment {
            get {
                return ResourceManager.GetString("GetPermissionsAttachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT SecurePermission.Permission
        ///      FROM SecureObjectPermission 
        ///INNER JOIN SecureObject ON SecureObjectPermission.SecureObjectID = SecureObject.SecureObjectID 
        ///INNER JOIN SecurePermission ON SecureObjectPermission.PermissionID = SecurePermission.PermissionID 
        ///LEFT OUTER JOIN SecureUserGroup ON SecureObjectPermission.GroupID = SecureUserGroup.GroupID
        ///     WHERE ((SecureObjectPermission.PermissionID = 1 OR SecureObjectPermission.PermissionID = 3 OR SecureObjectPermission.PermissionID = 4         /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPermissionsVolume {
            get {
                return ResourceManager.GetString("GetPermissionsVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [{0}] FROM [{1}] WHERE [{2}] = @upperTableFieldValue
        ///.
        /// </summary>
        internal static string GetRelatedChildRecords {
            get {
                return ResourceManager.GetString("GetRelatedChildRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT     dbo.SLRequestor.TableName, dbo.SLRequestor.TableId, dbo.SLRequestor.Status, dbo.TrackingStatus.TrackedTable, --TRACK_CONTAINER_ID, 
        ///                      TRACK_CONTAINER_DESCRIPTION1 as DescFieldName1, TRACK_CONTAINER_DESCRIPTION2 as DescFieldName2, dbo.SLRequestor.DateRequested, dbo.Employees.Name,
        ///                      dbo.SLRequestor.EmployeeID, dbo.SLRequestor.Priority, dbo.SLRequestor.DateNeeded, dbo.SLRequestor.FileRoomOrder, dbo.SLRequestor.Instructions, 
        ///                      dbo.SLReq [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetRequests {
            get {
                return ResourceManager.GetString("GetRequests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   SELECT  SecurePermission.Permission, SecureObject.SecureObjectTypeID, SecureObject.Name
        ///    FROM  SecureUserGroup INNER JOIN
        ///          SecureUser ON SecureUserGroup.UserID = SecureUser.UserID INNER JOIN
        ///          SecureObject INNER JOIN
        ///          SecureObjectPermission ON SecureObject.SecureObjectID = SecureObjectPermission.SecureObjectID INNER JOIN
        ///          SecurePermission ON SecureObjectPermission.PermissionID = SecurePermission.PermissionID ON 
        ///          SecureUserGroup.GroupID = SecureObjectPe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetRetentionPermissionsForUser {
            get {
                return ResourceManager.GetString("GetRetentionPermissionsForUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   SELECT  SecurePermission.Permission, SecureObject.SecureObjectTypeID, SecureObject.Name
        ///    FROM  SecureUserGroup INNER JOIN
        ///          SecureUser ON SecureUserGroup.UserID = SecureUser.UserID INNER JOIN
        ///          SecureObject INNER JOIN
        ///          SecureObjectPermission ON SecureObject.SecureObjectID = SecureObjectPermission.SecureObjectID INNER JOIN
        ///          SecurePermission ON SecureObjectPermission.PermissionID = SecurePermission.PermissionID ON 
        ///          SecureUserGroup.GroupID = SecureObjectPe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetRetentionPermissionsForUser1 {
            get {
                return ResourceManager.GetString("GetRetentionPermissionsForUser1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [ItemValue] FROM SETTINGS WHERE [Section]=@section AND [Item]=@item.
        /// </summary>
        internal static string GetSettings {
            get {
                return ResourceManager.GetString("GetSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @value as int
        ///
        ///SELECT @value = (SELECT [Attachments] FROM [Tables] WHERE [TableName] = @tableName)
        ///SELECT @value = AVG(ISNULL(@value , 0))
        ///SELECT @value .
        /// </summary>
        internal static string GetTableHasImaging {
            get {
                return ResourceManager.GetString("GetTableHasImaging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [LowerTableName], [LowerTableFieldName], Tables.IDFieldName
        ///FROM [Relationships] 
        ///INNER JOIN Tables ON Tables.TableName = Relationships.LowerTableName
        ///WHERE [Relationships].[UpperTableName] = @tableName.
        /// </summary>
        internal static string GetTableRelationships {
            get {
                return ResourceManager.GetString("GetTableRelationships", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT IndexTableId FROM Userlinks WHERE 0=1.
        /// </summary>
        internal static string GetUserlinkSize {
            get {
                return ResourceManager.GetString("GetUserlinkSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT UserName, FullName, DisplayName FROM SecureUser WHERE UserId = @userId.
        /// </summary>
        internal static string GetUserName {
            get {
                return ResourceManager.GetString("GetUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Tables.TableName AS IndexTable, UserLinks.IndexTableId, UserLinks.AttachmentNumber AS AttachmentNumber, 
        ///    Trackables.Id AS TrackablesId, ABS(Trackables.RecordVersion) AS RecordVersion, Attachments.PageNumber AS PageNumber, 
        ///    Trackables.RecordTypesId AS RecordType, Trackables.Orphan, Trackables.CheckedOut, Trackables.CheckedOutDate, 
        ///    Trackables.CheckedOutUser, Trackables.CheckedOutUserId, Trackables.CheckedOutFolder, Trackables.CheckedOutIP, Trackables.CheckedOutMAC, 
        ///    Trackables.Offi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetVersion {
            get {
                return ResourceManager.GetString("GetVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT  SecurePermission.Permission
        ///    FROM  SecureUserGroup INNER JOIN
        ///          SecureUser ON SecureUserGroup.UserID = SecureUser.UserID INNER JOIN
        ///          SecureObject INNER JOIN
        ///          SecureObjectPermission ON SecureObject.SecureObjectID = SecureObjectPermission.SecureObjectID INNER JOIN
        ///          SecurePermission ON SecureObjectPermission.PermissionID = SecurePermission.PermissionID ON 
        ///          SecureUserGroup.GroupID = SecureObjectPermission.GroupID
        ///   WHERE (SecureUser.UserID = @userI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetViewPermissionsForUser {
            get {
                return ResourceManager.GetString("GetViewPermissionsForUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Volumes.*, SystemAddresses.PhysicalDriveLetter, 
        ///    SystemAddresses.PhysicalDriveLetter + CAST(Volumes.PathName AS VARCHAR(260)) AS FullPath 
        ///FROM [Volumes] 
        ///INNER JOIN SystemAddresses ON Volumes.SystemAddressesId = SystemAddresses.Id 
        ///WHERE Volumes.Id = @Id.
        /// </summary>
        internal static string GetVolumeByID {
            get {
                return ResourceManager.GetString("GetVolumeByID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   SELECT VolumesId FROM Directories WHERE Id = @Id
        ///.
        /// </summary>
        internal static string GetVolumeIdFromDirectories {
            get {
                return ResourceManager.GetString("GetVolumeIdFromDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 1 [VolumesID] FROM [OutputSettings] WHERE [Id] = @Id.
        /// </summary>
        internal static string GetVolumeIDFromOutputSetting {
            get {
                return ResourceManager.GetString("GetVolumeIDFromOutputSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Annotations ([TableId], [Table], [Annotation], [DeskOf], [NoteDateTime], [UserName])
        ///VALUES (@tableId, &apos;REDLINE&apos;, @annotation, @userName, getdate(), @userName)
        ///.
        /// </summary>
        internal static string InsertAnnotation {
            get {
                return ResourceManager.GetString("InsertAnnotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [SLAuditConfData] ([TableName], [TableId], [OperatorsId], [NetworkLoginName], [Domain], [ComputerName], [MacAddress], [IP], [AccessDateTime], [ModuleName]) 
        ///SELECT TableName, @tableId, @userName, @networkUserName, @domain, @computerName, @macAddress, @ipAddress, getdate(), @action
        ///FROM   Tables
        ///WHERE  TableName = @tableName   
        ///  AND (AuditAttachments &lt;&gt; 0) AND (AuditAttachments IS NOT NULL) .
        /// </summary>
        internal static string InsertAuditConfData {
            get {
                return ResourceManager.GetString("InsertAuditConfData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [SLAuditUpdChildren] 
        ///      ([SLAuditUpdatesId], [TableName], [TableId]) 
        ///SELECT @auditUpdateId, TableName, @tableId  
        ///FROM   Tables
        ///WHERE  TableName = @tableName   
        ///.
        /// </summary>
        internal static string InsertAuditUpdateChildren {
            get {
                return ResourceManager.GetString("InsertAuditUpdateChildren", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [SLAuditUpdates] 
        ///      ([TableName], [TableId], [OperatorsId], [NetworkLoginName], [Domain], [ComputerName], 
        ///       [MacAddress], [IP], [Module], [Action], [DataBefore], [DataAfter], [ActionType], [UpdateDateTime]) 
        ///SELECT TableName, @tableId, @userName, @networkUserName, @domain, @computerName, 
        ///       @macAddress, @ipAddress, @module, @action, @dataBefore, @dataAfter, @actionType, getdate() 
        ///FROM   Tables
        ///WHERE  TableName = @tableName   
        ///  AND (AuditAttachments &lt;&gt; 0) AND (AuditAttachm [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InsertAuditUpdates {
            get {
                return ResourceManager.GetString("InsertAuditUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [SLCollections] ([Name], [Operator], [CreateDate]) VALUES (@userId, @userId, getdate())
        ///SELECT SCOPE_IDENTITY()
        ///
        ///.
        /// </summary>
        internal static string InsertCollection {
            get {
                return ResourceManager.GetString("InsertCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [SLCollectionItems] ([CollectionId], [Ticket], [Table], [TableId], [Index], [AttachmentType], [DisplayText], [Extension], [UseOverlay], [TableUserName]) 
        ///SELECT @collectionId, @ticket, TableName, @tableId, @attachmentNumber, @versionNumber, @displayText, @extension, @useOverlay, UserName FROM Tables WHERE TableName = @tableName
        ///.
        /// </summary>
        internal static string InsertCollectionItem {
            get {
                return ResourceManager.GetString("InsertCollectionItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO ImagePointers (TrackablesId, TrackablesRecordVersion, ScanDirectoriesId, ScanSequence, ScanDateTime, 
        ///                           FileName, PageNumber, ImageHeight, ImageWidth, ImageSize, PageCount, OrgFullPath, OrgFileName)
        ///VAlUES                    (@trackableId, @versionNumber, @directoriesId, 1, getdate(), 
        ///                           @fileName, @pageNumber, @imageHeight, @imageWidth, @imageSize, @pageCount, @orgFullPath, @orgFileName)
        ///SELECT SCOPE_IDENTITY()                          .
        /// </summary>
        internal static string InsertImagePointer {
            get {
                return ResourceManager.GetString("InsertImagePointer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [{0}] (FileExtension, TrackableType) VALUES (@fileExtension, @trackableType)
        ///SELECT SCOPE_IDENTITY()
        ///.
        /// </summary>
        internal static string InsertImageTableRecords {
            get {
                return ResourceManager.GetString("InsertImageTableRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [Directories]([Description], [DirFullFlag], [Path], [VolumesID])
        ///VALUES (@description, @dirFullFlag, @path, @volumesID)
        ///SELECT SCOPE_IDENTITY()
        ///.
        /// </summary>
        internal static string InsertNewDirectory {
            get {
                return ResourceManager.GetString("InsertNewDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Annotations ([Table], TableId, NoteDateTime, Annotation, UserName, DeskOf)
        ///VALUES                  (@noteTable, @pointerId, getdate(), @Memo, @userName, @displayName)
        ///SELECT SCOPE_IDENTITY().
        /// </summary>
        internal static string InsertNote {
            get {
                return ResourceManager.GetString("InsertNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO PCFilesPointers (TrackablesId, TrackablesRecordVersion, Pages, FileName, ScanDirectoriesId, OrgFullPath, OrgFileName, ScanDateTime)
        ///VAlUES                      (@trackableId, @versionNumber, 1, @fileName, @directoriesId, @orgFullPath, @orgFileName, getdate()).
        /// </summary>
        internal static string InsertPCFilePointer {
            get {
                return ResourceManager.GetString("InsertPCFilePointer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO ScanBatches (BatchStartDateTime, PageCount, DocumentCount, AutoIndexedCount, LastScanSequence, UserName)
        ///VALUES                  (getdate(), @pageCount, 1, 1, 1, @userName)
        ///SELECT SCOPE_IDENTITY().
        /// </summary>
        internal static string InsertScanBatch {
            get {
                return ResourceManager.GetString("InsertScanBatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS(SELECT 1 FROM Userlinks WHERE IndexTable = @tableName AND IndexTableId = @tableId AND AttachmentNumber = @attachmentNumber) BEGIN
        ///	IF EXISTS(SELECT 1 FROM Trackables WHERE Id = (SELECT TrackablesId FROM Userlinks WHERE IndexTable = @tableName AND IndexTableId = @tableId AND AttachmentNumber = @attachmentNumber)) BEGIN
        ///		SET @attachmentNumber = (SELECT TOP 1 AttachmentNumber + 1 FROM Userlinks WHERE IndexTable = @tableName AND IndexTableId = @tableId ORDER BY AttachmentNumber DESC)
        ///
        ///		IF (SELEC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InsertTrackablesUserlinks {
            get {
                return ResourceManager.GetString("InsertTrackablesUserlinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @attachmentNumber INT
        ///
        ///SELECT @attachmentNumber = 
        ///    (SELECT TOP 1 UserLinks.AttachmentNumber FROM UserLinks 
        ///       WHERE (UserLinks.IndexTable = @tableName) 
        ///        AND (UserLinks.IndexTableId = @tableId) 
        ///       ORDER BY UserLinks.AttachmentNumber DESC) + 1
        ///
        ///SELECT @attachmentNumber = AVG(ISNULL(@attachmentNumber, 1))
        ///
        ///INSERT INTO Userlinks (TrackablesId, RecordVersion, IndexTableId, IndexTable, AttachmentNumber, VersionUpdated)
        ///	VALUES (@trackableId, 1, @tableId, @tableName, @attac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InsertUserlinkForOrphan {
            get {
                return ResourceManager.GetString("InsertUserlinkForOrphan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Userlinks (TrackablesId, RecordVersion, IndexTableId, IndexTable, AttachmentNumber, VersionUpdated)
        ///VALUES (@trackableId, @versionNumber, @tableId, @tableName, @attachmentNumber, 1)
        ///.
        /// </summary>
        internal static string InsertUserlinks {
            get {
                return ResourceManager.GetString("InsertUserlinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Invalid {
            get {
                object obj = ResourceManager.GetObject("Invalid", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap InvalidThumb {
            get {
                object obj = ResourceManager.GetObject("InvalidThumb", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap InvalidThumb1 {
            get {
                object obj = ResourceManager.GetObject("InvalidThumb1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT ISNULL((SELECT TOP 1 ABS(Trackables.RecordVersion) AS RecordVersion
        ///FROM Trackables
        ///INNER JOIN Userlinks ON Trackables.Id = Userlinks.TrackablesId 
        ///WHERE (UserLinks.IndexTable = @tableName) 
        ///  AND (UserLinks.IndexTableId = @tableId)
        ///  AND (UserLinks.AttachmentNumber = @attachmentNumber)   
        ///  AND (Trackables.RecordVersion &lt; 0)
        ///ORDER BY UserLinks.AttachmentNumber DESC, RecordVersion DESC), 0).
        /// </summary>
        internal static string IsCheckedOut {
            get {
                return ResourceManager.GetString("IsCheckedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT ISNULL((SELECT TOP 1 ABS(Trackables.RecordVersion) AS RecordVersion
        ///FROM Trackables
        ///INNER JOIN Userlinks ON Trackables.Id = Userlinks.TrackablesId 
        ///WHERE (UserLinks.IndexTable = @tableName) 
        ///  AND (UserLinks.IndexTableId = @tableId)
        ///  AND (Trackables.CheckedOutUserId = @userId)
        ///  AND (UserLinks.AttachmentNumber = @attachmentNumber)   
        ///  AND (Trackables.RecordVersion &lt; 0)
        ///ORDER BY UserLinks.AttachmentNumber DESC, RecordVersion DESC), 0).
        /// </summary>
        internal static string IsCheckedOutToMe {
            get {
                return ResourceManager.GetString("IsCheckedOutToMe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [RetentionInactivityActive] FROM [Tables] WHERE [TableName] = @TableName.
        /// </summary>
        internal static string IsInactivityOnForTable {
            get {
                return ResourceManager.GetString("IsInactivityOnForTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ISNULL((SELECT CAST(ISNULL(Locations.RequestFieldNameToken,0) AS int) + CAST(ISNULL(TrackingStatus.EmployeesId, 0) AS BIT) AS Requestable
        ///FROM         Locations RIGHT OUTER JOIN
        ///                      TrackingStatus ON Locations.Id = CAST(TrackingStatus.LocationsId AS INT) 
        ///WHERE     (TrackingStatus.TrackedTableId = [@ViewName].[@pKey]) AND (TrackingStatus.TrackedTable = &apos;@TableName&apos;)),0) as Requestable.
        /// </summary>
        internal static string isRequestable {
            get {
                return ResourceManager.GetString("isRequestable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [RetentionPeriodActive] FROM [Tables] WHERE [TableName] = @TableName.
        /// </summary>
        internal static string IsRetentionOnForTable {
            get {
                return ResourceManager.GetString("IsRetentionOnForTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  SELECT COUNT(*) FROM SecureObjectPermission 
        ///LEFT OUTER JOIN SecureUserGroup ON SecureObjectPermission.GroupID = SecureUserGroup.GroupID 
        ///  WHERE SecureObjectPermission.SecureObjectID = 1 AND SecureObjectPermission.PermissionID = 1 
        ///    AND (SecureUserGroup.UserID = @userId OR SecureObjectPermission.GroupID = -1)
        ///.
        /// </summary>
        internal static string IsUserInAdministratorGroup {
            get {
                return ResourceManager.GetString("IsUserInAdministratorGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] LEADTOOLSLICENSE {
            get {
                object obj = ResourceManager.GetObject("LEADTOOLSLICENSE", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Trackables 
        ///SET OfficialRecord = 0,
        ///    OfficialRecordReconciliation = 0
        ///FROM   Trackables               
        ///INNER JOIN Userlinks ON Trackables.Id = Userlinks.TrackablesId 
        ///WHERE (UserLinks.IndexTable = @tableName) 
        ///  AND (UserLinks.IndexTableId = @tableId) 
        ///  AND (UserLinks.AttachmentNumber = @attachmentNumber)
        ///
        ///UPDATE Trackables 
        ///SET OfficialRecord = 1,
        ///    OfficialRecordReconciliation = 1
        ///FROM   Trackables               
        ///INNER JOIN Userlinks ON Trackables.Id = Userlinks.TrackablesId 
        ///WH [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MarkOfficialRecord {
            get {
                return ResourceManager.GetString("MarkOfficialRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap NotAvailableLarge {
            get {
                object obj = ResourceManager.GetObject("NotAvailableLarge", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF (@attachmentType = 5)
        ///BEGIN
        ///    UPDATE PCFilesPointers SET OrgFileName = @orgFileName WHERE Id = @pointerId
        ///END
        ///ELSE
        ///BEGIN
        ///    UPDATE ImagePointers SET OrgFileName = @orgFileName WHERE Id = @pointerId
        ///END
        ///.
        /// </summary>
        internal static string RenamePointerOrgFileNameById {
            get {
                return ResourceManager.GetString("RenamePointerOrgFileNameById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF (@toPageNumber &lt; @fromPageNumber)
        ///BEGIN
        ///UPDATE ImagePointers SET PageNumber = PageNumber + 1
        ///    FROM ImagePointers p
        ///    INNER JOIN  Userlinks ON p.TrackablesId = Userlinks.TrackablesId
        ///    WHERE (UserLinks.IndexTable = @tableName) 
        ///      AND (UserLinks.IndexTableId = @tableId) 
        ///      AND (UserLinks.AttachmentNumber = @attachmentNumber)
        ///      AND (p.TrackablesRecordVersion &lt; 0)
        ///      AND (p.PageNumber &gt;= @toPageNumber AND p.PageNumber &lt; @fromPageNumber)
        ///END
        ///ELSE
        ///BEGIN
        ///    UPDATE ImagePointe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReorderImagePointerPageNumbers {
            get {
                return ResourceManager.GetString("ReorderImagePointerPageNumbers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With LowerRelationships 
        ///AS (SELECT p.LowerTableName AS ChildTable, t.IdFieldName AS ChildKey, p.LowerTableFieldName AS ChildForKey, 0 AS [Level]
        ///	FROM RelationShips p INNER JOIN Tables t ON t.TableName = p.LowerTableName WHERE p.UpperTableName = @ParentTable
        ///	UNION ALL
        ///	SELECT c.LowerTableName AS ChildTable, t.IdFieldName AS ChildKey, c.LowerTableFieldName AS ChildForKey, l.[Level] + 1
        ///	FROM RelationShips c INNER JOIN LowerRelationships l ON l.ChildTable = c.UpperTableName INNER JOIN Tables t ON t.Tab [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SearchTree {
            get {
                return ResourceManager.GetString("SearchTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Annotations SET [Annotation] = @annotation, [NoteDateTime] = getdate(), 
        ///                       [DeskOf] = @userName, [UserName] = @userName 
        /// WHERE [TableId] = @tableId AND [Table] = &apos;REDLINE&apos;.
        /// </summary>
        internal static string UpdateAnnotation {
            get {
                return ResourceManager.GetString("UpdateAnnotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [SLDestructCertItems]
        ///	SET HoldReason = @holdReason, RetentionHold = @retentionHold, LegalHold = @legalHold,
        ///        RetentionCode = @retentionCode, SnoozeUntil = @snoozeUntil, DispositionFlag = @dispositionFlag,
        ///		ScheduledInactivity = @scheduledInactivity, ScheduledDestruction = @scheduledDestruction,
        ///		SLDestructionCertsID = @destructionCertsID 
        ///	WHERE [ID] = @destructionCertItemID                       
        ///.
        /// </summary>
        internal static string UpdateDestructionCertificateItem {
            get {
                return ResourceManager.GetString("UpdateDestructionCertificateItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [Directories] SET [DirFullFlag] = @flag WHERE [ID] = @Id.
        /// </summary>
        internal static string UpdateDirectoryDirFullFlag {
            get {
                return ResourceManager.GetString("UpdateDirectoryDirFullFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF (@imageTableName &lt;&gt; &apos;&apos;)
        ///BEGIN
        ///    IF (@imageTableName = &apos;NULL&apos;)
        ///    BEGIN
        ///        IF (@pageNumber = 0)
        ///        BEGIN
        ///            UPDATE ImagePointers SET FileName = @fileName, OrgFullPath = NULL, ScanDirectoriesID = @directoryId, PageCount = @pageCount WHERE Id = @Id
        ///        END
        ///        ELSE
        ///        BEGIN
        ///            UPDATE ImagePointers SET FileName = @fileName, OrgFullPath = NULL, ScanDirectoriesID = @directoryId, PageCount = @pageCount, PageNumber = @pageNumber WHERE Id = @Id
        ///        END
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpdateImagePointerFileName {
            get {
                return ResourceManager.GetString("UpdateImagePointerFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE ImagePointers SET OrgFullPath = @imageTableName WHERE (Id = @Id) 
        ///   .
        /// </summary>
        internal static string UpdateImagePointerImageTableName {
            get {
                return ResourceManager.GetString("UpdateImagePointerImageTableName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE ImagePointers SET TrackablesRecordVersion = @newVersionNumber
        ///FROM ImagePointers p
        ///INNER JOIN  Userlinks ON p.TrackablesId = Userlinks.TrackablesId
        ///WHERE (UserLinks.IndexTable = @tableName) 
        ///  AND (UserLinks.IndexTableId = @tableId) 
        ///  AND (UserLinks.AttachmentNumber = @attachmentNumber)
        ///  AND (p.TrackablesRecordVersion &lt; 0)
        ///.
        /// </summary>
        internal static string UpdateImagePointers {
            get {
                return ResourceManager.GetString("UpdateImagePointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE {0} SET ImageField = @imageField WHERE Id = @recordId.
        /// </summary>
        internal static string UpdateImageTableRecords {
            get {
                return ResourceManager.GetString("UpdateImageTableRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [Trackables] 
        ///SET [Orphan] = 0, [RecordVersion] = @newVersion, [ID] = @newTrackableID 
        ///WHERE [ID] = @oldTrackableID AND [RecordVersion] = 1
        ///.
        /// </summary>
        internal static string UpdateOrphanTrackableRecord {
            get {
                return ResourceManager.GetString("UpdateOrphanTrackableRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRY  
        ///	Begin Tran
        ///	 
        ///	UPDATE [Trackables] SET [Orphan] = 0, [RecordVersion] = 1, [ID] = @trackableId 
        ///	WHERE [ID] = @trackableId AND [RecordVersion] = 1
        ///
        ///
        ///	INSERT INTO Userlinks (TrackablesId, RecordVersion, IndexTableId, IndexTable, AttachmentNumber, VersionUpdated)
        ///			                                VALUES (@trackableId, 1, @recordId, @tableName, @attachmentNumber, 1)
        ///
        ///	commit tran
        ///
        ///END TRY  
        ///BEGIN CATCH  
        ///     Rollback Tran
        ///END CATCH.
        /// </summary>
        internal static string UpdateOrphanUserLinkAndTrackableRecord {
            get {
                return ResourceManager.GetString("UpdateOrphanUserLinkAndTrackableRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Userlinks (TrackablesId, RecordVersion, IndexTableId, IndexTable, AttachmentNumber, VersionUpdated)
        ///			                                VALUES (@trackableId, 1, @recordId, @tableName, @attachmentNumber, 1).
        /// </summary>
        internal static string UpdateOrphanUserLinkRecord {
            get {
                return ResourceManager.GetString("UpdateOrphanUserLinkRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [OutputSettings] SET [DirectoriesID] = @DirectoriesID  WHERE [ID] = @Name AND [DirectoriesID] &lt;&gt; @DirectoriesID 
        ///
        ///SELECT OutputSettings.*, 
        ///    Volumes.ImageTableName AS ImageTableName, ISNULL(Volumes.Active, 0) AS VolumeActive, 
        ///    SystemAddresses.PhysicalDriveLetter + CAST(Volumes.PathName AS VARCHAR(260)) + ISNULL(Directories.Path,&apos;&apos;) + &apos;\&apos; AS FullPath 
        ///FROM OutputSettings 
        ///INNER JOIN     Directories ON OutputSettings.DirectoriesId = Directories.Id 
        ///INNER JOIN         Volumes ON Directorie [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpdateOutputSettingWithDirectoryID {
            get {
                return ResourceManager.GetString("UpdateOutputSettingWithDirectoryID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE PCFilesPointers SET FileName = @fileName, ScanDirectoriesID = @directoryId WHERE Id = @Id.
        /// </summary>
        internal static string UpdatePCFilesPointerFileName {
            get {
                return ResourceManager.GetString("UpdatePCFilesPointerFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE PCFilesPointers SET TrackablesRecordVersion = @newVersionNumber
        ///FROM PCFilesPointers p
        ///INNER JOIN  Userlinks ON p.TrackablesId = Userlinks.TrackablesId
        ///WHERE (UserLinks.IndexTable = @tableName) 
        ///  AND (UserLinks.IndexTableId = @tableId) 
        ///  AND (UserLinks.AttachmentNumber = @attachmentNumber)
        ///  AND (p.TrackablesRecordVersion &lt; 0)
        ///.
        /// </summary>
        internal static string UpdatePCFilesPointers {
            get {
                return ResourceManager.GetString("UpdatePCFilesPointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE ImagePointers set ImagePointers.TrackablesID = @newTrackableID, ImagePointers.TrackablesRecordVersion = @newVersion 
        ///WHERE ImagePointers.TrackablesID = @oldTrackableID AND ImagePointers.TrackablesRecordVersion = 1
        ///
        ///UPDATE PCFilesPointers set PCFilesPointers.TrackablesID = @newTrackableID, PCFilesPointers.TrackablesRecordVersion = @newVersion 
        ///WHERE PCFilesPointers.TrackablesID = @oldTrackableID AND PCFilesPointers.TrackablesRecordVersion = 1.
        /// </summary>
        internal static string UpdatePointerRecordsWithNewTrackable {
            get {
                return ResourceManager.GetString("UpdatePointerRecordsWithNewTrackable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [{0}] 
        ///SET [{1}] = @retentionCode 
        ///WHERE [{2}] = @tableID
        ///.
        /// </summary>
        internal static string UpdateRetentionCodeInTable {
            get {
                return ResourceManager.GetString("UpdateRetentionCodeInTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS(SELECT 1 FROM SLIndexer 
        ///          INNER JOIN SLTextSearchItems ON SLTextSearchItems.IndexType = SLIndexer.IndexType 
        ///                                      AND SLTextSearchItems.IndexTableName = SLIndexer.IndexTableName 
        ///                                      AND SLTextSearchItems.IndexFieldName = SLIndexer.IndexFieldName
        ///          WHERE (SLIndexer.IndexType = @IndexType) 
        ///            AND (SLIndexer.IndexTableName = @IndexTableName) 
        ///            AND (SLIndexer.IndexFieldName = @IndexFieldName [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpdateSLIndexer {
            get {
                return ResourceManager.GetString("UpdateSLIndexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO SLIndexer (IndexType, IndexTableName, IndexFieldName, IndexTableID, IndexData, OrphanType, RecordVersion, PageNumber, AttachmentNumber) 
        ///     SELECT IndexType, IndexTableName, IndexFieldName, @IndexTableID, @IndexData, @OrphanType, @RecordVersion, @PageNumber, @AttachmentNumber 
        ///       FROM SLTextSearchItems
        ///      WHERE (SLTextSearchItems.IndexType = @IndexType) 
        ///        AND (SLTextSearchItems.IndexTableName = @IndexTableName) 
        ///        AND (SLTextSearchItems.IndexFieldName = @IndexFieldName [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpdateSLIndexerAdd {
            get {
                return ResourceManager.GetString("UpdateSLIndexerAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Trackables SET PageCount = PageCount + @pageCount 
        ///WHERE (Id = @trackableId)
        ///  AND ((RecordVersion = @versionNumber) OR ((RecordVersion &lt; 0) AND (CheckedOutUserId = @userId)))
        ///
        ///.
        /// </summary>
        internal static string UpdateTrackablePageCount {
            get {
                return ResourceManager.GetString("UpdateTrackablePageCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Userlinks SET AttachmentNumber = 1
        ///WHERE (UserLinks.IndexTable = @tableName) 
        ///  AND (UserLinks.IndexTableId = @tableId)
        ///  AND ((AttachmentNumber = 0) OR (AttachmentNumber IS NULL))
        ///
        ///.
        /// </summary>
        internal static string UpdateUserlinkAttachmentNumber {
            get {
                return ResourceManager.GetString("UpdateUserlinkAttachmentNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Relationships.*, [lower].IdFieldName FROM Relationships 
        ///INNER JOIN Tables [upper] ON Relationships.UpperTableName = [upper].TableName
        ///INNER JOIN Tables [lower] ON Relationships.LowerTableName = [lower].TableName
        ///WHERE LowerTableName = @tableName
        ///  AND ([upper].AuditUpdate &lt;&gt; 0      AND [upper].AuditUpdate IS NOT NULL) 
        ///  AND ([lower].AuditAttachments &lt;&gt; 0 AND [lower].AuditAttachments IS NOT NULL) .
        /// </summary>
        internal static string WalkUpRelationshipsForAuditUpdates {
            get {
                return ResourceManager.GetString("WalkUpRelationshipsForAuditUpdates", resourceCulture);
            }
        }
    }
}
